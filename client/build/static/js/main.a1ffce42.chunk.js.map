{"version":3,"sources":["components/templates/Footer.js","components/utils/Button.js","components/utils/Dropdown.js","redux/actions/toast.action.js","utils/axios.js","config.js","redux/actions/loader.action.js","redux/actions/board.action.js","redux/actions/user.action.js","redux/reducer/user.reducer.js","redux/reducer/board.reducer.js","redux/reducer/toast.reducer.js","redux/reducer/rootReducer.js","redux/reducer/loader.reducer.js","redux/store.js","utils/utils.js","components/utils/Modal.js","utils/socket.js","components/templates/modal/Notifications.js","components/templates/dropdown/ProfilMenu.js","components/templates/Header.js","components/templates/PageTemplate.js","components/templates/modal/CreateBoard.jsx","pages/Home.js","assets/images/Logo.svg","components/layouts/AuthWrapper.js","pages/Auth/Login.js","components/utils/Loader.js","pages/Auth/Register.js","components/templates/board/AddList.js","components/templates/board/TableItem.js","components/templates/dropdown/InviteMember.js","pages/Board.js","components/routes/PrivateRoute.js","router/index.js","components/templates/PageLoader.js","components/utils/Toast.js","components/templates/ToastManager.js","socket/socketManager.js","App.js","index.js"],"names":["Footer","props","button","cursor","Button","children","type","onClick","className","style","DropDown","isOpen","setIsOpen","isReponsive","maxWidthResponsive","top","right","bottom","left","topResponsive","rightResponsive","bottomResponsive","leftResponsive","dropDownRef","useRef","isBreakPoint","useMediaQuery","query","useState","contentHeight","setContentHeight","defaultStyle","transition","maxHeight","overflow","padding","transitionStyles","entering","entered","exiting","exited","useEffect","current","getBoundingClientRect","height","handleCloseDropDown","e","contains","target","window","addEventListener","removeEventListener","Transition","unmountOnExit","in","timeout","state","ref","PUSH_TOAST","REMOVE_TOAST","CLEAR_TOAST","axios","create","baseURL","responseType","LOADING","END_LOADING","loading","dispatch","payload","endLoading","CREATE_BOARD","GET_BOARD","GET_ALL_BOARD_BY_USERID","CLEAN_CURRENTBOARD","JOIN_BOARD","getAllBoardByUserID","userID","get","then","res","boards","data","catch","err","console","log","LOGIN","REMEMBER_ME","ADD_NOTIFICATION","DELETE_NOTIFICATION","deleteNotification","notificationID","deleteNotifObject","post","initialState","currentBoard","combineReducers","userReducer","action","notifications","userIndex","findIndex","invit","_id","filter","notif","boardReducer","board","members","currentUser","loaderReducer","toastReducer","toastID","toast","id","includes","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","isEmpty","value","undefined","Object","keys","length","trim","setRememberMeCookie","token","Cookies","set","maxAge","errorsManager","error","addToast","icon","info","uuid","setTimeout","pushToast","clearToastByTypes","clearToast","successToast","message","getPicturePath","model","image","Modal","hasCloseButton","isOpenContent","setIsOpenContent","modalRef","document","querySelector","handleCloseModal","CSSTransition","classNames","appear","onEntered","onExit","onExited","io","Notifications","user","useSelector","useDispatch","map","title","boardIDRequested","boardID","joinBoardObject","socket","emit","handleJoinBoard","ProfilMenu","isOpenNotification","setIsOpenNotification","fontSize","Header","isHeaderBoard","boardName","isOpenSearchBar","setIsOpenSearchBar","isOpenProfilMenu","setIsOpenProfilMenu","test","setTest","to","minWidth","width","viewBox","fill","xmlns","d","maxWidth","placeholder","src","picture","alt","pseudo","PageTemplate","pageTitle","hasHeader","isLoading","ModalCreateBoard","picturePreview","setPicturePreview","name","isPrivate","owner","newBoard","setNewBoard","handleChangePicture","a","files","pictureFile","URL","createObjectURL","picturePreviewURL","handleCreateBoard","FormData","append","errors","response","createBoard","htmlFor","backgroundImage","onChange","accept","hidden","oldNewBoard","Home","isOpenCreateBoard","setIsOpenCreateBoard","authContainer","display","justifyContent","alignItems","logo","position","AuthWrapper","ThulloLogo","Login","email","password","userLogin","setUserLogin","onSubmit","preventDefault","remember_me","login","noValidate","autoComplete","Loader","radius","color","cx","cy","r","strokeWidth","stroke","Register","emailAlreadyExist","setEmailAlreadyExist","isSignUpSuccessful","setIsSignUpSuccessful","setIsLoading","userRegister","useFormik","initialValues","confirmPassword","validationSchema","Yup","required","oneOf","values","finally","handleRegister","handleSubmit","getFieldProps","touched","AddList","isNewTable","paddingRight","TableItem","InviteMember","userSuggest","setUserSuggest","userSelected","setUserSelected","index","marginBottom","invitationObject","senderPseudo","guestUserIDList","handleSendInvation","Board","useParams","isOpenInviteMember","setIsOpenInviteMember","PrivateRoute","Component","component","rest","render","MainRouter","exact","path","PageLoader","Toast","PopupManagerStyle","transform","zIndex","listStyle","wordBreak","PopupManager","toasts","TransitionGroup","SocketManager","on","invitations","getState","joinBoard","App","ToastManager","cookie","withCredentials","remove","ReactDOM","CookiesProvider"],"mappings":"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","file":"static/js/main.a1ffce42.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// const footer = {\r\n//     clear: 'both',\r\n//     position: 'relative',\r\n//     height: '30px',\r\n//     marginTop: '-30px',\r\n//     display: 'flex',\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//     textAlign: 'center',\r\n//     fontSize: '0.9rem',\r\n// };\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <>\r\n            {/* <footer style={footer}>\r\n                <p>\r\n                    © 2021 coded by <a href=\"#\">Alex</a> , devchallenges.io\r\n                </p>\r\n            </footer> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst button = {\r\n    cursor: 'pointer',\r\n};\r\n\r\nconst Button = ({ children, type, onClick, className, style }) => {\r\n    return (\r\n        <button\r\n            type={type}\r\n            style={{ ...button, ...style }}\r\n            className={`${className}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Transition } from 'react-transition-group';\r\n\r\nconst DropDown = ({\r\n    children,\r\n    isOpen,\r\n    setIsOpen,\r\n    isReponsive = false,\r\n    maxWidthResponsive = 600,\r\n    top,\r\n    right,\r\n    bottom,\r\n    left,\r\n    topResponsive,\r\n    rightResponsive,\r\n    bottomResponsive,\r\n    leftResponsive,\r\n}) => {\r\n    const dropDownRef = useRef();\r\n    const isBreakPoint = useMediaQuery({ query: `(max-width: ${maxWidthResponsive}px)` });\r\n    const [contentHeight, setContentHeight] = useState();\r\n    const duration = 300;\r\n    const defaultStyle = {\r\n        transition: `${duration}ms ease`,\r\n        maxHeight: '0px',\r\n        overflow: 'hidden',\r\n        padding: '6px',\r\n    };\r\n    const transitionStyles = {\r\n        entering: { maxHeight: `${contentHeight}px`, overflow: 'hidden' },\r\n        entered: { maxHeight: `${contentHeight}px`, overflow: 'visible' },\r\n        exiting: { maxHeight: '0', overflow: 'hidden' },\r\n        exited: { maxHeight: '0', overflow: 'hidden' },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (dropDownRef.current)\r\n            setContentHeight(dropDownRef.current.getBoundingClientRect().height);\r\n        const handleCloseDropDown = (e) => {\r\n            if (!dropDownRef.current) return setIsOpen(false);\r\n            !dropDownRef.current.contains(e.target) && setIsOpen(false);\r\n        };\r\n        window.addEventListener('mousedown', handleCloseDropDown);\r\n        if (!dropDownRef.current) return setIsOpen(false);\r\n        if (!isOpen) {\r\n            window.removeEventListener('mousedown', handleCloseDropDown);\r\n            setContentHeight(null);\r\n        }\r\n    }, [isOpen, setIsOpen]);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`dropdown ${isReponsive && isBreakPoint ? 'dropdown-responsive' : ''}`}\r\n                style={\r\n                    isReponsive && isBreakPoint\r\n                        ? {\r\n                              top: topResponsive,\r\n                              right: rightResponsive,\r\n                              bottom: bottomResponsive,\r\n                              left: leftResponsive,\r\n                          }\r\n                        : { top, right, bottom, left }\r\n                }>\r\n                <Transition unmountOnExit in={isOpen} timeout={duration}>\r\n                    {(state) => (\r\n                        <div\r\n                            style={{\r\n                                ...defaultStyle,\r\n                                ...transitionStyles[state],\r\n                            }}>\r\n                            <div className=\"dropdown__content\" ref={dropDownRef}>\r\n                                {children}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Transition>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DropDown;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport const PUSH_TOAST = 'PUSH_TOAST';\r\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\r\nexport const CLEAR_TOAST = 'CLEAR_TOAST';\r\n\r\nexport const pushToast = (icon, info, type) => {\r\n    return (dispatch) => {\r\n        const toastID = uuid();\r\n        dispatch({ type: PUSH_TOAST, payload: { id: toastID, icon, info, type } });\r\n        setTimeout(() => {\r\n            dispatch({ type: REMOVE_TOAST, payload: toastID });\r\n        }, 6000);\r\n    };\r\n};\r\n\r\nexport const removeToast = (toastID) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: REMOVE_TOAST, payload: toastID });\r\n    };\r\n};\r\n\r\nexport const clearToast = (type) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CLEAR_TOAST, payload: type });\r\n    };\r\n};\r\n","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\nexport default axios.create({\r\n    baseURL: API_URL,\r\n    responseType: 'json',\r\n});\r\n","/**\n * FOR LOCAL\n */\n// export const API_URL = 'http://localhost:5000';\n// export const SOCKET_URL = 'http://localhost:5000';\n\n/**\n * FOR HEROKU\n */\nexport const API_URL = '';\nexport const SOCKET_URL = '';\n","export const LOADING = 'LOADING';\r\nexport const END_LOADING = 'END_LOADING';\r\n\r\nexport const loading = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: LOADING, payload: true });\r\n    };\r\n};\r\n\r\nexport const endLoading = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: END_LOADING, payload: false });\r\n    };\r\n};\r\n","import { Redirect } from 'react-router-dom';\r\nimport axios from '../../utils/axios';\r\nimport { errorsManager, successToast } from '../../utils/utils';\r\nimport { store } from '../store';\r\nimport { endLoading, loading } from './loader.action';\r\nimport { deleteNotification } from './user.action';\r\n\r\nexport const CREATE_BOARD = 'CREATE_BOARD';\r\nexport const GET_BOARD = 'GET_BOARD';\r\nexport const GET_ALL_BOARD_BY_USERID = 'GET_ALL_BOARD_BY_USERID';\r\nexport const CLEAN_CURRENTBOARD = 'CLEAN_CURRENTBOARD';\r\nexport const JOIN_BOARD = 'JOIN_BOARD';\r\n\r\nexport const createBoard = (data) => {\r\n    return (dispatch) => {\r\n        return axios\r\n            .post('/board/create', data)\r\n            .then((res) => {\r\n                console.log(res);\r\n                const board = res.data;\r\n                dispatch({ type: CREATE_BOARD, payload: board });\r\n                successToast(`Board ${board.name} create !`);\r\n            })\r\n            .catch((err) => {\r\n                const errors = err.response.data;\r\n                errorsManager(errors);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getAllBoardByUserID = (userID) => {\r\n    return (dispatch) => {\r\n        return axios\r\n            .get(`/board/getallboardbyuserid/${userID}`)\r\n            .then((res) => {\r\n                const boards = res.data;\r\n                dispatch({ type: GET_ALL_BOARD_BY_USERID, payload: boards });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getBoard = (boardID) => {\r\n    return (dispatch) => {\r\n        dispatch(loading());\r\n        return axios\r\n            .get(`/board/${boardID}`)\r\n            .then((res) => {\r\n                const boards = res.data;\r\n                dispatch({ type: GET_BOARD, payload: boards });\r\n            })\r\n            .catch((err) => {\r\n                const errors = err.response.data;\r\n                errorsManager(errors);\r\n                console.log('board id error');\r\n                // document.location = '/allboards';\r\n                <Redirect to=\"/allboards\" />;\r\n                dispatch({ type: GET_BOARD, payload: {} });\r\n            })\r\n            .finally(() => {\r\n                dispatch(endLoading());\r\n            });\r\n    };\r\n};\r\n\r\nexport const cleanCurrentBoard = (boardID) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CLEAN_CURRENTBOARD, payload: {} });\r\n    };\r\n};\r\n\r\nexport const joinBoard = (currentUser, user, board) => {\r\n    return async (dispatch) => {\r\n        const currentUser = await store.getState().userReducer;\r\n        if (currentUser._id === user._id) {\r\n            return store.dispatch(getAllBoardByUserID(currentUser._id));\r\n        }\r\n        dispatch({ type: JOIN_BOARD, payload: { currentUser, user, board } });\r\n    };\r\n};\r\n","import { Cookies } from 'react-cookie';\nimport axios from '../../utils/axios';\nimport { addToast, clearToastByTypes, errorsManager, setRememberMeCookie } from '../../utils/utils';\nimport { loading, endLoading } from './loader.action';\nimport { FiUserCheck } from 'react-icons/fi';\nimport { getAllBoardByUserID } from './board.action';\nimport { store } from '../store';\nimport userReducer from '../reducer/user.reducer';\n\nexport const LOGIN = 'LOGIN';\nexport const REMEMBER_ME = 'REMEMBER_ME';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATION';\n\nexport const login = (userLogin) => {\n    return (dispatch) => {\n        axios\n            .post('/user/login', userLogin)\n            .then((res) => {\n                const { user, remember_me } = res.data;\n                setRememberMeCookie(remember_me);\n                clearToastByTypes(['danger', 'warning']);\n                addToast(<FiUserCheck />, `Welcome ${user.pseudo} !`, 'neutral');\n                dispatch(getAllBoardByUserID(user._id));\n                return dispatch({ type: LOGIN, payload: user });\n            })\n            .catch((err) => {\n                const errors = err.response.data;\n                errorsManager(errors);\n            });\n    };\n};\n\nexport const rememberMe = () => {\n    return (dispatch) => {\n        dispatch(loading());\n        const cookie = new Cookies();\n        axios\n            .get('/user/rememberme', { withCredentials: true })\n            .then((res) => {\n                const { user, remember_me } = res.data;\n                setRememberMeCookie(remember_me);\n                addToast(<FiUserCheck />, `Welcome ${user.pseudo} !`, 'neutral');\n                dispatch(getAllBoardByUserID(user._id));\n                return dispatch({ type: REMEMBER_ME, payload: user });\n            })\n            .catch((err) => {\n                cookie.remove('REMEMBER_ME');\n                dispatch({ type: REMEMBER_ME, payload: {} });\n                console.log('RememberMe error : ' + err);\n            })\n            .finally(() => {\n                dispatch(endLoading());\n            });\n    };\n};\n\nexport const addNotification = (notifications) => {\n    return (dispatch) => {\n        console.log(notifications);\n        return dispatch({ type: ADD_NOTIFICATION, payload: notifications });\n    };\n};\n\nexport const deleteNotification = (userID, notificationID) => {\n    return (dispatch) => {\n        const deleteNotifObject = {\n            userID,\n            notificationID,\n        };\n        return axios\n            .post(`/user/delete-notification`, deleteNotifObject)\n            .then((res) => {\n                return dispatch({ type: DELETE_NOTIFICATION, payload: notificationID });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n","import { LOGIN, REMEMBER_ME, ADD_NOTIFICATION, DELETE_NOTIFICATION } from '../actions/user.action';\n\nconst initialState = {};\n\nexport default function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN:\n            return action.payload;\n        case REMEMBER_ME:\n            return action.payload;\n        case ADD_NOTIFICATION:\n            const notifications = action.payload;\n            const userIndex = notifications.findIndex((invit) => invit._id === state._id);\n            return userIndex === -1\n                ? { ...state }\n                : {\n                      ...state,\n                      notifications: [\n                          ...state.notifications,\n                          notifications[userIndex].notifications,\n                      ],\n                  };\n        case DELETE_NOTIFICATION:\n            return {\n                ...state,\n                notifications: state.notifications.filter((notif) => notif._id !== action.payload),\n            };\n        default:\n            return state;\n    }\n}\n","import {\n    GET_BOARD,\n    CREATE_BOARD,\n    GET_ALL_BOARD_BY_USERID,\n    CLEAN_CURRENTBOARD,\n    JOIN_BOARD,\n} from '../actions/board.action';\nimport { store } from '../store';\n\nconst initialState = {\n    currentBoard: {},\n    boards: [],\n};\n\nexport default function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case CREATE_BOARD:\n            return { ...state, boards: [...state.boards, action.payload] };\n        case GET_ALL_BOARD_BY_USERID:\n            return { ...state, boards: action.payload };\n        case GET_BOARD:\n            return { ...state, currentBoard: action.payload };\n        case CLEAN_CURRENTBOARD:\n            return { ...state, currentBoard: {} };\n        case JOIN_BOARD:\n            // if (action.payload.currentUser._id === action.payload.user._id)\n            //     return { ...state, boards: [...state.boards, action.payload.board] };\n            if (action.payload.board._id === state.currentBoard._id)\n                return {\n                    ...state,\n                    currentBoard: {\n                        members: [...state.currentBoard.members, action.payload.currentUser],\n                    },\n                };\n            return { ...state };\n        default:\n            return state;\n    }\n}\n","import { CLEAR_TOAST, PUSH_TOAST, REMOVE_TOAST } from '../actions/toast.action';\r\n\r\nconst initialState = [];\r\n\r\nexport default function toastReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case PUSH_TOAST:\r\n            return [...state, action.payload];\r\n        case REMOVE_TOAST:\r\n            const toastID = action.payload;\r\n            return state.filter((toast) => toast.id !== toastID);\r\n        case CLEAR_TOAST:\r\n            return state.filter((toast) => !action.payload.includes(toast.type));\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\nimport userReducer from './user.reducer';\nimport boardReducer from './board.reducer';\nimport loaderReducer from './loader.reducer';\nimport toastReducer from './toast.reducer';\n\nexport default combineReducers({ userReducer, boardReducer, loaderReducer, toastReducer });\n","import { LOADING, END_LOADING } from '../actions/loader.action';\r\n\r\nconst initialState = false;\r\n\r\nexport default function loaderReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return action.payload;\r\n        case END_LOADING:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducer/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n","import { Cookies } from 'react-cookie';\nimport { clearToast, pushToast } from '../redux/actions/toast.action';\nimport { store } from '../redux/store';\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport { FiCheckCircle } from 'react-icons/fi';\nimport { API_URL } from '../config';\n\nexport const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n};\n\nexport const setRememberMeCookie = (token) => {\n    const cookie = new Cookies();\n    cookie.set('REMEMBER_ME', token, { maxAge: 604800000 }); // 1 week ?\n};\n\nexport const errorsManager = (err) => {\n    for (const error in err) {\n        addToast(<RiErrorWarningLine />, err[error], 'danger');\n    }\n};\n\nexport const addToast = (icon, info, type) => {\n    store.dispatch(pushToast(icon, info, type));\n};\n\nexport const clearToastByTypes = (type) => {\n    store.dispatch(clearToast(type));\n};\n\nexport const successToast = (message) => {\n    clearToastByTypes(['danger', 'warning']);\n    addToast(<FiCheckCircle />, message, 'success');\n};\n\nexport const getPicturePath = (model, image) => {\n    switch (model) {\n        case 'board':\n            return `${API_URL}/board-picture/${image}`;\n        case 'user':\n            return `${API_URL}/user-picture/${image}`;\n        default:\n            console.log('Picture Path Error');\n    }\n};\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Button from '../utils/Button';\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\nconst Modal = ({ children, hasCloseButton = false, isOpen, setIsOpen }) => {\r\n    const [isOpenContent, setIsOpenContent] = useState(false);\r\n    const modalRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (isOpen) return (document.querySelector('html').style = 'overflow : hidden');\r\n        return (document.querySelector('html').style = 'overflow : visible');\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleCloseModal = (e) => {\r\n            if (!modalRef.current) return () => setIsOpen(false);\r\n\r\n            !modalRef.current.contains(e.target) && setIsOpen(false);\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleCloseModal);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleCloseModal);\r\n            document.querySelector('html').style = 'overflow : visible';\r\n        };\r\n    }, [setIsOpen]);\r\n\r\n    return (\r\n        <>\r\n            <CSSTransition\r\n                in={isOpen}\r\n                classNames=\"modal\"\r\n                appear={true}\r\n                timeout={200}\r\n                onEntered={() => setIsOpenContent(true)}\r\n                onExit={() => setIsOpenContent(false)}\r\n                onExited={() => setIsOpen(false)}\r\n                unmountOnExit>\r\n                <div className=\"modal\">\r\n                    <CSSTransition\r\n                        in={isOpenContent}\r\n                        classNames=\"modalcontent\"\r\n                        appear={true}\r\n                        timeout={300}\r\n                        unmountOnExit>\r\n                        <div ref={modalRef} className=\"modal__content\">\r\n                            {hasCloseButton && (\r\n                                <Button\r\n                                    className=\"modal__content__close\"\r\n                                    onClick={() => setIsOpen(false)}>\r\n                                    <IoClose />\r\n                                </Button>\r\n                            )}\r\n                            {children}\r\n                        </div>\r\n                    </CSSTransition>\r\n                </div>\r\n            </CSSTransition>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { io } from 'socket.io-client';\r\nimport { SOCKET_URL } from '../config';\r\n\r\nexport default io(SOCKET_URL);\r\n","import React from 'react';\r\nimport { MdNotifications, MdCheck } from 'react-icons/md';\r\nimport { IoMdTrash } from 'react-icons/io';\r\nimport Modal from '../../utils/Modal';\r\nimport { AiOutlineAppstoreAdd } from 'react-icons/ai';\r\nimport Button from '../../utils/Button';\r\nimport { isEmpty } from '../../../utils/utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteNotification, removeNotification } from '../../../redux/actions/user.action';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst Notifications = ({ isOpen, setIsOpen }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleJoinBoard = (boardID, notificationID) => {\r\n        const joinBoardObject = {\r\n            userID: user._id,\r\n            boardID,\r\n        };\r\n        socket.emit('join board', joinBoardObject);\r\n        dispatch(deleteNotification(user._id, notificationID));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal isOpen={isOpen} setIsOpen={setIsOpen} hasCloseButton={true}>\r\n                <div className=\"profilmenu__notifications\">\r\n                    <span className=\"profilmenu__notifications__top\">\r\n                        <MdNotifications className=\"profilmenu__notifications__top__icon\" />\r\n                        Notifications\r\n                    </span>\r\n                    <ul className=\"profilmenu__notifications__list\">\r\n                        {!isEmpty(user) &&\r\n                            user.notifications.map(({ _id, title, message, boardIDRequested }) => {\r\n                                return (\r\n                                    <li key={_id} className=\"profilmenu__notifications__list__item\">\r\n                                        <div className=\"profilmenu__notifications__list__item__right\">\r\n                                            <AiOutlineAppstoreAdd className=\"profilmenu__notifications__list__item__right__icon\" />\r\n                                            <div className=\"profilmenu__notifications__list__item__right__content\">\r\n                                                <span className=\"profilmenu__notifications__list__item__right__content__title\">\r\n                                                    {title}\r\n                                                </span>\r\n                                                <span className=\"profilmenu__notifications__list__item__right__content__message\">\r\n                                                    {message}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profilmenu__notifications__list__item__left\">\r\n                                            <Button\r\n                                                className=\"profilmenu__notifications__list__item__left__btn-valid\"\r\n                                                onClick={() =>\r\n                                                    handleJoinBoard(boardIDRequested, _id)\r\n                                                }>\r\n                                                <MdCheck />\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"profilmenu__notifications__list__item__left__btn-wrong\"\r\n                                                onClick={() =>\r\n                                                    dispatch(deleteNotification(user._id, _id))\r\n                                                }>\r\n                                                <IoMdTrash />\r\n                                            </Button>\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            })}\r\n                    </ul>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport { FaUserAlt } from 'react-icons/fa';\r\nimport { MdNotifications } from 'react-icons/md';\r\nimport { RiLogoutBoxRFill } from 'react-icons/ri';\r\nimport { useSelector } from 'react-redux';\r\nimport { isEmpty } from '../../../utils/utils';\r\nimport Notifications from '../modal/Notifications';\r\n\r\nconst ProfilMenu = ({ isOpen, setIsOpen }) => {\r\n    const [isOpenNotification, setIsOpenNotification] = useState(false);\r\n    const user = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <>\r\n            <Notifications isOpen={isOpenNotification} setIsOpen={setIsOpenNotification} />\r\n\r\n            <DropDown isOpen={isOpen} setIsOpen={setIsOpen} top=\"50px\" right=\"0\">\r\n                <div className=\"profilmenu\">\r\n                    <ul className=\"profilmenu__navlist\">\r\n                        <li>\r\n                            <button className=\"profilmenu__navlist__item\">\r\n                                <FaUserAlt className=\"profilmenu__navlist__item__icon\" />\r\n                                Profil\r\n                            </button>\r\n                        </li>\r\n                        <li onClick={() => setIsOpenNotification(true)}>\r\n                            <button className=\"profilmenu__navlist__item\">\r\n                                <MdNotifications className=\"profilmenu__navlist__item__icon\" />\r\n                                Notifications\r\n                                {!isEmpty(user.notifications) && (\r\n                                    <span\r\n                                        className=\"bubble-notifications\"\r\n                                        style={{\r\n                                            fontSize: user.notifications.length > 99 && '0.6rem',\r\n                                        }}>\r\n                                        {user.notifications.length > 99\r\n                                            ? '99+'\r\n                                            : user.notifications.length}\r\n                                    </span>\r\n                                )}\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"profilmenu__navlist__divider\"></li>\r\n                        <li>\r\n                            <button className=\"profilmenu__navlist__item\">\r\n                                <RiLogoutBoxRFill className=\"profilmenu__navlist__item__icon profilmenu__navlist__item__icon--logout\" />\r\n                                Logout\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </DropDown>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfilMenu;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Button from '../../components/utils/Button';\r\nimport { BsFillCaretDownFill } from 'react-icons/bs';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsGrid3X3Gap } from 'react-icons/bs';\r\nimport MediaQuery from 'react-responsive';\r\nimport DropDown from '../utils/Dropdown';\r\nimport { addToast, getPicturePath, isEmpty } from '../../utils/utils';\r\nimport ProfilMenu from './dropdown/ProfilMenu';\r\n\r\nconst Header = ({ isHeaderBoard, boardName }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [isOpenSearchBar, setIsOpenSearchBar] = useState(false);\r\n    const [isOpenProfilMenu, setIsOpenProfilMenu] = useState(false);\r\n    const [test, setTest] = useState(1);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <div className=\"header__left\">\r\n                    <Link className=\"header__left__logo\" to=\"/allboards\">\r\n                        <MediaQuery minWidth=\"650px\">\r\n                            <svg\r\n                                width=\"98\"\r\n                                height=\"29\"\r\n                                viewBox=\"0 0 98 29\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M54.3311 8.436V10.47H50.9831V21H48.4631V10.47H45.1151V8.436H54.3311ZM61.1557 10.884C61.9117 10.884 62.5837 11.052 63.1717 11.388C63.7597 11.712 64.2157 12.198 64.5397 12.846C64.8757 13.482 65.0437 14.25 65.0437 15.15V21H62.5237V15.492C62.5237 14.7 62.3257 14.094 61.9297 13.674C61.5337 13.242 60.9937 13.026 60.3097 13.026C59.6137 13.026 59.0617 13.242 58.6537 13.674C58.2577 14.094 58.0597 14.7 58.0597 15.492V21H55.5397V7.68H58.0597V12.27C58.3837 11.838 58.8157 11.502 59.3557 11.262C59.8957 11.01 60.4957 10.884 61.1557 10.884ZM76.2241 11.028V21H73.6861V19.74C73.3621 20.172 72.9361 20.514 72.4081 20.766C71.8921 21.006 71.3281 21.126 70.7161 21.126C69.9361 21.126 69.2461 20.964 68.6461 20.64C68.0461 20.304 67.5721 19.818 67.2241 19.182C66.8881 18.534 66.7201 17.766 66.7201 16.878V11.028H69.2401V16.518C69.2401 17.31 69.4381 17.922 69.8341 18.354C70.2301 18.774 70.7701 18.984 71.4541 18.984C72.1501 18.984 72.6961 18.774 73.0921 18.354C73.4881 17.922 73.6861 17.31 73.6861 16.518V11.028H76.2241ZM80.6005 7.68V21H78.0805V7.68H80.6005ZM84.9803 7.68V21H82.4603V7.68H84.9803ZM91.268 21.162C90.308 21.162 89.444 20.952 88.676 20.532C87.908 20.1 87.302 19.494 86.858 18.714C86.426 17.934 86.21 17.034 86.21 16.014C86.21 14.994 86.432 14.094 86.876 13.314C87.332 12.534 87.95 11.934 88.73 11.514C89.51 11.082 90.38 10.866 91.34 10.866C92.3 10.866 93.17 11.082 93.95 11.514C94.73 11.934 95.342 12.534 95.786 13.314C96.242 14.094 96.47 14.994 96.47 16.014C96.47 17.034 96.236 17.934 95.768 18.714C95.312 19.494 94.688 20.1 93.896 20.532C93.116 20.952 92.24 21.162 91.268 21.162ZM91.268 18.966C91.724 18.966 92.15 18.858 92.546 18.642C92.954 18.414 93.278 18.078 93.518 17.634C93.758 17.19 93.878 16.65 93.878 16.014C93.878 15.066 93.626 14.34 93.122 13.836C92.63 13.32 92.024 13.062 91.304 13.062C90.584 13.062 89.978 13.32 89.486 13.836C89.006 14.34 88.766 15.066 88.766 16.014C88.766 16.962 89 17.694 89.468 18.21C89.948 18.714 90.548 18.966 91.268 18.966Z\"\r\n                                    fill=\"#333333\"\r\n                                    className=\"header__left__logo__label\"\r\n                                />\r\n\r\n                                <path\r\n                                    d=\"M0 4C0 1.79086 1.79086 0 4 0H10C12.2091 0 14 1.79086 14 4V25C14 27.2091 12.2091 29 10 29H4C1.79086 29 0 27.2091 0 25V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__left\"\r\n                                />\r\n                                <path\r\n                                    d=\"M18 4C18 1.79086 19.7909 0 22 0H28C30.2091 0 32 1.79086 32 4V14C32 16.2091 30.2091 18 28 18H22C19.7909 18 18 16.2091 18 14V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__right\"\r\n                                />\r\n                            </svg>\r\n                        </MediaQuery>\r\n                        <MediaQuery maxWidth=\"649px\">\r\n                            <svg\r\n                                width=\"32\"\r\n                                height=\"29\"\r\n                                viewBox=\"0 0 32 29\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M0 4C0 1.79086 1.79086 0 4 0H10C12.2091 0 14 1.79086 14 4V25C14 27.2091 12.2091 29 10 29H4C1.79086 29 0 27.2091 0 25V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__left\"\r\n                                />\r\n                                <path\r\n                                    d=\"M18 4C18 1.79086 19.7909 0 22 0H28C30.2091 0 32 1.79086 32 4V14C32 16.2091 30.2091 18 28 18H22C19.7909 18 18 16.2091 18 14V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__right\"\r\n                                />\r\n                            </svg>\r\n                        </MediaQuery>\r\n                    </Link>\r\n                    {isHeaderBoard && (\r\n                        <div className=\"header__left__board\">\r\n                            <h2 className=\"header__left__board__name\">{boardName}</h2>\r\n                            <span className=\"header__left__board__divider\"></span>\r\n                            <Link to=\"/allboards\" className=\"header__left__board__btn-allboard\">\r\n                                <BsGrid3X3Gap className=\"header__left__board__btn-allboard__icons\" />\r\n                                <span className=\"header__left__board__btn-allboard__label\">\r\n                                    All board\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"header__right\">\r\n                    <MediaQuery minWidth=\"1100px\">\r\n                        <div className=\"header__right__search\">\r\n                            <input\r\n                                className=\"header__right__search__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Keyword...\"\r\n                            />\r\n                            <Button\r\n                                className=\"header__right__search__button\"\r\n                                onClick={() => {\r\n                                    addToast(<BsFillCaretDownFill />, `test ${test}`, 'success');\r\n                                    setTest(test + 1);\r\n                                }}>\r\n                                Search\r\n                            </Button>\r\n                        </div>\r\n                    </MediaQuery>\r\n                    <MediaQuery maxWidth=\"1099px\">\r\n                        <div className=\"header__right__search__responsive\">\r\n                            <Button\r\n                                className=\"header__right__search__responsive__button\"\r\n                                onClick={() => setIsOpenSearchBar(true)}>\r\n                                Search\r\n                            </Button>\r\n                            {/* {isOpenSearchBar && ( */}\r\n                            <DropDown\r\n                                left=\"-170px\"\r\n                                top=\"46px\"\r\n                                isOpen={isOpenSearchBar}\r\n                                setIsOpen={setIsOpenSearchBar}>\r\n                                <div className=\"header__right__search__responsive__dropdown__wrapper\">\r\n                                    <input\r\n                                        className={`header__right__search__responsive__dropdown__wrapper__input `}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Keyword...\"\r\n                                    />\r\n                                </div>\r\n                            </DropDown>\r\n                            {/* )} */}\r\n                        </div>\r\n                    </MediaQuery>\r\n                    <button\r\n                        className=\"header__right__profil\"\r\n                        onClick={() => setIsOpenProfilMenu(true)}>\r\n                        <img\r\n                            className=\"header__right__profil__img\"\r\n                            src={getPicturePath('user', user.picture)}\r\n                            alt=\"p\"\r\n                        />\r\n                        <span className=\"header__right__profil__name\">{user.pseudo}</span>\r\n                        <span className=\"header__right__profil__icon\">\r\n                            <BsFillCaretDownFill />\r\n                        </span>\r\n                        {!isEmpty(user.notifications) && (\r\n                            <span\r\n                                className=\"bubble-notifications\"\r\n                                style={{ fontSize: user.notifications.length > 99 && '0.6rem' }}>\r\n                                {user.notifications.length > 99 ? '99+' : user.notifications.length}\r\n                            </span>\r\n                        )}\r\n                    </button>\r\n                    <ProfilMenu isOpen={isOpenProfilMenu} setIsOpen={setIsOpenProfilMenu} />\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Header from './Header';\r\n\r\nconst PageTemplate = ({\r\n    pageTitle,\r\n    children,\r\n    isHeaderBoard = false,\r\n    boardName,\r\n    hasHeader = true,\r\n}) => {\r\n    const isLoading = useSelector((state) => state.loaderReducer);\r\n    document.title = `Thullo | ${isLoading ? 'Loading . . .' : pageTitle}`;\r\n    return (\r\n        <>\r\n            {hasHeader && <Header isHeaderBoard={isHeaderBoard} boardName={boardName} />}\r\n\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageTemplate;\r\n","import React, { useState } from 'react';\r\nimport { RiAddFill } from 'react-icons/ri';\r\nimport Modal from '../../utils/Modal';\r\nimport { MdImage, MdLock } from 'react-icons/md';\r\nimport { IoIosAddCircleOutline } from 'react-icons/io';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createBoard } from '../../../redux/actions/board.action';\r\nimport Button from '../../utils/Button';\r\n\r\nconst ModalCreateBoard = ({ isOpen, setIsOpen }) => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [picturePreview, setPicturePreview] = useState('');\r\n    const [newBoard, setNewBoard] = useState({\r\n        name: '',\r\n        picture: '',\r\n        isPrivate: false,\r\n        owner: user._id,\r\n    });\r\n\r\n    const handleChangePicture = async (e) => {\r\n        if (!e.target.files[0]) return;\r\n        const pictureFile = await e.target.files[0];\r\n        console.log(pictureFile);\r\n        setNewBoard({ ...newBoard, picture: pictureFile });\r\n        const picturePreviewURL = await URL.createObjectURL(pictureFile);\r\n        setPicturePreview(picturePreviewURL);\r\n    };\r\n\r\n    const handleCreateBoard = () => {\r\n        const data = new FormData();\r\n        data.append('name', newBoard.name);\r\n        data.append('picture', newBoard.picture);\r\n        data.append('isPrivate', newBoard.isPrivate);\r\n        data.append('owner', user._id);\r\n\r\n        dispatch(createBoard(data));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal hasCloseButton={true} isOpen={isOpen} setIsOpen={setIsOpen}>\r\n                <div className=\"createboardmodal\">\r\n                    <label\r\n                        className={`createboardmodal__input__image ${\r\n                            picturePreview ? '' : 'no-preview'\r\n                        }`}\r\n                        htmlFor=\"boardmodal_input_image\"\r\n                        style={{ backgroundImage: `url(${picturePreview})` }}>\r\n                        <div className={`${picturePreview ? 'preview-background' : ''}`}>\r\n                            <IoIosAddCircleOutline\r\n                                className={`createboardmodal__input__image__icon ${\r\n                                    picturePreview ? 'preview-active' : ''\r\n                                }`}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"boardmodal_input_image\"\r\n                            onChange={handleChangePicture}\r\n                            accept=\".png , .jpg , .jpeg\"\r\n                            hidden\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        value={newBoard.name}\r\n                        onChange={(e) => setNewBoard({ ...newBoard, name: e.target.value })}\r\n                        className=\"createboardmodal__input__name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Add board title\"\r\n                    />\r\n                    <div className=\"createboardmodal__button__wrapper\">\r\n                        <Button className=\"createboardmodal__button__wrapper__item\">\r\n                            <MdImage className=\"createboardmodal__button__wrapper__item__icon\" />{' '}\r\n                            Cover\r\n                        </Button>\r\n                        <Button\r\n                            className={`createboardmodal__button__wrapper__item ${\r\n                                newBoard.isPrivate ? 'isStateActiveCreateBoard' : ''\r\n                            }`}\r\n                            onClick={() =>\r\n                                setNewBoard((oldNewBoard) => {\r\n                                    oldNewBoard.isPrivate = !oldNewBoard.isPrivate;\r\n                                    return { ...oldNewBoard };\r\n                                })\r\n                            }>\r\n                            <MdLock className=\"createboardmodal__button__wrapper__item__icon\" />{' '}\r\n                            Private\r\n                        </Button>\r\n                    </div>\r\n                    <div className=\"createboardmodal__board\">\r\n                        <Button\r\n                            className=\"createboardmodal__board__cancel\"\r\n                            onClick={() => setIsOpen(false)}>\r\n                            Cancel\r\n                        </Button>\r\n                        <Button\r\n                            className=\"createboardmodal__board__create\"\r\n                            onClick={() => handleCreateBoard()}>\r\n                            <RiAddFill className=\"createboardmodal__board__create__icon\" />{' '}\r\n                            <span className=\"createboardmodal__board__create__label\">Create</span>\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalCreateBoard;\r\n","import React, { useState } from 'react';\r\nimport PageTemplate from '../components/templates/PageTemplate';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../components/utils/Button';\r\nimport { RiAddFill } from 'react-icons/ri';\r\nimport { useSelector } from 'react-redux';\r\nimport { getPicturePath } from '../utils/utils';\r\nimport ModalCreateBoard from '../components/templates/modal/CreateBoard.jsx';\r\nimport { v4 as uuid } from 'uuid';\r\n// REDIRIGER VERS LOGIN SI NON CONNECTE\r\nconst Home = () => {\r\n    const boards = useSelector((state) => state.boardReducer.boards);\r\n    const [isOpenCreateBoard, setIsOpenCreateBoard] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <ModalCreateBoard isOpen={isOpenCreateBoard} setIsOpen={setIsOpenCreateBoard} />\r\n\r\n            <PageTemplate pageTitle=\"Allboards\">\r\n                <div className=\"allboards\">\r\n                    <div className=\"allboards__top\">\r\n                        <h1 className=\"allboards__top__title\">All Boards</h1>\r\n                        <Button\r\n                            className=\"allboards__top__btn\"\r\n                            onClick={() => setIsOpenCreateBoard(true)}>\r\n                            <RiAddFill className=\"allboards__top__btn__icon\" />\r\n                            <span className=\"allboards__top__btn__label\">Add</span>\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"allboards__container\">\r\n                        {/* PLUS PARAMS ID PLUS TARD */}\r\n                        {/* FAIRE UN COMPOSANT POUR LES BOARDS ITEMS ? */}\r\n                        {boards.map(({ _id, name, picture, members, isPrivate, owner }) => {\r\n                            return (\r\n                                <Link\r\n                                    key={uuid()}\r\n                                    to={`/board/${_id}`}\r\n                                    className=\"allboards__container__items\">\r\n                                    <img\r\n                                        className=\"allboards__container__items__img\"\r\n                                        src={getPicturePath('board', picture)}\r\n                                        alt={`board ${name}`}\r\n                                    />\r\n                                    <span className=\"allboards__container__items__title\">\r\n                                        {name}\r\n                                    </span>\r\n                                    <ul className=\"allboards__container__items__members\">\r\n                                        {members.map(({ _id, pseudo, picture }) => {\r\n                                            return (\r\n                                                <li\r\n                                                    key={_id}\r\n                                                    className=\"allboards__container__items__members__profil\">\r\n                                                    <img\r\n                                                        src={getPicturePath('user', picture)}\r\n                                                        alt={`${pseudo} profil`}></img>\r\n                                                </li>\r\n                                            );\r\n                                        })}\r\n                                    </ul>\r\n                                </Link>\r\n                            );\r\n                        })}\r\n                    </div>\r\n                </div>\r\n            </PageTemplate>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/Logo.e207370e.svg\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isEmpty } from '../../utils/utils';\r\nimport ThulloLogo from '../../assets/images/Logo.svg';\r\n\r\nconst authContainer = {\r\n    height: '80vh',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n};\r\n\r\nconst logo = {\r\n    height: '50px',\r\n    position: 'absolute',\r\n    top: '15px',\r\n    left: '15px',\r\n};\r\n\r\nconst AuthWrapper = ({ children }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <>\r\n            {!isEmpty(user) && <Redirect to=\"/allboards\" />}\r\n            <div className=\"auth\">\r\n                <img style={logo} src={ThulloLogo} alt=\"Thullo\" />\r\n                <div style={authContainer}>{children}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { useState } from 'react';\r\nimport AuthWrapper from '../../components/layouts/AuthWrapper.js';\r\nimport Button from '../../components/utils/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../redux/actions/user.action';\r\nimport PageTemplate from '../../components/templates/PageTemplate.js';\r\n\r\nconst Login = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [userLogin, setUserLogin] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(userLogin));\r\n    };\r\n\r\n    return (\r\n        <PageTemplate pageTitle=\"Login\" hasHeader={false}>\r\n            <AuthWrapper>\r\n                <form className=\"auth__component\" onSubmit={handleLogin} noValidate>\r\n                    <h1 className=\"auth__title\">Login</h1>\r\n                    <div className=\"auth__input__wrapper\">\r\n                        <input\r\n                            className=\"auth__input\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={userLogin.email}\r\n                            autoComplete=\"on\"\r\n                            onChange={(e) => setUserLogin({ ...userLogin, email: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"auth__input__wrapper\">\r\n                        <input\r\n                            className=\"auth__input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={userLogin.password}\r\n                            onChange={(e) =>\r\n                                setUserLogin({ ...userLogin, password: e.target.value })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <Button className=\"auth__btn\">Connexion</Button>\r\n                    <p className=\"auth__has-account\">\r\n                        You don't have account ? <Link to=\"/register\">Register</Link>\r\n                    </p>\r\n                </form>\r\n            </AuthWrapper>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst primaryColorScss = '#2f80ed'; // default\r\n\r\nconst Loader = ({ radius, color = primaryColorScss }) => {\r\n    return (\r\n        <svg className=\"loader\" height={radius * 2 || 100} width={radius * 2 || 100}>\r\n            <circle\r\n                className=\"loader__inset\"\r\n                cx={radius * 0.8 || 50}\r\n                cy={radius * 0.8 || 50}\r\n                r={(radius * 0.8) / 2 || 25}\r\n                strokeWidth={radius * 0.03}\r\n                stroke={color}\r\n            />\r\n            <circle\r\n                className=\"loader__around\"\r\n                cx={radius || 50}\r\n                cy={radius || 50}\r\n                r={radius / 2 || 25}\r\n                strokeWidth={radius * 0.03}\r\n                stroke={color}\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from 'react';\nimport AuthWrapper from '../../components/layouts/AuthWrapper';\nimport Button from '../../components/utils/Button';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from '../../utils/axios';\nimport PageTemplate from '../../components/templates/PageTemplate';\nimport { addToast, clearToastByTypes, errorsManager } from '../../utils/utils';\nimport { BsBookmarkCheck } from 'react-icons/bs';\nimport Loader from '../../components/utils/Loader';\n\nconst Register = (props) => {\n    const [emailAlreadyExist, setEmailAlreadyExist] = useState({});\n    const [isSignUpSuccessful, setIsSignUpSuccessful] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleRegister = (user) => {\n        if (isLoading) return;\n        setIsLoading(true);\n        axios\n            .post('/user/register', user)\n            .then((res) => {\n                setEmailAlreadyExist({});\n                clearToastByTypes(['danger', 'warning']);\n                addToast(<BsBookmarkCheck />, 'Sign Up Successful', 'success');\n                setIsSignUpSuccessful(true);\n            })\n            .catch((err) => {\n                const error = err.response.data;\n                errorsManager(error);\n                setEmailAlreadyExist(err.response.data);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    };\n\n    const userRegister = useFormik({\n        initialValues: {\n            pseudo: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n        },\n        validationSchema: Yup.object({\n            pseudo: Yup.string().required('Required'),\n\n            email: Yup.string()\n                .required('Email address is required')\n                .email('Invalid email address'),\n\n            password: Yup.string().required('Password is required'),\n\n            confirmPassword: Yup.string()\n                .required('Please confirm your password')\n                .oneOf([Yup.ref('password'), null], 'Password must matched'),\n        }),\n        onSubmit: (values) => {\n            const user = {\n                pseudo: values.pseudo,\n                email: values.email,\n                password: values.password,\n            };\n            handleRegister(user);\n        },\n    });\n\n    return (\n        <>\n            {isSignUpSuccessful && <Redirect to=\"/login\" />}\n\n            <PageTemplate pageTitle=\"Register\" hasHeader={false}>\n                <AuthWrapper>\n                    <form\n                        className=\"auth__component\"\n                        onSubmit={userRegister.handleSubmit}\n                        noValidate>\n                        <h1 className=\"auth__title\">Register</h1>\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"text\"\n                                {...userRegister.getFieldProps('pseudo')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.pseudo && 'placeholder_active'\n                                }`}>\n                                Pseudo\n                            </span>\n                        </div>\n                        {userRegister.touched.pseudo && userRegister.errors.pseudo && (\n                            <p className=\"auth__error\">{userRegister.errors.pseudo}</p>\n                        )}\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"email\"\n                                {...userRegister.getFieldProps('email')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.email && 'placeholder_active'\n                                }`}>\n                                Email\n                            </span>\n                        </div>\n                        {userRegister.touched.email && userRegister.errors.email && (\n                            <p className=\"auth__error\">{userRegister.errors.email}</p>\n                        )}\n                        {emailAlreadyExist && (\n                            <p className=\"auth__error\">{emailAlreadyExist.message}</p>\n                        )}\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"password\"\n                                {...userRegister.getFieldProps('password')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.password && 'placeholder_active'\n                                }`}>\n                                Password\n                            </span>\n                        </div>\n                        {userRegister.touched.password && userRegister.errors.password && (\n                            <p className=\"auth__error\">{userRegister.errors.password}</p>\n                        )}\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"password\"\n                                {...userRegister.getFieldProps('confirmPassword')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.confirmPassword && 'placeholder_active'\n                                }`}>\n                                Confirm Password\n                            </span>\n                        </div>\n                        {userRegister.touched.confirmPassword &&\n                            userRegister.errors.confirmPassword && (\n                                <p className=\"auth__error\">{userRegister.errors.confirmPassword}</p>\n                            )}\n                        <Button\n                            type=\"submit\"\n                            className=\"auth__btn\"\n                            style={{ position: 'relative' }}>\n                            {isLoading ? <Loader color=\"white\" radius=\"28\" /> : 'Register'}\n                        </Button>\n                        <p className=\"auth__has-account\">\n                            You have already account ? <Link to=\"/login\">Connexion</Link>\n                        </p>\n                    </form>\n                </AuthWrapper>\n            </PageTemplate>\n        </>\n    );\n};\n\nexport default Register;\n","import React from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\n\r\nconst AddList = ({ isNewTable = false }) => {\r\n    return (\r\n        <>\r\n            {isNewTable ? (\r\n                <div style={{ paddingRight: '25px' }}>\r\n                    <button className=\"board__content__table__btn-addlist\">\r\n                        <span>Add another list</span>\r\n                        <MdAdd className=\"board__content__table__btn-addlist__icon\" />\r\n                    </button>\r\n                </div>\r\n            ) : (\r\n                <button className=\"board__content__table__btn-addlist\">\r\n                    <span>Add another list</span>\r\n                    <MdAdd className=\"board__content__table__btn-addlist__icon\" />\r\n                </button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddList;\r\n","import React from 'react';\r\nimport { BsPaperclip } from 'react-icons/bs';\r\nimport { MdComment } from 'react-icons/md';\r\nimport { HiDotsHorizontal } from 'react-icons/hi';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport Button from '../../utils/Button';\r\nimport AddList from './AddList';\r\n\r\nconst TableItem = (props) => {\r\n    return (\r\n        <div className=\"board__content__table\">\r\n            <div className=\"board__content__table__top\">\r\n                <span className=\"board__content__table__top__title\">Table Name</span>\r\n                <button className=\"board__content__table__top__btn-menu\">\r\n                    <HiDotsHorizontal />\r\n                </button>\r\n            </div>\r\n            <ul className=\"board__content__table__content\">\r\n                <li className=\"board__content__table__content__item\">\r\n                    <div className=\"board__content__table__content__item__image\"></div>\r\n                    <span className=\"board__content__table__content__item__title\">\r\n                        Github jobs challenge\r\n                    </span>\r\n                    <ul className=\"board__content__table__content__item__category\">\r\n                        <li className=\"board__content__table__content__item__category__item\">\r\n                            Design\r\n                        </li>\r\n                        <li className=\"board__content__table__content__item__category__item\">\r\n                            Concept\r\n                        </li>\r\n                    </ul>\r\n                    <div className=\"board__content__table__content__item__bottom\">\r\n                        <ul className=\"board__content__table__content__item__bottom__members\">\r\n                            <li className=\"board__content__table__content__item__bottom__members__item\"></li>\r\n                            <li>\r\n                                <Button className=\"board__content__table__content__item__bottom__members__btn-addmember\">\r\n                                    <MdAdd className=\"board__content__table__content__item__bottom__members__btn-addmember__icon\" />\r\n                                </Button>\r\n                            </li>\r\n                        </ul>\r\n\r\n                        <div className=\"board__content__table__content__item__bottom__utils\">\r\n                            <button className=\"board__content__table__content__item__bottom__utils__btn\">\r\n                                <MdComment />\r\n                                <span className=\"board__content__table__content__item__bottom__utils__btn__number\">\r\n                                    1\r\n                                </span>\r\n                            </button>\r\n                            <button className=\"board__content__table__content__item__bottom__utils__btn\">\r\n                                <BsPaperclip />\r\n                                <span className=\"board__content__table__content__item__bottom__utils__btn__number\">\r\n                                    1\r\n                                </span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </li>\r\n                <li className=\"board__content__table__content__item\"></li>\r\n\r\n                <li className=\"board__content__table__content__item\"></li>\r\n                <AddList />\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default TableItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport Button from '../../utils/Button';\r\nimport { HiOutlineSearch } from 'react-icons/hi';\r\nimport axios from '../../../utils/axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { getPicturePath, isEmpty } from '../../../utils/utils';\r\nimport { IoAddCircleOutline } from 'react-icons/io5';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst InviteMember = ({ isOpen, setIsOpen }) => {\r\n    const currentBoard = useSelector((state) => state.boardReducer.currentBoard);\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [userSuggest, setUserSuggest] = useState([]);\r\n    const [userSelected, setUserSelected] = useState([]);\r\n    // const [isOpenUsersSuggest, setIsOpenUsersSuggest] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!isEmpty(currentBoard)) {\r\n            axios\r\n                .get(`/user/all/${currentBoard._id}`)\r\n                .then((res) => {\r\n                    setUserSuggest(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [currentBoard]);\r\n\r\n    const handleSendInvation = () => {\r\n        const invitationObject = {\r\n            senderPseudo: user.pseudo,\r\n            guestUserIDList: userSelected,\r\n            boardID: currentBoard._id,\r\n            boardName: currentBoard.name,\r\n        };\r\n        socket.emit('send invitation', invitationObject);\r\n    };\r\n\r\n    const handleSelectUser = (id) => {\r\n        userSelected.findIndex((userID) => userID === id) === -1\r\n            ? setUserSelected([...userSelected, id])\r\n            : setUserSelected(userSelected.filter((userID) => userID !== id));\r\n    };\r\n\r\n    return (\r\n        <DropDown isReponsive={true} isOpen={isOpen} setIsOpen={setIsOpen} top=\"50px\">\r\n            <div className=\"invitemember\">\r\n                <span className=\"invitemember__title\">Invite to Board</span>\r\n                <p className=\"invitemember__para\">Search users you want to invite to</p>\r\n                <div className=\"invitemember__input__wrapper\">\r\n                    <input\r\n                        className=\"invitemember__input__wrapper__input\"\r\n                        placeholder=\"User...\"\r\n                        type=\"text\"\r\n                    />\r\n                    <Button className=\"invitemember__input__wrapper__btn\">\r\n                        <HiOutlineSearch />\r\n                    </Button>\r\n                </div>\r\n\r\n                <ul className=\"invitemember__suggest\">\r\n                    {userSuggest.map(({ _id, pseudo, picture }, index) => {\r\n                        return (\r\n                            <li\r\n                                key={_id}\r\n                                className=\"\"\r\n                                style={{\r\n                                    marginBottom: index === userSuggest.length - 1 ? '' : '15px',\r\n                                }}>\r\n                                <button\r\n                                    className=\"invitemember__suggest__item\"\r\n                                    onClick={() => handleSelectUser(_id)}>\r\n                                    <img\r\n                                        className=\"invitemember__suggest__item__picture\"\r\n                                        src={getPicturePath('user', picture)}\r\n                                        alt={`user ${pseudo}`}\r\n                                    />\r\n                                    <span className=\"invitemember__suggest__item__pseudo\">\r\n                                        {pseudo}\r\n                                    </span>\r\n                                    {userSelected.includes(_id) ? (\r\n                                        <FiCheckCircle className=\"invitemember__suggest__item__icon invitemember__suggest__item__icon--select\" />\r\n                                    ) : (\r\n                                        <IoAddCircleOutline className=\"invitemember__suggest__item__icon\" />\r\n                                    )}\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n                <Button\r\n                    className={`invitemember__btn-invite ${\r\n                        isEmpty(userSelected) ? 'invitemember__btn-invite--disabled' : ''\r\n                    }`}\r\n                    onClick={() => !isEmpty(userSelected) && handleSendInvation()}>\r\n                    Invite\r\n                </Button>\r\n            </div>\r\n        </DropDown>\r\n    );\r\n};\r\n\r\nexport default InviteMember;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PageTemplate from '../components/templates/PageTemplate';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { cleanCurrentBoard, getBoard } from '../redux/actions/board.action';\r\nimport Button from '../components/utils/Button';\r\nimport { HiDotsHorizontal } from 'react-icons/hi';\r\nimport { MdLock, MdAdd } from 'react-icons/md';\r\nimport TableItem from '../components/templates/board/TableItem';\r\nimport AddList from '../components/templates/board/AddList';\r\nimport { getPicturePath, isEmpty } from '../utils/utils';\r\nimport InviteMember from '../components/templates/dropdown/InviteMember';\r\n\r\nconst Board = (props) => {\r\n    const { id } = useParams();\r\n    const board = useSelector((state) => state.boardReducer.currentBoard);\r\n    const dispatch = useDispatch();\r\n    const [isOpenInviteMember, setIsOpenInviteMember] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(getBoard(id));\r\n\r\n        return () => dispatch(cleanCurrentBoard());\r\n    }, [dispatch, id]);\r\n\r\n    // CUSTOM LA SCROLLBAR\r\n\r\n    // const returnTestTable = () => {\r\n    //     const tables = [];\r\n    //     for (let i = 0; i <= 8; i++) {\r\n    //         i === 8 ? tables.push(<TableItem />) : tables.push(<TableItem />);\r\n    //     }\r\n    //     return tables;\r\n    //     // padding-right: 25px;\r\n    // };\r\n\r\n    return (\r\n        // METTRE LE NOM DU BOARD DYNAMIQUEMENT DANS LE TITRE\r\n        <>\r\n            <PageTemplate\r\n                boardName={board.name}\r\n                pageTitle={`Board - ${board.name}`}\r\n                isHeaderBoard={true}>\r\n                <div className=\"board\">\r\n                    <div className=\"board__top\">\r\n                        <div className=\"board__top__left\">\r\n                            <Button className=\"board__top__left__btn-state\">\r\n                                <MdLock className=\"board__top__left__btn-state__icon\" />\r\n                                {board.isPrivate ? 'Private' : 'Public'}\r\n                            </Button>\r\n                            <ul className=\"board__top__left__members\">\r\n                                {!isEmpty(board.members) &&\r\n                                    board.members.map(({ picture, _id, pseudo }) => {\r\n                                        return (\r\n                                            <li\r\n                                                key={_id}\r\n                                                className=\"board__top__left__members__item\">\r\n                                                <img\r\n                                                    src={getPicturePath('user', picture)}\r\n                                                    alt={`${pseudo} profil`}\r\n                                                    style={{ width: '100%' }}\r\n                                                />\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                                <li className=\"board__top__left__members__adduser-wrapper\">\r\n                                    <Button\r\n                                        className=\"board__top__left__members__btn-adduser\"\r\n                                        onClick={() => setIsOpenInviteMember(true)}>\r\n                                        <MdAdd />\r\n                                    </Button>\r\n                                    <InviteMember\r\n                                        isOpen={isOpenInviteMember}\r\n                                        setIsOpen={setIsOpenInviteMember}\r\n                                    />\r\n                                </li>\r\n                            </ul>\r\n                        </div>\r\n                        <div className=\"board__top__right\">\r\n                            <Button className=\"board__top__right__btn-menu\">\r\n                                <HiDotsHorizontal className=\"board__top__right__btn-menu__icon\" />\r\n                                <span className=\"board__top__right__btn-menu__label\">\r\n                                    Show Menu\r\n                                </span>\r\n                            </Button>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"board__content\">\r\n                        <TableItem />\r\n                        <TableItem />\r\n                        <AddList isNewTable={true} />\r\n                    </div>\r\n                </div>\r\n            </PageTemplate>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { isEmpty } from '../../utils/utils';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                !isEmpty(!user) ? <Component /> : <Redirect to=\"/login\" />\r\n            }></Route>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Footer from '../components/templates/Footer';\nimport Home from '../pages/Home';\nimport Login from '../pages/Auth/Login';\nimport Register from '../pages/Auth/Register';\nimport Board from '../pages/Board';\nimport { useSelector } from 'react-redux';\nimport { isEmpty } from '../utils/utils';\nimport PrivateRoute from '../components/routes/PrivateRoute.js';\n\nconst MainRouter = (props) => {\n    const user = useSelector((state) => state.userReducer);\n    const isLoading = useSelector((state) => state.loaderReducer);\n\n    // FAIRE UNE ROUTE PRIVE POUR REDIGER VERS LOGIN SI PAS AUTH\n    // ET ETRE REDIGE SUR LA PAGE ACTUEL SANS BUG (CAR ACTULLEMENT BUG 1 FOIS SUR 5...)\n\n    return (\n        <>\n            <Router>\n                {!isLoading && isEmpty(user) && <Redirect to=\"/login\" />}\n                <Switch>\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    <PrivateRoute exact path=\"/board/:id\" component={Board} />\n                    <PrivateRoute exact path=\"/allboards\" component={Home} />\n\n                    {!isLoading && !isEmpty(user) && <Redirect to=\"/allboards\" />}\n                </Switch>\n                <Footer />\n            </Router>\n        </>\n    );\n};\n\nexport default MainRouter;\n","import React from 'react';\r\nimport Loader from '../utils/Loader';\r\n\r\nconst PageLoader = (props) => {\r\n    return (\r\n        <div className=\"pageloader\">\r\n            <Loader radius=\"280\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React from 'react';\r\n\r\nconst Toast = ({ icon, info, type, onClick, style }) => {\r\n    return (\r\n        <li style={style} className={`toast toast-${type}`} onClick={onClick}>\r\n            <div className=\"toast__icon\">{icon}</div>\r\n            <span className=\"toast__info\">{info}</span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Toast;\r\n","import React from 'react';\r\nimport Toast from '../utils/Toast';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { removeToast } from '../../redux/actions/toast.action';\r\n\r\nconst PopupManagerStyle = {\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '50%',\r\n    transform: 'translateX(-50%)',\r\n    zIndex: '9999999',\r\n    listStyle: 'none',\r\n    wordBreak: 'break-all',\r\n    maxHeight: '100vh',\r\n};\r\n\r\nconst PopupManager = (props) => {\r\n    const toasts = useSelector((state) => state.toastReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ul style={PopupManagerStyle}>\r\n            <TransitionGroup>\r\n                {toasts.map((toast, index) => {\r\n                    return (\r\n                        <CSSTransition\r\n                            // unmountOnExit\r\n                            key={index}\r\n                            appear={true}\r\n                            timeout={300}\r\n                            classNames=\"toast\">\r\n                            <Toast\r\n                                key={index + 1}\r\n                                icon={toast.icon}\r\n                                info={toast.info}\r\n                                type={toast.type}\r\n                                onClick={() => dispatch(removeToast(toast.id))}\r\n                            />\r\n                        </CSSTransition>\r\n                    );\r\n                })}\r\n            </TransitionGroup>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PopupManager;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { joinBoard } from '../redux/actions/board.action';\r\nimport { addNotification } from '../redux/actions/user.action';\r\nimport socket from '../utils/socket';\r\n\r\nconst SocketManager = (props) => {\r\n    const dispatch = useDispatch();\r\n    const currentUser = useSelector((state) => state.userReducer);\r\n\r\n    useEffect(() => {\r\n        socket.on('send invitation', (invitations) => {\r\n            dispatch(addNotification(invitations));\r\n        });\r\n        socket.on('join board', ({ user, board }) => {\r\n            dispatch(joinBoard(currentUser, user, board));\r\n        });\r\n    }, [dispatch]);\r\n\r\n    return <></>;\r\n};\r\n\r\nexport default SocketManager;\r\n","import React, { useEffect } from 'react';\nimport Router from './router/index';\nimport PageLoader from './components/templates/PageLoader';\nimport { useSelector } from 'react-redux';\nimport ToastManager from './components/templates/ToastManager';\nimport SocketManager from './socket/socketManager';\n\nconst App = (props) => {\n    const isLoading = useSelector((state) => state.loaderReducer);\n\n    useEffect(() => {\n        isLoading\n            ? (document.querySelector('html').style = 'overflow : hidden')\n            : (document.querySelector('html').style = 'overflow : visisible');\n    }, [isLoading]);\n\n    return (\n        <div className=\"app\">\n            {isLoading && <PageLoader />}\n            <SocketManager />\n            <ToastManager />\n            <Router />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './scss/index.scss';\nimport { CookiesProvider } from 'react-cookie';\nimport { rememberMe } from './redux/actions/user.action';\n\nstore.dispatch(rememberMe());\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </CookiesProvider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}