{"version":3,"sources":["components/templates/Footer.js","components/utils/Button.js","redux/actions/toast.action.js","utils/axios.js","config.js","redux/actions/loader.action.js","redux/actions/board.action.js","redux/actions/user.action.js","redux/reducer/user.reducer.js","redux/reducer/board.reducer.js","redux/reducer/toast.reducer.js","redux/actions/redirect.action.js","redux/reducer/rootReducer.js","redux/reducer/loader.reducer.js","redux/reducer/redirect.reducer.js","redux/store.js","utils/utils.js","components/utils/Dropdown.js","components/utils/Modal.js","utils/socket.js","components/templates/modal/Notifications.js","components/templates/dropdown/ProfilMenu.js","components/templates/Header.js","components/templates/PageTemplate.js","components/templates/modal/CreateBoard.jsx","components/templates/board/BoardItem.js","pages/Home.js","assets/images/Logo.svg","components/layouts/AuthWrapper.js","pages/Auth/Login.js","components/utils/Loader.js","pages/Auth/Register.js","components/templates/dropdown/InviteMember.js","pages/BoardError.js","components/templates/dropdown/PrivateOrPublic.js","components/templates/EmojiPicker.js","components/templates/EditDescription.js","components/templates/dropdown/BoardMenu.js","components/templates/board/AddList.js","components/templates/board/CardItem.js","components/templates/board/ListItem.js","components/templates/board/ListManager.js","pages/Board.js","components/routes/PrivateRoute.js","router/index.js","components/templates/PageLoader.js","components/utils/Toast.js","components/templates/ToastManager.js","socket/socketManager.js","App.js","index.js"],"names":["Footer","props","button","cursor","Button","children","type","onClick","className","style","PUSH_TOAST","REMOVE_TOAST","CLEAR_TOAST","axios","create","baseURL","responseType","LOADING","END_LOADING","loading","dispatch","payload","endLoading","CREATE_BOARD","GET_BOARD","GET_ALL_BOARD_BY_USERID","CLEAN_CURRENTBOARD","JOIN_BOARD","CHANGE_STATE","BAN_MEMBER","CHANGE_DESCRIPTION","ADD_LIST","LEAVE_BOARD","DELETE_BOARD","ADD_CARD","DELETE_LIST","getAllBoardByUserID","userID","get","then","res","boards","data","catch","err","console","log","LOGIN","REMEMBER_ME","ADD_NOTIFICATION","DELETE_NOTIFICATION","deleteNotification","notificationID","boardIDRequested","deleteNotifObject","post","initialState","currentBoard","REDIRECT","CLEAR_REDIRECT","combineReducers","userReducer","state","action","notifications","userIndex","findIndex","invit","_id","filter","notif","boardReducer","currentBoardIndex","board","currentUser","user","members","map","push","boardID","NOT_MEMBER","document","location","reload","isPrivate","memberBannedID","member","description","isEmpty","lists","listCreated","list","listID","cards","cardCreated","currentBoardResult","loaderReducer","toastReducer","toastID","toast","id","includes","redirectReducer","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","value","undefined","Object","keys","length","trim","setRememberMeCookie","token","a","Cookies","set","maxAge","errorsManager","error","addToast","icon","info","uuid","setTimeout","pushToast","clearToastByTypes","clearToast","successToast","message","getPicturePath","model","image","removeHtmlStyle","html","replaceAll","DropDown","contentRef","contentClass","allowsRef","isOpen","setIsOpen","isResponsive","maxWidthResponsive","isVertical","title","top","right","bottom","left","topResponsive","rightResponsive","bottomResponsive","leftResponsive","dropdownContentRef","useRef","currentRef","isBreakPoint","useMediaQuery","query","useState","contentSize","setContentSize","heightOrWidth","defaultStyle","transition","transitionStyles","entering","entered","exiting","exited","useEffect","current","getBoundingClientRect","height","width","handleCloseDropDown","e","contains","target","window","addEventListener","removeEventListener","Transition","unmountOnExit","in","timeout","ref","Modal","hasCloseButton","hasChoiceButton","btnConfirmMessage","btnConfirmIcon","confirmMessage","confirmFunction","isOpenContent","setIsOpenContent","modalRef","querySelector","handleCloseModal","CSSTransition","classNames","appear","onEntered","onExit","onExited","io","Notifications","useSelector","useDispatch","textAlign","marginTop","joinBoardObject","socket","emit","handleJoinBoard","ProfilMenu","isOpenNotification","setIsOpenNotification","useCookies","removeCookie","fontSize","path","Header","isHeaderBoard","boardName","isOpenSearchBar","setIsOpenSearchBar","isOpenProfilMenu","setIsOpenProfilMenu","test","setTest","to","minWidth","viewBox","fill","xmlns","d","maxWidth","placeholder","src","picture","alt","pseudo","PageTemplate","pageTitle","hasHeader","isLoading","ModalCreateBoard","picturePreview","setPicturePreview","name","owner","newBoard","setNewBoard","handleChangePicture","files","pictureFile","URL","createObjectURL","picturePreviewURL","handleCreateBoard","FormData","append","errors","response","createBoard","htmlFor","backgroundImage","onChange","accept","hidden","maxLength","oldNewBoard","BoardItem","index","slice","MEMBER_MAX_LENGTH","Home","isOpenCreateBoard","setIsOpenCreateBoard","authContainer","display","justifyContent","alignItems","logo","position","AuthWrapper","ThulloLogo","Login","email","password","userLogin","setUserLogin","onSubmit","preventDefault","login","noValidate","autoComplete","Loader","radius","color","cx","cy","r","strokeWidth","stroke","Register","emailAlreadyExist","setEmailAlreadyExist","isSignUpSuccessful","setIsSignUpSuccessful","setIsLoading","userRegister","useFormik","initialValues","confirmPassword","validationSchema","Yup","min","max","required","oneOf","values","finally","handleRegister","handleSubmit","getFieldProps","touched","InviteMember","usersToInvite","setUsersToInvite","userSelected","setUserSelected","userSearch","setUserSearch","searchValue","setSearchValue","marginBottom","invitationObject","senderPseudo","guestUserIDList","userSug","handleSendInvation","BoardError","PrivateOrPublic","handleChangeState","EmojiPicker","emoji","setEmoji","emo","character","MAX_CHARS","EditDescription","currentDescription","newDescription","setNewDescription","isOpenEmojiPicker","setIsOpenEmojiPicker","editorRef","descriptionRef","outputRef","parseValue","handleSaveDescription","innerHTML","textContent","onKeyDown","keyCode","sel","ownerDocument","defaultView","getSelection","range","getRangeAt","tabNode","createTextNode","String","fromCodePoint","insertNode","setStartAfter","setEndAfter","removeAllRanges","addRange","insertSpecialCharacter","spellCheck","onInput","contentEditable","BoardMenu","boardMenuRef","isEditDescription","setIsEditDescription","isBoardOwner","handleFormatDate","noFormatDate","createdAt","boardYear","substring","boardMontLetter","boardMonthDay","banMemberObject","handleBanMember","leaveBoardObject","handleLeaveBoard","handleDeleteBoard","AddListOrCard","isAddList","isFirstList","isFirstCard","scrollBottomReset","scrollLeftReset","addListRef","inputRef","isOpenInput","setIsOpenInput","setName","currentIsOpen","currentSetIsOpen","handleOnClick","currentListID","on","focus","closeOnClickOutside","event","handleAddListOrCard","href","CardItem","ListItem","listRef","isOpenInputAddCard","setIsOpenInputAddCard","isOpenListMenu","setIsOpenListMenu","isOpenConfirmDeleteList","setIsOpenConfirmDeleteList","handleAddCartScrollReset","scrollTop","scrollHeight","handleOpenInputAddCard","card","AddList","ListManager","boardRef","listsMemo","useMemo","paddingRight","scrollLeft","scrollWidth","connect","useParams","isOpenInviteMember","setIsOpenInviteMember","isOpenPrivateOrPublic","setIsOpenPrivateOrPublic","isOpenBoardMenu","setIsOpenBoardMenu","withCredentials","PrivateRoute","Component","component","rest","render","MainRouter","exact","Board","pathname","PageLoader","Toast","PopupManagerStyle","transform","zIndex","listStyle","wordBreak","maxHeight","PopupManager","toasts","TransitionGroup","SocketManager","invitations","getState","joinBoard","changeState","banMember","changeDescription","addList","addCard","deleteList","leaveBoard","deleteBoard","App","ToastManager","cookie","remove","ReactDOM","CookiesProvider"],"mappings":"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","file":"static/js/main.cd167e87.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// const footer = {\r\n//     clear: 'both',\r\n//     position: 'relative',\r\n//     height: '30px',\r\n//     marginTop: '-30px',\r\n//     display: 'flex',\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//     textAlign: 'center',\r\n//     fontSize: '0.9rem',\r\n// };\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <>\r\n            {/* <footer style={footer}>\r\n                <p>\r\n                    © 2021 coded by <a href=\"#\">Alex</a> , devchallenges.io\r\n                </p>\r\n            </footer> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst button = {\r\n    cursor: 'pointer',\r\n};\r\n\r\nconst Button = ({ children, type, onClick, className, style }) => {\r\n    return (\r\n        <button\r\n            type={type}\r\n            style={{ ...button, ...style }}\r\n            className={`${className}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport const PUSH_TOAST = 'PUSH_TOAST';\r\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\r\nexport const CLEAR_TOAST = 'CLEAR_TOAST';\r\n\r\nexport const pushToast = (icon, info, type) => {\r\n    return (dispatch) => {\r\n        const toastID = uuid();\r\n        dispatch({ type: PUSH_TOAST, payload: { id: toastID, icon, info, type } });\r\n        setTimeout(() => {\r\n            dispatch({ type: REMOVE_TOAST, payload: toastID });\r\n        }, 6000);\r\n    };\r\n};\r\n\r\nexport const removeToast = (toastID) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: REMOVE_TOAST, payload: toastID });\r\n    };\r\n};\r\n\r\nexport const clearToast = (type) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CLEAR_TOAST, payload: type });\r\n    };\r\n};\r\n","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\nexport default axios.create({\r\n    baseURL: API_URL,\r\n    responseType: 'json',\r\n});\r\n","/**\n * FOR LOCAL\n//  */\n// export const API_URL = 'http://localhost:5000';\n// export const SOCKET_URL = 'http://localhost:5000';\n\n/**\n * FOR HEROKU\n */\nexport const API_URL = '';\nexport const SOCKET_URL = '';\n\n// export const API_URL = 'http://c24487f3706e.ngrok.io';\n// export const SOCKET_URL = 'http://c24487f3706e.ngrok.io';\n","export const LOADING = 'LOADING';\r\nexport const END_LOADING = 'END_LOADING';\r\n\r\nexport const loading = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: LOADING, payload: true });\r\n    };\r\n};\r\n\r\nexport const endLoading = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: END_LOADING, payload: false });\r\n    };\r\n};\r\n","import axios from '../../utils/axios';\r\nimport { errorsManager, successToast } from '../../utils/utils';\r\nimport { store } from '../store';\r\nimport { endLoading, loading } from './loader.action';\r\n\r\nexport const CREATE_BOARD = 'CREATE_BOARD';\r\nexport const GET_BOARD = 'GET_BOARD';\r\nexport const GET_ALL_BOARD_BY_USERID = 'GET_ALL_BOARD_BY_USERID';\r\nexport const CLEAN_CURRENTBOARD = 'CLEAN_CURRENTBOARD';\r\nexport const JOIN_BOARD = 'JOIN_BOARD';\r\nexport const CHANGE_STATE = 'CHANGE_STATE';\r\nexport const BAN_MEMBER = 'BAN_MEMBER';\r\nexport const CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const LEAVE_BOARD = 'LEAVE_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\n\r\nexport const createBoard = (data) => {\r\n    return (dispatch) => {\r\n        return axios\r\n            .post('/board/create', data)\r\n            .then((res) => {\r\n                console.log(res);\r\n                const board = res.data;\r\n                dispatch({ type: CREATE_BOARD, payload: board });\r\n                successToast(`Board ${board.name} create !`);\r\n            })\r\n            .catch((err) => {\r\n                const errors = err.response.data;\r\n                errorsManager(errors);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getAllBoardByUserID = (userID) => {\r\n    return (dispatch) => {\r\n        return axios\r\n            .get(`/board/getallboardbyuserid/${userID}`)\r\n            .then((res) => {\r\n                const boards = res.data;\r\n                dispatch({ type: GET_ALL_BOARD_BY_USERID, payload: boards });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getBoard = (boardID) => {\r\n    return async (dispatch) => {\r\n        dispatch(loading());\r\n        return axios\r\n            .get(`/board/${boardID}`, { withCredentials: true })\r\n            .then((res) => {\r\n                const boards = res.data;\r\n                dispatch({ type: GET_BOARD, payload: boards });\r\n            })\r\n            .catch((err) => {\r\n                const errors = err.response.data;\r\n                errorsManager(errors);\r\n                console.log('board id error');\r\n                dispatch({ type: GET_BOARD, payload: 'BOARD_ERROR' });\r\n            })\r\n            .finally(() => {\r\n                dispatch(endLoading());\r\n            });\r\n    };\r\n};\r\n\r\nexport const cleanCurrentBoard = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CLEAN_CURRENTBOARD, payload: {} });\r\n    };\r\n};\r\n\r\nexport const joinBoard = (user, board) => {\r\n    return async (dispatch) => {\r\n        const currentUser = await store.getState().userReducer;\r\n        console.log(user);\r\n        dispatch({ type: JOIN_BOARD, payload: { currentUser, user, board } });\r\n    };\r\n};\r\n\r\nexport const changeState = (boardID, state) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CHANGE_STATE, payload: { boardID, state } });\r\n    };\r\n};\r\n\r\nexport const banMember = (boardID, memberBannedID) => {\r\n    return async (dispatch) => {\r\n        const currentUser = await store.getState().userReducer;\r\n        return dispatch({ type: BAN_MEMBER, payload: { boardID, memberBannedID, currentUser } });\r\n    };\r\n};\r\n\r\nexport const changeDescription = (description, boardID) => {\r\n    return async (dispatch) => {\r\n        // const currentUser = await store.getState().userReducer;\r\n        // console.log(description);\r\n        // console.log(boardID);qs\r\n        return dispatch({\r\n            type: CHANGE_DESCRIPTION,\r\n            payload: { description, boardID },\r\n        });\r\n    };\r\n};\r\n\r\nexport const addList = (listCreated, boardID, userID) => {\r\n    return async (dispatch) => {\r\n        const currentUser = store.getState().userReducer;\r\n        console.log(currentUser)\r\n        console.log(userID);\r\n        return dispatch({ type: ADD_LIST, payload: { listCreated, boardID, userID, currentUser } });\r\n    };\r\n};\r\n\r\nexport const addCard = (cardCreated, listID, boardID) => {\r\n    return async (dispatch) => {\r\n        // console.log(listCreated);\r\n        return dispatch({ type: ADD_CARD, payload: { cardCreated, listID, boardID } });\r\n    };\r\n};\r\n\r\nexport const deleteList = (listID, boardID) => {\r\n    return async (dispatch) => {\r\n        // console.log(listCreated);\r\n        return dispatch({ type: DELETE_LIST, payload: { listID, boardID } });\r\n    };\r\n};\r\n\r\nexport const leaveBoard = (userID, boardID) => {\r\n    return async (dispatch) => {\r\n        const currentUser = store.getState().userReducer;\r\n        return dispatch({ type: LEAVE_BOARD, payload: { userID, boardID, currentUser } });\r\n    };\r\n};\r\n\r\nexport const deleteBoard = (boardID) => {\r\n    return async (dispatch) => {\r\n        return dispatch({ type: DELETE_BOARD, payload: { boardID } });\r\n    };\r\n};\r\n","import { Cookies } from 'react-cookie';\nimport axios from '../../utils/axios';\nimport { addToast, clearToastByTypes, errorsManager, setRememberMeCookie } from '../../utils/utils';\nimport { loading, endLoading } from './loader.action';\nimport { FiUserCheck } from 'react-icons/fi';\nimport { getAllBoardByUserID } from './board.action';\n\nexport const LOGIN = 'LOGIN';\nexport const REMEMBER_ME = 'REMEMBER_ME';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATION';\n\nexport const login = (userLogin) => {\n    return (dispatch) => {\n        axios\n            .post('/user/login', userLogin)\n            .then((res) => {\n                const { user, token } = res.data;\n                setRememberMeCookie(token);\n                clearToastByTypes(['danger', 'warning']);\n                addToast(<FiUserCheck />, `Welcome ${user.pseudo} !`, 'neutral');\n                dispatch(getAllBoardByUserID(user._id));\n                return dispatch({ type: LOGIN, payload: user });\n            })\n            .catch((err) => {\n                const errors = err.response.data;\n                errorsManager(errors);\n            });\n    };\n};\n\nexport const rememberMe = () => {\n    return (dispatch) => {\n        dispatch(loading());\n        const cookie = new Cookies();\n        axios\n            .get('/user/rememberme', { withCredentials: true })\n            .then((res) => {\n                const { user, token } = res.data;\n                setRememberMeCookie(token);\n                addToast(<FiUserCheck />, `Welcome ${user.pseudo} !`, 'neutral');\n                dispatch(getAllBoardByUserID(user._id));\n                return dispatch({ type: REMEMBER_ME, payload: user });\n            })\n            .catch((err) => {\n                cookie.remove('token');\n                dispatch({ type: REMEMBER_ME, payload: {} });\n                console.log('RememberMe error : ' + err);\n            })\n            .finally(() => {\n                dispatch(endLoading());\n            });\n    };\n};\n\nexport const addNotification = (notifications) => {\n    return (dispatch) => {\n        console.log(notifications);\n        return dispatch({ type: ADD_NOTIFICATION, payload: notifications });\n    };\n};\n\nexport const deleteNotification = (userID, notificationID, boardIDRequested) => {\n    return (dispatch) => {\n        const deleteNotifObject = {\n            userID,\n            notificationID,\n            boardIDRequested,\n        };\n        return axios\n            .post(`/user/delete-notification`, deleteNotifObject)\n            .then((res) => {\n                return dispatch({ type: DELETE_NOTIFICATION, payload: notificationID });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n","import { LOGIN, REMEMBER_ME, ADD_NOTIFICATION, DELETE_NOTIFICATION } from '../actions/user.action';\n\nconst initialState = {};\n\nexport default function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN:\n            return action.payload;\n        case REMEMBER_ME:\n            return action.payload;\n        case ADD_NOTIFICATION:\n            const notifications = action.payload;\n            const userIndex = notifications.findIndex((invit) => invit._id === state._id);\n            return userIndex === -1\n                ? { ...state }\n                : {\n                      ...state,\n                      notifications: [\n                          ...state.notifications,\n                          notifications[userIndex].notifications,\n                      ],\n                  };\n        case DELETE_NOTIFICATION:\n            return {\n                ...state,\n                notifications: state.notifications.filter((notif) => notif._id !== action.payload),\n            };\n        default:\n            return state;\n    }\n}\n","import { isEmpty } from '../../utils/utils';\nimport {\n    GET_BOARD,\n    CREATE_BOARD,\n    GET_ALL_BOARD_BY_USERID,\n    CLEAN_CURRENTBOARD,\n    JOIN_BOARD,\n    CHANGE_STATE,\n    BAN_MEMBER,\n    CHANGE_DESCRIPTION,\n    ADD_LIST,\n    LEAVE_BOARD,\n    DELETE_BOARD,\n    ADD_CARD,\n    DELETE_LIST,\n} from '../actions/board.action';\n\nconst initialState = {\n    currentBoard: {},\n    boards: [],\n};\n\nexport default function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case CREATE_BOARD:\n            return { ...state, boards: [...state.boards, action.payload] };\n        case GET_ALL_BOARD_BY_USERID:\n            return { ...state, boards: action.payload };\n        case GET_BOARD:\n            return { ...state, currentBoard: action.payload };\n        case CLEAN_CURRENTBOARD:\n            return { ...state, currentBoard: {} };\n        case JOIN_BOARD:\n            const currentBoardIndex = state.boards.findIndex(\n                (board) => board._id === action.payload.board._id\n            );\n            if (action.payload.currentUser._id === action.payload.user._id)\n                return { ...state, boards: [...state.boards, action.payload.board] };\n            if (action.payload.board._id === state.currentBoard._id && currentBoardIndex !== -1)\n                return {\n                    ...state,\n                    currentBoard: {\n                        ...state.currentBoard,\n                        members: [...state.currentBoard.members, action.payload.user],\n                    },\n                    boards: state.boards.map((board) => {\n                        if (board._id === action.payload.board._id)\n                            board.members.push(action.payload.user);\n                        return board;\n                    }),\n                };\n            if (action.payload.board._id !== state.currentBoard._id && currentBoardIndex !== -1)\n                return {\n                    ...state,\n                    boards: state.boards.map((board) => {\n                        if (board._id === action.payload.board._id)\n                            board.members.push(action.payload.user);\n                        return board;\n                    }),\n                };\n            return { ...state };\n\n        case CHANGE_STATE:\n            if (\n                state.currentBoard._id === action.payload.boardID &&\n                !state.currentBoard.NOT_MEMBER\n            ) {\n                return {\n                    ...state,\n                    currentBoard: { ...state.currentBoard, isPrivate: action.payload.state },\n                };\n            }\n            if (\n                state.currentBoard._id === action.payload.boardID &&\n                state.currentBoard.NOT_MEMBER\n            ) {\n                document.location.reload();\n                return {\n                    ...state,\n                    currentBoard: {},\n                };\n            }\n            return { ...state };\n        case BAN_MEMBER:\n            if (state.currentBoard._id === action.payload.boardID) {\n                if (action.payload.memberBannedID === action.payload.currentUser._id)\n                    document.location.reload();\n                return {\n                    ...state,\n                    currentBoard: {\n                        ...state.currentBoard,\n                        members: state.currentBoard.members.filter(\n                            (member) => member._id !== action.payload.memberBannedID\n                        ),\n                    },\n                    boards: state.boards.map((board) => {\n                        if (board._id === action.payload.boardID) {\n                            board.members = board.members.filter(\n                                (member) => member._id !== action.payload.memberBannedID\n                            );\n                            return board;\n                        }\n                        return board;\n                    }),\n                };\n            }\n            if (\n                state.boards.findIndex((board) => board._id === action.payload.boardID) !== -1 &&\n                action.payload.memberBannedID === action.payload.currentUser._id\n            ) {\n                return {\n                    ...state,\n                    boards: state.boards.filter((board) => board._id !== action.payload.boardID),\n                };\n            }\n            return { ...state };\n        case CHANGE_DESCRIPTION:\n            if (state.currentBoard._id === action.payload.boardID) {\n                return {\n                    ...state,\n                    currentBoard: {\n                        ...state.currentBoard,\n                        description: action.payload.description,\n                    },\n                };\n            }\n            return { ...state };\n        case ADD_LIST:\n            if (state.currentBoard._id !== action.payload.boardID || isEmpty(state.currentBoard))\n                return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: [...state.currentBoard.lists, action.payload.listCreated],\n                },\n            };\n        case ADD_CARD:\n            if (state.currentBoard._id !== action.payload.boardID || isEmpty(state.currentBoard))\n                return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.map((list) => {\n                        if (\n                            state.currentBoard._id === action.payload.boardID &&\n                            list._id === action.payload.listID\n                        )\n                            list.cards.push(action.payload.cardCreated);\n                        return list;\n                    }),\n                },\n            };\n        case DELETE_LIST:\n            if (state.currentBoard._id !== action.payload.boardID || isEmpty(state.currentBoard))\n                return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.filter(\n                        (list) => list._id !== action.payload.listID\n                    ),\n                },\n            };\n        case LEAVE_BOARD:\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    members: state.currentBoard.members.filter((member) => {\n                        if (\n                            member._id === action.payload.userID &&\n                            state.currentBoard._id === action.payload.boardID\n                        ) {\n                            if (action.payload.currentUser._id === action.payload.userID)\n                                document.location.reload();\n                            return false;\n                        }\n                        return true;\n                    }),\n                },\n                boards: state.boards.filter((board) => {\n                    return board._id === action.payload.boardID &&\n                        action.payload.currentUser._id === action.payload.userID\n                        ? false\n                        : true;\n                }),\n            };\n        case DELETE_BOARD:\n            const currentBoardResult =\n                state.currentBoard._id === action.payload.boardID\n                    ? 'BOARD_ERROR'\n                    : { ...state.currentBoard };\n\n            return {\n                ...state,\n                currentBoard: currentBoardResult,\n                boards: state.boards.filter((board) => board._id !== action.payload.boardID),\n            };\n\n        default:\n            return state;\n    }\n}\n","import { CLEAR_TOAST, PUSH_TOAST, REMOVE_TOAST } from '../actions/toast.action';\r\n\r\nconst initialState = [];\r\n\r\nexport default function toastReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case PUSH_TOAST:\r\n            return [...state, action.payload];\r\n        case REMOVE_TOAST:\r\n            const toastID = action.payload;\r\n            return state.filter((toast) => toast.id !== toastID);\r\n        case CLEAR_TOAST:\r\n            return state.filter((toast) => !action.payload.includes(toast.type));\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const REDIRECT = 'REDIRECT';\r\nexport const CLEAR_REDIRECT = 'CLEAR_REDIRECT';\r\n\r\nexport const redirect = (to) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: REDIRECT, payload: to });\r\n    };\r\n};\r\n\r\nexport const clearRedirect = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CLEAR_REDIRECT, payload: '' });\r\n    };\r\n};\r\n","import { combineReducers } from 'redux';\nimport userReducer from './user.reducer';\nimport boardReducer from './board.reducer';\nimport loaderReducer from './loader.reducer';\nimport toastReducer from './toast.reducer';\nimport redirectReducer from './redirect.reducer';\n\nexport default combineReducers({\n    userReducer,\n    boardReducer,\n    loaderReducer,\n    toastReducer,\n    redirectReducer,\n});\n","import { LOADING, END_LOADING } from '../actions/loader.action';\r\n\r\nconst initialState = false;\r\n\r\nexport default function loaderReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return action.payload;\r\n        case END_LOADING:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { CLEAR_REDIRECT, REDIRECT } from '../actions/redirect.action';\r\n\r\nconst initialState = '';\r\n\r\nexport default function redirectReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REDIRECT:\r\n            return action.payload;\r\n        case CLEAR_REDIRECT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducer/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n","import { Cookies } from 'react-cookie';\nimport { clearToast, pushToast } from '../redux/actions/toast.action';\nimport { store } from '../redux/store';\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport { FiCheckCircle } from 'react-icons/fi';\nimport { API_URL } from '../config';\nimport { clearRedirect, redirect } from '../redux/actions/redirect.action';\n\nexport const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n};\n\nexport const setRememberMeCookie = async (token) => {\n    const cookie = new Cookies();\n    // cookie.remove('token', { path: '/' });\n    cookie.set('token', token, { maxAge: 604800000 }); // 1 week ?\n};\n\nexport const errorsManager = (err) => {\n    for (const error in err) {\n        addToast(<RiErrorWarningLine />, err[error], 'danger');\n    }\n};\n\nexport const addToast = (icon, info, type) => {\n    store.dispatch(pushToast(icon, info, type));\n};\n\nexport const clearToastByTypes = (type) => {\n    store.dispatch(clearToast(type));\n};\nexport const warningToast = (message) => {\n    clearToastByTypes(['danger', 'warning']);\n    addToast(<RiErrorWarningLine />, message, 'warning');\n};\nexport const successToast = (message) => {\n    clearToastByTypes(['danger', 'warning']);\n    addToast(<FiCheckCircle />, message, 'success');\n};\n\nexport const getPicturePath = (model, image) => {\n    switch (model) {\n        case 'board':\n            return `${API_URL}/board-picture/${image}`;\n        case 'user':\n            return `${API_URL}/user-picture/${image}`;\n        default:\n            console.log('Picture Path Error');\n    }\n};\n\nexport const redirectTo = (to) => {\n    store.dispatch(redirect(to));\n    // setTimeout(() => {\n    store.dispatch(clearRedirect());\n    // }, 500);\n};\n\nexport const insertSpecialCharacter = (ref, character) => {\n    var doc = ref.current.ownerDocument.defaultView;\n\n    var sel = doc.getSelection();\n    var range = sel.getRangeAt(0);\n\n    var tabNode = document.createTextNode(String.fromCodePoint(character)); // code point\n\n    range.insertNode(tabNode);\n\n    range.setStartAfter(tabNode);\n    range.setEndAfter(tabNode);\n    sel.removeAllRanges();\n    sel.addRange(range);\n};\n\nexport const removeHTMLtags = (html) => {\n    return html.replaceAll(/(<([^>]+)>)/gi, '');\n};\n\nexport const removeHtmlClass = (html) => {\n    return html.replaceAll(/class=\"[a-zA-Z0-9:;.\\s()\\-,]*\"/gi, '');\n    // return html.replaceAll(/class=\"[a-zA-Z0-9:;\\.\\s\\(\\)\\-\\,]*\"/gi, '');\n};\n\nexport const removeHtmlStyle = (html) => {\n    return html.replaceAll(/(<[^>]+) style=\".*?\"/gi, '');\n};\n\nexport const removeHtmlAttributes = (html) => {\n    return html.replaceAll(/<\\s*(\\w+).*?>/gi, '');\n};\n\nexport const closeOnClickOutside = (ref, setIsOpen) => {\n    const handleCloseModal = (e) => {\n        if (!ref.current) return () => setIsOpen(false);\n\n        !ref.current.contains(e.target) && setIsOpen(false);\n    };\n\n    window.addEventListener('mousedown', handleCloseModal);\n};\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Transition } from 'react-transition-group';\r\nimport { isEmpty } from '../../utils/utils';\r\n\r\nconst DropDown = ({\r\n    children,\r\n    contentRef,\r\n    contentClass,\r\n    allowsRef,\r\n    isOpen,\r\n    setIsOpen,\r\n    isResponsive = false,\r\n    maxWidthResponsive = 600,\r\n    isVertical = true,\r\n    title,\r\n    description,\r\n    top,\r\n    right,\r\n    bottom,\r\n    left,\r\n    topResponsive,\r\n    rightResponsive,\r\n    bottomResponsive,\r\n    leftResponsive,\r\n}) => {\r\n    const dropdownContentRef = useRef();\r\n    const currentRef = isVertical ? dropdownContentRef : contentRef;\r\n    const isBreakPoint = useMediaQuery({ query: `(max-width: ${maxWidthResponsive}px)` });\r\n    const [contentSize, setContentSize] = useState(null);\r\n    const heightOrWidth = isVertical ? 'maxHeight' : 'maxWidth';\r\n    const duration = 300;\r\n    const defaultStyle = {\r\n        transition: `${duration}ms ease`,\r\n        [heightOrWidth]: '0',\r\n        // padding: '8px',\r\n        overflow: 'hidden',\r\n    };\r\n    const transitionStyles = {\r\n        entering: {\r\n            [heightOrWidth]: `${contentSize}px`,\r\n            overflow: 'hidden',\r\n        },\r\n        entered: {\r\n            [heightOrWidth]: `${contentSize}px`,\r\n            overflow: 'visible',\r\n        },\r\n        exiting: { [heightOrWidth]: '0', overflow: 'hidden' },\r\n        exited: { [heightOrWidth]: '0', overflow: 'hidden' },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isOpen) return;\r\n        if (currentRef.current) {\r\n            isVertical\r\n                ? setContentSize(currentRef.current.getBoundingClientRect().height)\r\n                : setContentSize(currentRef.current.getBoundingClientRect().width);\r\n        }\r\n        const handleCloseDropDown = (e) => {\r\n            if (isEmpty(allowsRef)) {\r\n                if (!currentRef.current) return setIsOpen(false);\r\n                !currentRef.current.contains(e.target) && setIsOpen(false);\r\n            } else {\r\n                if (!currentRef.current || !allowsRef.current) return setIsOpen(false);\r\n                if (\r\n                    !currentRef.current.contains(e.target) &&\r\n                    !allowsRef.current.contains(e.target)\r\n                ) {\r\n                    setIsOpen(false);\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener('mousedown', handleCloseDropDown);\r\n        if (!currentRef.current) return setIsOpen(false);\r\n        if (!isOpen) {\r\n            window.removeEventListener('mousedown', handleCloseDropDown);\r\n        }\r\n    }, [isOpen, setIsOpen, currentRef, isVertical, allowsRef]);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`dropdown ${isResponsive && isBreakPoint ? 'dropdown-responsive' : ''}`}\r\n                style={\r\n                    isResponsive && isBreakPoint\r\n                        ? {\r\n                              top: topResponsive,\r\n                              right: rightResponsive,\r\n                              bottom: bottomResponsive,\r\n                              left: leftResponsive,\r\n                          }\r\n                        : { top, right, bottom, left }\r\n                }>\r\n                <Transition unmountOnExit in={isOpen} timeout={duration}>\r\n                    {(state) => (\r\n                        <div\r\n                            className={`dropdown__content`}\r\n                            style={{\r\n                                ...defaultStyle,\r\n                                ...transitionStyles[state],\r\n                            }}>\r\n                            <div\r\n                                className={`${contentClass}`}\r\n                                ref={isVertical && dropdownContentRef}>\r\n                                {title && description && (\r\n                                    <>\r\n                                        <span className=\"dropdown__content__title\">{title}</span>\r\n                                        <span className=\"dropdown__content__description\">\r\n                                            {description}\r\n                                        </span>\r\n                                    </>\r\n                                )}\r\n                                {children}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Transition>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Button from '../utils/Button';\r\nimport { IoClose } from 'react-icons/io5';\r\n\r\nconst Modal = ({\r\n    children,\r\n    hasCloseButton = false,\r\n    isOpen,\r\n    setIsOpen,\r\n    hasChoiceButton = false,\r\n    btnConfirmMessage,\r\n    btnConfirmIcon,\r\n    confirmMessage,\r\n    confirmFunction,\r\n}) => {\r\n    const [isOpenContent, setIsOpenContent] = useState(false);\r\n    const modalRef = useRef();\r\n\r\n    useEffect(() => {\r\n        if (isOpen) return (document.querySelector('html').style = 'overflow : hidden');\r\n        return (document.querySelector('html').style = 'overflow : visible');\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleCloseModal = (e) => {\r\n            if (!modalRef.current) return () => setIsOpen(false);\r\n\r\n            !modalRef.current.contains(e.target) && setIsOpen(false);\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleCloseModal);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleCloseModal);\r\n            document.querySelector('html').style = 'overflow : visible';\r\n        };\r\n    }, [setIsOpen]);\r\n\r\n    return (\r\n        <>\r\n            <CSSTransition\r\n                in={isOpen}\r\n                classNames=\"modal\"\r\n                appear={true}\r\n                timeout={200}\r\n                onEntered={() => setIsOpenContent(true)}\r\n                onExit={() => setIsOpenContent(false)}\r\n                onExited={() => setIsOpen(false)}\r\n                unmountOnExit>\r\n                <div className=\"modal\">\r\n                    <CSSTransition\r\n                        in={isOpenContent}\r\n                        classNames=\"modalcontent\"\r\n                        appear={true}\r\n                        timeout={300}\r\n                        unmountOnExit>\r\n                        <div ref={modalRef} className=\"modal__content\">\r\n                            {hasCloseButton && (\r\n                                <Button\r\n                                    className=\"modal__content__close\"\r\n                                    onClick={() => setIsOpen(false)}>\r\n                                    <IoClose />\r\n                                </Button>\r\n                            )}\r\n\r\n                            {children}\r\n\r\n                            {hasChoiceButton && (\r\n                                <>\r\n                                    <p className=\"modal__content__confirm-message\">\r\n                                        {confirmMessage}\r\n                                    </p>\r\n                                    <div className=\"modal__content__btn-wrapper\">\r\n                                        <Button\r\n                                            className=\"modal__content__btn-wrapper__cancel\"\r\n                                            onClick={() => setIsOpen(false)}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button\r\n                                            className=\"modal__content__btn-wrapper__confirm\"\r\n                                            onClick={confirmFunction}>\r\n                                            {btnConfirmIcon && (\r\n                                                <span className=\"modal__content__btn-wrapper__confirm__icon\">\r\n                                                    {btnConfirmIcon}\r\n                                                </span>\r\n                                            )}\r\n                                            <span className=\"modal__content__btn-wrapper__confirm__label\">\r\n                                                {btnConfirmMessage ? btnConfirmMessage : 'Confirm'}\r\n                                            </span>\r\n                                        </Button>\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </CSSTransition>\r\n                </div>\r\n            </CSSTransition>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { io } from 'socket.io-client';\r\nimport { SOCKET_URL } from '../config';\r\n\r\nexport default io(SOCKET_URL);\r\n","import React from 'react';\r\nimport { MdNotifications, MdCheck } from 'react-icons/md';\r\nimport { IoMdTrash } from 'react-icons/io';\r\nimport Modal from '../../utils/Modal';\r\nimport { AiOutlineAppstoreAdd } from 'react-icons/ai';\r\nimport Button from '../../utils/Button';\r\nimport { isEmpty } from '../../../utils/utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteNotification } from '../../../redux/actions/user.action';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst Notifications = ({ isOpen, setIsOpen }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleJoinBoard = (boardID, notificationID) => {\r\n        const joinBoardObject = {\r\n            userID: user._id,\r\n            boardID,\r\n        };\r\n        socket.emit('join board', joinBoardObject);\r\n        dispatch(deleteNotification(user._id, notificationID));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal isOpen={isOpen} setIsOpen={setIsOpen} hasCloseButton={true}>\r\n                <div className=\"profilmenu__notifications\">\r\n                    <span className=\"profilmenu__notifications__top\">\r\n                        <MdNotifications className=\"profilmenu__notifications__top__icon\" />\r\n                        Notifications\r\n                    </span>\r\n                    <ul className=\"profilmenu__notifications__list\">\r\n                        {!isEmpty(user.notifications) ? (\r\n                            user.notifications.map(({ _id, title, message, boardIDRequested }) => {\r\n                                return (\r\n                                    <li key={_id} className=\"profilmenu__notifications__list__item\">\r\n                                        <div className=\"profilmenu__notifications__list__item__right\">\r\n                                            <AiOutlineAppstoreAdd className=\"profilmenu__notifications__list__item__right__icon\" />\r\n                                            <div className=\"profilmenu__notifications__list__item__right__content\">\r\n                                                <span className=\"profilmenu__notifications__list__item__right__content__title\">\r\n                                                    {title}\r\n                                                </span>\r\n                                                <span className=\"profilmenu__notifications__list__item__right__content__message\">\r\n                                                    {message}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profilmenu__notifications__list__item__left\">\r\n                                            <Button\r\n                                                className=\"profilmenu__notifications__list__item__left__btn-valid\"\r\n                                                onClick={() =>\r\n                                                    handleJoinBoard(boardIDRequested, _id)\r\n                                                }>\r\n                                                <MdCheck />\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"profilmenu__notifications__list__item__left__btn-wrong\"\r\n                                                onClick={() =>\r\n                                                    dispatch(\r\n                                                        deleteNotification(\r\n                                                            user._id,\r\n                                                            _id,\r\n                                                            boardIDRequested\r\n                                                        )\r\n                                                    )\r\n                                                }>\r\n                                                <IoMdTrash />\r\n                                            </Button>\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <h4 style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                                You don't have notifications\r\n                            </h4>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport { FaUserAlt } from 'react-icons/fa';\r\nimport { MdNotifications } from 'react-icons/md';\r\nimport { RiLogoutBoxRFill } from 'react-icons/ri';\r\nimport { useSelector } from 'react-redux';\r\nimport { isEmpty } from '../../../utils/utils';\r\nimport Notifications from '../modal/Notifications';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst ProfilMenu = ({ isOpen, setIsOpen }) => {\r\n    const [isOpenNotification, setIsOpenNotification] = useState(false);\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [, , removeCookie] = useCookies();\r\n\r\n    return (\r\n        <>\r\n            <Notifications isOpen={isOpenNotification} setIsOpen={setIsOpenNotification} />\r\n\r\n            <DropDown\r\n                contentClass=\"profilmenu\"\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                top=\"50px\"\r\n                right=\"0\">\r\n                <div>\r\n                    <ul className=\"profilmenu__navlist\">\r\n                        <li>\r\n                            <button className=\"profilmenu__navlist__item\">\r\n                                <FaUserAlt className=\"profilmenu__navlist__item__icon\" />\r\n                                Profil\r\n                            </button>\r\n                        </li>\r\n                        <li onClick={() => setIsOpenNotification(true)}>\r\n                            <button className=\"profilmenu__navlist__item\">\r\n                                <MdNotifications className=\"profilmenu__navlist__item__icon\" />\r\n                                Notifications\r\n                                {!isEmpty(user.notifications) && (\r\n                                    <span\r\n                                        className=\"bubble-notifications\"\r\n                                        style={{\r\n                                            fontSize: user.notifications.length > 99 && '0.6rem',\r\n                                        }}>\r\n                                        {user.notifications.length > 99\r\n                                            ? '99+'\r\n                                            : user.notifications.length}\r\n                                    </span>\r\n                                )}\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"profilmenu__navlist__divider\"></li>\r\n                        <li>\r\n                            <button\r\n                                className=\"profilmenu__navlist__item\"\r\n                                onClick={() => {\r\n                                    removeCookie('token', { path: '/' });\r\n                                    document.location.reload();\r\n                                }}>\r\n                                <RiLogoutBoxRFill className=\"profilmenu__navlist__item__icon profilmenu__navlist__item__icon--logout\" />\r\n                                Logout\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </DropDown>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfilMenu;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Button from '../../components/utils/Button';\r\nimport { BsFillCaretDownFill } from 'react-icons/bs';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsGrid3X3Gap } from 'react-icons/bs';\r\nimport MediaQuery from 'react-responsive';\r\nimport DropDown from '../utils/Dropdown';\r\nimport { addToast, getPicturePath, isEmpty } from '../../utils/utils';\r\nimport ProfilMenu from './dropdown/ProfilMenu';\r\n\r\nconst Header = ({ isHeaderBoard, boardName }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [isOpenSearchBar, setIsOpenSearchBar] = useState(false);\r\n    const [isOpenProfilMenu, setIsOpenProfilMenu] = useState(false);\r\n    const [test, setTest] = useState(1);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <div className=\"header__left\">\r\n                    <Link className=\"header__left__logo\" to=\"/allboards\">\r\n                        <MediaQuery minWidth=\"650px\">\r\n                            <svg\r\n                                width=\"98\"\r\n                                height=\"29\"\r\n                                viewBox=\"0 0 98 29\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M54.3311 8.436V10.47H50.9831V21H48.4631V10.47H45.1151V8.436H54.3311ZM61.1557 10.884C61.9117 10.884 62.5837 11.052 63.1717 11.388C63.7597 11.712 64.2157 12.198 64.5397 12.846C64.8757 13.482 65.0437 14.25 65.0437 15.15V21H62.5237V15.492C62.5237 14.7 62.3257 14.094 61.9297 13.674C61.5337 13.242 60.9937 13.026 60.3097 13.026C59.6137 13.026 59.0617 13.242 58.6537 13.674C58.2577 14.094 58.0597 14.7 58.0597 15.492V21H55.5397V7.68H58.0597V12.27C58.3837 11.838 58.8157 11.502 59.3557 11.262C59.8957 11.01 60.4957 10.884 61.1557 10.884ZM76.2241 11.028V21H73.6861V19.74C73.3621 20.172 72.9361 20.514 72.4081 20.766C71.8921 21.006 71.3281 21.126 70.7161 21.126C69.9361 21.126 69.2461 20.964 68.6461 20.64C68.0461 20.304 67.5721 19.818 67.2241 19.182C66.8881 18.534 66.7201 17.766 66.7201 16.878V11.028H69.2401V16.518C69.2401 17.31 69.4381 17.922 69.8341 18.354C70.2301 18.774 70.7701 18.984 71.4541 18.984C72.1501 18.984 72.6961 18.774 73.0921 18.354C73.4881 17.922 73.6861 17.31 73.6861 16.518V11.028H76.2241ZM80.6005 7.68V21H78.0805V7.68H80.6005ZM84.9803 7.68V21H82.4603V7.68H84.9803ZM91.268 21.162C90.308 21.162 89.444 20.952 88.676 20.532C87.908 20.1 87.302 19.494 86.858 18.714C86.426 17.934 86.21 17.034 86.21 16.014C86.21 14.994 86.432 14.094 86.876 13.314C87.332 12.534 87.95 11.934 88.73 11.514C89.51 11.082 90.38 10.866 91.34 10.866C92.3 10.866 93.17 11.082 93.95 11.514C94.73 11.934 95.342 12.534 95.786 13.314C96.242 14.094 96.47 14.994 96.47 16.014C96.47 17.034 96.236 17.934 95.768 18.714C95.312 19.494 94.688 20.1 93.896 20.532C93.116 20.952 92.24 21.162 91.268 21.162ZM91.268 18.966C91.724 18.966 92.15 18.858 92.546 18.642C92.954 18.414 93.278 18.078 93.518 17.634C93.758 17.19 93.878 16.65 93.878 16.014C93.878 15.066 93.626 14.34 93.122 13.836C92.63 13.32 92.024 13.062 91.304 13.062C90.584 13.062 89.978 13.32 89.486 13.836C89.006 14.34 88.766 15.066 88.766 16.014C88.766 16.962 89 17.694 89.468 18.21C89.948 18.714 90.548 18.966 91.268 18.966Z\"\r\n                                    fill=\"#333333\"\r\n                                    className=\"header__left__logo__label\"\r\n                                />\r\n\r\n                                <path\r\n                                    d=\"M0 4C0 1.79086 1.79086 0 4 0H10C12.2091 0 14 1.79086 14 4V25C14 27.2091 12.2091 29 10 29H4C1.79086 29 0 27.2091 0 25V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__left\"\r\n                                />\r\n                                <path\r\n                                    d=\"M18 4C18 1.79086 19.7909 0 22 0H28C30.2091 0 32 1.79086 32 4V14C32 16.2091 30.2091 18 28 18H22C19.7909 18 18 16.2091 18 14V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__right\"\r\n                                />\r\n                            </svg>\r\n                        </MediaQuery>\r\n                        <MediaQuery maxWidth=\"649px\">\r\n                            <svg\r\n                                width=\"32\"\r\n                                height=\"29\"\r\n                                viewBox=\"0 0 32 29\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M0 4C0 1.79086 1.79086 0 4 0H10C12.2091 0 14 1.79086 14 4V25C14 27.2091 12.2091 29 10 29H4C1.79086 29 0 27.2091 0 25V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__left\"\r\n                                />\r\n                                <path\r\n                                    d=\"M18 4C18 1.79086 19.7909 0 22 0H28C30.2091 0 32 1.79086 32 4V14C32 16.2091 30.2091 18 28 18H22C19.7909 18 18 16.2091 18 14V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__right\"\r\n                                />\r\n                            </svg>\r\n                        </MediaQuery>\r\n                    </Link>\r\n                    {isHeaderBoard && (\r\n                        <div className=\"header__left__board\">\r\n                            <h2 className=\"header__left__board__name\">{boardName}</h2>\r\n                            <span className=\"header__left__board__divider\"></span>\r\n                            <Link to=\"/allboards\" className=\"header__left__board__btn-allboard\">\r\n                                <BsGrid3X3Gap className=\"header__left__board__btn-allboard__icons\" />\r\n                                <span className=\"header__left__board__btn-allboard__label\">\r\n                                    All board\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"header__right\">\r\n                    <MediaQuery minWidth=\"1100px\">\r\n                        <div className=\"header__right__search\">\r\n                            <input\r\n                                className=\"header__right__search__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Keyword...\"\r\n                            />\r\n                            <Button\r\n                                className=\"header__right__search__button\"\r\n                                onClick={() => {\r\n                                    addToast(<BsFillCaretDownFill />, `test ${test}`, 'success');\r\n                                    setTest(test + 1);\r\n                                }}>\r\n                                Search\r\n                            </Button>\r\n                        </div>\r\n                    </MediaQuery>\r\n                    <MediaQuery maxWidth=\"1099px\">\r\n                        <div className=\"header__right__search__responsive\">\r\n                            <Button\r\n                                className=\"header__right__search__responsive__button\"\r\n                                onClick={() => setIsOpenSearchBar(true)}>\r\n                                Search\r\n                            </Button>\r\n                            {/* {isOpenSearchBar && ( */}\r\n                            <DropDown\r\n                                left=\"-170px\"\r\n                                top=\"46px\"\r\n                                isOpen={isOpenSearchBar}\r\n                                setIsOpen={setIsOpenSearchBar}>\r\n                                <div className=\"header__right__search__responsive__dropdown__wrapper\">\r\n                                    <input\r\n                                        className={`header__right__search__responsive__dropdown__wrapper__input `}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Keyword...\"\r\n                                    />\r\n                                </div>\r\n                            </DropDown>\r\n                            {/* )} */}\r\n                        </div>\r\n                    </MediaQuery>\r\n                    <button\r\n                        className=\"header__right__profil\"\r\n                        onClick={() => setIsOpenProfilMenu(true)}>\r\n                        <img\r\n                            className=\"header__right__profil__img\"\r\n                            src={getPicturePath('user', user.picture)}\r\n                            alt=\"p\"\r\n                        />\r\n                        <span className=\"header__right__profil__name\">{user.pseudo}</span>\r\n                        <span className=\"header__right__profil__icon\">\r\n                            <BsFillCaretDownFill />\r\n                        </span>\r\n                        {!isEmpty(user.notifications) && (\r\n                            <span\r\n                                className=\"bubble-notifications\"\r\n                                style={{ fontSize: user.notifications.length > 99 && '0.6rem' }}>\r\n                                {user.notifications.length > 99 ? '99+' : user.notifications.length}\r\n                            </span>\r\n                        )}\r\n                    </button>\r\n                    <ProfilMenu isOpen={isOpenProfilMenu} setIsOpen={setIsOpenProfilMenu} />\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Header from './Header';\r\n\r\nconst PageTemplate = ({\r\n    pageTitle,\r\n    children,\r\n    isHeaderBoard = false,\r\n    boardName,\r\n    hasHeader = true,\r\n}) => {\r\n    const isLoading = useSelector((state) => state.loaderReducer);\r\n    document.title = `Thullo | ${isLoading ? 'Loading . . .' : pageTitle}`;\r\n\r\n    return (\r\n        <>\r\n            {hasHeader && <Header isHeaderBoard={isHeaderBoard} boardName={boardName} />}\r\n\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageTemplate;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { RiAddFill } from 'react-icons/ri';\r\nimport Modal from '../../utils/Modal';\r\nimport { MdImage, MdLock } from 'react-icons/md';\r\nimport { IoIosAddCircleOutline } from 'react-icons/io';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createBoard } from '../../../redux/actions/board.action';\r\nimport Button from '../../utils/Button';\r\n\r\nconst ModalCreateBoard = ({ isOpen, setIsOpen }) => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [picturePreview, setPicturePreview] = useState('');\r\n    const [newBoard, setNewBoard] = useState({\r\n        name: '',\r\n        picture: '',\r\n        isPrivate: false,\r\n        owner: user._id,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!isOpen) {\r\n            setPicturePreview('');\r\n            setNewBoard({\r\n                name: '',\r\n                picture: '',\r\n                isPrivate: false,\r\n                owner: '',\r\n            });\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const handleChangePicture = async (e) => {\r\n        if (!e.target.files[0]) return;\r\n        const pictureFile = await e.target.files[0];\r\n        // console.log(pictureFile);\r\n        setNewBoard({ ...newBoard, picture: pictureFile });\r\n        const picturePreviewURL = await URL.createObjectURL(pictureFile);\r\n        setPicturePreview(picturePreviewURL);\r\n    };\r\n\r\n    const handleCreateBoard = () => {\r\n        const data = new FormData();\r\n        data.append('name', newBoard.name);\r\n        data.append('picture', newBoard.picture);\r\n        data.append('isPrivate', newBoard.isPrivate);\r\n        data.append('owner', user._id);\r\n        setIsOpen(false);\r\n        dispatch(createBoard(data));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                hasCloseButton={true}\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                hasChoiceButton={true}\r\n                btnConfirmIcon={<RiAddFill />}\r\n                btnConfirmMessage=\"Create\"\r\n                confirmFunction={() => handleCreateBoard()}>\r\n                <div className=\"createboardmodal\">\r\n                    <label\r\n                        className={`createboardmodal__input__image ${\r\n                            picturePreview ? '' : 'no-preview'\r\n                        }`}\r\n                        htmlFor=\"boardmodal_input_image\"\r\n                        style={{ backgroundImage: `url(${picturePreview})` }}>\r\n                        <div className={`${picturePreview ? 'preview-background' : ''}`}>\r\n                            <IoIosAddCircleOutline\r\n                                className={`createboardmodal__input__image__icon ${\r\n                                    picturePreview ? 'preview-active' : ''\r\n                                }`}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"boardmodal_input_image\"\r\n                            onChange={handleChangePicture}\r\n                            accept=\".png , .jpg , .jpeg\"\r\n                            hidden\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        value={newBoard.name}\r\n                        onChange={(e) => setNewBoard({ ...newBoard, name: e.target.value })}\r\n                        maxLength=\"20\"\r\n                        className=\"createboardmodal__input__name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Add board title\"\r\n                    />\r\n                    <div className=\"createboardmodal__button__wrapper\">\r\n                        <Button className=\"createboardmodal__button__wrapper__item\">\r\n                            <MdImage className=\"createboardmodal__button__wrapper__item__icon\" />{' '}\r\n                            Cover\r\n                        </Button>\r\n                        <Button\r\n                            className={`createboardmodal__button__wrapper__item ${\r\n                                newBoard.isPrivate ? 'isStateActiveCreateBoard' : ''\r\n                            }`}\r\n                            onClick={() =>\r\n                                setNewBoard((oldNewBoard) => {\r\n                                    oldNewBoard.isPrivate = !oldNewBoard.isPrivate;\r\n                                    return { ...oldNewBoard };\r\n                                })\r\n                            }>\r\n                            <MdLock className=\"createboardmodal__button__wrapper__item__icon\" />{' '}\r\n                            Private\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalCreateBoard;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getPicturePath } from '../../../utils/utils';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst BoardItem = ({ _id, name, picture, members }) => {\r\n    const MEMBER_MAX_LENGTH = 3;\r\n\r\n    return (\r\n        <Link to={`/board/${_id}`} className=\"allboards__container__items\">\r\n            <img\r\n                className=\"allboards__container__items__img\"\r\n                src={getPicturePath('board', picture)}\r\n                alt={`board ${name}`}\r\n            />\r\n            <span className=\"allboards__container__items__title\">{name}</span>\r\n            <ul className=\"allboards__container__items__members\">\r\n                {members\r\n                    .map(({ _id, pseudo, picture }, index) => {\r\n                        if (index === MEMBER_MAX_LENGTH)\r\n                            return (\r\n                                <span\r\n                                    key={uuid()}\r\n                                    className=\"allboards__container__items__members__others\">\r\n                                    +{members.length - MEMBER_MAX_LENGTH} Others\r\n                                </span>\r\n                            );\r\n                        return (\r\n                            <li key={_id} className=\"allboards__container__items__members__profil\">\r\n                                <img\r\n                                    src={getPicturePath('user', picture)}\r\n                                    alt={`${pseudo} profil`}></img>\r\n                            </li>\r\n                        );\r\n                    })\r\n                    .slice(0, MEMBER_MAX_LENGTH + 1)}\r\n            </ul>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default BoardItem;\r\n","import React, { useMemo, useState } from 'react';\r\nimport PageTemplate from '../components/templates/PageTemplate';\r\nimport Button from '../components/utils/Button';\r\nimport { RiAddFill } from 'react-icons/ri';\r\nimport { useSelector } from 'react-redux';\r\nimport ModalCreateBoard from '../components/templates/modal/CreateBoard.jsx';\r\nimport BoardItem from '../components/templates/board/BoardItem';\r\nimport { isEmpty } from '../utils/utils';\r\n// REDIRIGER VERS LOGIN SI NON CONNECTE\r\nconst Home = () => {\r\n    const boards = useSelector((state) => state.boardReducer.boards);\r\n    // const boardsMemo = useMemo(() => boards.map((board) => board), [boards]);\r\n    const [isOpenCreateBoard, setIsOpenCreateBoard] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <ModalCreateBoard isOpen={isOpenCreateBoard} setIsOpen={setIsOpenCreateBoard} />\r\n\r\n            <PageTemplate pageTitle=\"Allboards\">\r\n                <div className=\"allboards\">\r\n                    <div className=\"allboards__top\">\r\n                        <h1 className=\"allboards__top__title\">All Boards</h1>\r\n                        <Button\r\n                            className=\"allboards__top__btn\"\r\n                            onClick={() => setIsOpenCreateBoard(true)}>\r\n                            <RiAddFill className=\"allboards__top__btn__icon\" />\r\n                            <span className=\"allboards__top__btn__label\">Add</span>\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"allboards__container\">\r\n                        {!isEmpty(boards) &&\r\n                            boards.map((board) => {\r\n                                return <BoardItem key={board._id} {...board} />;\r\n                            })}\r\n                    </div>\r\n                </div>\r\n            </PageTemplate>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/Logo.e207370e.svg\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isEmpty } from '../../utils/utils';\r\nimport ThulloLogo from '../../assets/images/Logo.svg';\r\n\r\nconst authContainer = {\r\n    height: '80vh',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n};\r\n\r\nconst logo = {\r\n    height: '50px',\r\n    position: 'absolute',\r\n    top: '15px',\r\n    left: '15px',\r\n};\r\n\r\nconst AuthWrapper = ({ children }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <>\r\n            {!isEmpty(user) && <Redirect to=\"/allboards\" />}\r\n            <div className=\"auth\">\r\n                <img style={logo} src={ThulloLogo} alt=\"Thullo\" />\r\n                <div style={authContainer}>{children}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { useState } from 'react';\r\nimport AuthWrapper from '../../components/layouts/AuthWrapper.js';\r\nimport Button from '../../components/utils/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../redux/actions/user.action';\r\nimport PageTemplate from '../../components/templates/PageTemplate.js';\r\n\r\nconst Login = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [userLogin, setUserLogin] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(userLogin));\r\n    };\r\n\r\n    return (\r\n        <PageTemplate pageTitle=\"Login\" hasHeader={false}>\r\n            <AuthWrapper>\r\n                <form className=\"auth__component\" onSubmit={handleLogin} noValidate>\r\n                    <h1 className=\"auth__title\">Login</h1>\r\n                    <div className=\"auth__input__wrapper\">\r\n                        <input\r\n                            className=\"auth__input\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={userLogin.email}\r\n                            autoComplete=\"on\"\r\n                            onChange={(e) => setUserLogin({ ...userLogin, email: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"auth__input__wrapper\">\r\n                        <input\r\n                            className=\"auth__input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={userLogin.password}\r\n                            onChange={(e) =>\r\n                                setUserLogin({ ...userLogin, password: e.target.value })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <Button className=\"auth__btn\">Connexion</Button>\r\n                    <p className=\"auth__has-account\">\r\n                        You don't have account ? <Link to=\"/register\">Register</Link>\r\n                    </p>\r\n                </form>\r\n            </AuthWrapper>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst primaryColorScss = '#2f80ed'; // default\r\n\r\nconst Loader = ({ radius, color = primaryColorScss }) => {\r\n    return (\r\n        <svg className=\"loader\" height={radius * 2 || 100} width={radius * 2 || 100}>\r\n            <circle\r\n                className=\"loader__inset\"\r\n                cx={radius * 0.8 || 50}\r\n                cy={radius * 0.8 || 50}\r\n                r={(radius * 0.8) / 2 || 25}\r\n                strokeWidth={radius * 0.03}\r\n                stroke={color}\r\n            />\r\n            <circle\r\n                className=\"loader__around\"\r\n                cx={radius || 50}\r\n                cy={radius || 50}\r\n                r={radius / 2 || 25}\r\n                strokeWidth={radius * 0.03}\r\n                stroke={color}\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from 'react';\nimport AuthWrapper from '../../components/layouts/AuthWrapper';\nimport Button from '../../components/utils/Button';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from '../../utils/axios';\nimport PageTemplate from '../../components/templates/PageTemplate';\nimport { addToast, clearToastByTypes, errorsManager } from '../../utils/utils';\nimport { BsBookmarkCheck } from 'react-icons/bs';\nimport Loader from '../../components/utils/Loader';\n\nconst Register = (props) => {\n    const [emailAlreadyExist, setEmailAlreadyExist] = useState({});\n    const [isSignUpSuccessful, setIsSignUpSuccessful] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleRegister = (user) => {\n        if (isLoading) return;\n        setIsLoading(true);\n        axios\n            .post('/user/register', user)\n            .then((res) => {\n                setEmailAlreadyExist({});\n                clearToastByTypes(['danger', 'warning']);\n                addToast(<BsBookmarkCheck />, 'Sign Up Successful', 'success');\n                setIsSignUpSuccessful(true);\n            })\n            .catch((err) => {\n                const error = err.response.data;\n                errorsManager(error);\n                setEmailAlreadyExist(err.response.data);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    };\n\n    const userRegister = useFormik({\n        initialValues: {\n            pseudo: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n        },\n        validationSchema: Yup.object({\n            pseudo: Yup.string()\n                .min(4, 'Pseudo should have 4 characters minimum')\n                .max(12, 'Pseudo should have 12 characters maximum')\n                .required('Required'),\n\n            email: Yup.string()\n                .required('Email address is required')\n                .email('Invalid email address'),\n\n            password: Yup.string()\n                .min(6, 'Password should have 6 characters minimum')\n                .required('Password is required'),\n\n            confirmPassword: Yup.string()\n                .required('Please confirm your password')\n                .oneOf([Yup.ref('password'), null], 'Password must matched'),\n        }),\n        onSubmit: (values) => {\n            const user = {\n                pseudo: values.pseudo,\n                email: values.email,\n                password: values.password,\n            };\n            handleRegister(user);\n        },\n    });\n\n    return (\n        <>\n            {isSignUpSuccessful && <Redirect to=\"/login\" />}\n\n            <PageTemplate pageTitle=\"Register\" hasHeader={false}>\n                <AuthWrapper>\n                    <form\n                        className=\"auth__component\"\n                        onSubmit={userRegister.handleSubmit}\n                        noValidate>\n                        <h1 className=\"auth__title\">Register</h1>\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"text\"\n                                {...userRegister.getFieldProps('pseudo')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.pseudo && 'placeholder_active'\n                                }`}>\n                                Pseudo\n                            </span>\n                        </div>\n                        {userRegister.touched.pseudo && userRegister.errors.pseudo && (\n                            <p className=\"auth__error\">{userRegister.errors.pseudo}</p>\n                        )}\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"email\"\n                                {...userRegister.getFieldProps('email')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.email && 'placeholder_active'\n                                }`}>\n                                Email\n                            </span>\n                        </div>\n                        {userRegister.touched.email && userRegister.errors.email && (\n                            <p className=\"auth__error\">{userRegister.errors.email}</p>\n                        )}\n                        {emailAlreadyExist && (\n                            <p className=\"auth__error\">{emailAlreadyExist.message}</p>\n                        )}\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"password\"\n                                {...userRegister.getFieldProps('password')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.password && 'placeholder_active'\n                                }`}>\n                                Password\n                            </span>\n                        </div>\n                        {userRegister.touched.password && userRegister.errors.password && (\n                            <p className=\"auth__error\">{userRegister.errors.password}</p>\n                        )}\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"password\"\n                                {...userRegister.getFieldProps('confirmPassword')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.confirmPassword && 'placeholder_active'\n                                }`}>\n                                Confirm Password\n                            </span>\n                        </div>\n                        {userRegister.touched.confirmPassword &&\n                            userRegister.errors.confirmPassword && (\n                                <p className=\"auth__error\">{userRegister.errors.confirmPassword}</p>\n                            )}\n                        <Button\n                            type=\"submit\"\n                            className=\"auth__btn\"\n                            style={{ position: 'relative' }}>\n                            {isLoading ? <Loader color=\"white\" radius=\"28\" /> : 'Register'}\n                        </Button>\n                        <p className=\"auth__has-account\">\n                            You have already account ? <Link to=\"/login\">Connexion</Link>\n                        </p>\n                    </form>\n                </AuthWrapper>\n            </PageTemplate>\n        </>\n    );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from 'react';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport Button from '../../utils/Button';\r\nimport { HiOutlineSearch } from 'react-icons/hi';\r\nimport axios from '../../../utils/axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { getPicturePath, isEmpty } from '../../../utils/utils';\r\nimport { IoAddCircleOutline } from 'react-icons/io5';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst InviteMember = ({ isOpen, setIsOpen }) => {\r\n    const currentBoard = useSelector((state) => state.boardReducer.currentBoard);\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [usersToInvite, setUsersToInvite] = useState([]);\r\n    const [userSelected, setUserSelected] = useState([]);\r\n    const [userSearch, setUserSearch] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    useEffect(() => {\r\n        if (!isEmpty(currentBoard)) {\r\n            axios\r\n                .get(`/user/all/${currentBoard._id}`)\r\n                .then((res) => {\r\n                    setUsersToInvite(res.data);\r\n                    setUserSearch(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [currentBoard]);\r\n\r\n    const handleSearchUser = () => {\r\n        setUserSearch(usersToInvite.filter((user) => user.pseudo.includes(searchValue)));\r\n    };\r\n\r\n    const handleSendInvation = () => {\r\n        const invitationObject = {\r\n            senderPseudo: user.pseudo,\r\n            guestUserIDList: userSelected,\r\n            boardID: currentBoard._id,\r\n            boardName: currentBoard.name,\r\n        };\r\n        setUsersToInvite(usersToInvite.filter((userSug) => !userSelected.includes(userSug._id)));\r\n        setUserSearch(userSearch.filter((userSug) => !userSelected.includes(userSug._id)));\r\n        socket.emit('send invitation', invitationObject);\r\n    };\r\n\r\n    const handleSelectUser = (id) => {\r\n        userSelected.findIndex((userID) => userID === id) === -1\r\n            ? setUserSelected([...userSelected, id])\r\n            : setUserSelected(userSelected.filter((userID) => userID !== id));\r\n    };\r\n\r\n    return (\r\n        <DropDown\r\n            contentClass=\"invitemember\"\r\n            isResponsive={true}\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            top=\"40px\"\r\n            left=\"-4px\"\r\n            title=\"Invite to Board\"\r\n            description=\"Search users you want to invite to\">\r\n            <div className=\"invitemember__input__wrapper\">\r\n                <input\r\n                    className=\"invitemember__input__wrapper__input\"\r\n                    placeholder=\"User...\"\r\n                    type=\"text\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setSearchValue(e.target.value)}\r\n                />\r\n                <Button\r\n                    className=\"invitemember__input__wrapper__btn\"\r\n                    onClick={() => handleSearchUser()}>\r\n                    <HiOutlineSearch />\r\n                </Button>\r\n            </div>\r\n            {!isEmpty(userSearch) && (\r\n                <ul className=\"invitemember__suggest\">\r\n                    {userSearch.map(({ _id, pseudo, picture }, index) => {\r\n                        return (\r\n                            <li\r\n                                key={_id}\r\n                                style={{\r\n                                    marginBottom: index === userSearch.length - 1 ? '' : '15px',\r\n                                }}>\r\n                                <button\r\n                                    className=\"invitemember__suggest__item\"\r\n                                    onClick={() => handleSelectUser(_id)}>\r\n                                    <img\r\n                                        className=\"invitemember__suggest__item__picture\"\r\n                                        src={getPicturePath('user', picture)}\r\n                                        alt={`user ${pseudo}`}\r\n                                    />\r\n                                    <span className=\"invitemember__suggest__item__pseudo\">\r\n                                        {pseudo}\r\n                                    </span>\r\n                                    {userSelected.includes(_id) ? (\r\n                                        <FiCheckCircle className=\"invitemember__suggest__item__icon invitemember__suggest__item__icon--select\" />\r\n                                    ) : (\r\n                                        <IoAddCircleOutline className=\"invitemember__suggest__item__icon\" />\r\n                                    )}\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            )}\r\n\r\n            <Button\r\n                className={`invitemember__btn-invite ${\r\n                    isEmpty(userSelected) ? 'invitemember__btn-invite--disabled' : ''\r\n                }`}\r\n                onClick={() => !isEmpty(userSelected) && handleSendInvation()}>\r\n                Invite\r\n            </Button>\r\n        </DropDown>\r\n    );\r\n};\r\n\r\nexport default InviteMember;\r\n","import React from 'react';\r\nimport PageTemplate from '../components/templates/PageTemplate';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BoardError = (props) => {\r\n    return (\r\n        <PageTemplate pageTitle=\"Board Error\">\r\n            <h1>Board not found or is Private</h1>\r\n            <Link to=\"/allboards\">Back to home</Link>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default BoardError;\r\n","import React from 'react';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport { MdPublic } from 'react-icons/md';\r\nimport { IoMdLock } from 'react-icons/io';\r\nimport { useSelector } from 'react-redux';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst PrivateOrPublic = ({ isOpen, setIsOpen }) => {\r\n    const currentBoard = useSelector((state) => state.boardReducer.currentBoard);\r\n\r\n    const handleChangeState = (state) => {\r\n        if (currentBoard.isPrivate === state) return;\r\n        const boardID = currentBoard._id;\r\n        setIsOpen(false);\r\n        socket.emit('change state', { boardID, state });\r\n    };\r\n\r\n    return (\r\n        <DropDown\r\n            contentClass=\"privateorpublic\"\r\n            left=\"-6px\"\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            title=\"Visibility\"\r\n            description=\"Choose who can see to this board.\">\r\n            <button\r\n                className={`privateorpublic__btn ${\r\n                    !currentBoard.isPrivate ? 'privateorpublic-active' : ''\r\n                }`}\r\n                style={{ marginBottom: '8px' }}\r\n                onClick={() => handleChangeState(false)}>\r\n                <div className=\"privateorpublic__btn__top\">\r\n                    <MdPublic className=\"privateorpublic__btn__top__icon\" />\r\n                    <span>Public</span>\r\n                </div>\r\n                <p className=\"privateorpublic__btn__desc\">Anyone on the internet can see this.</p>\r\n            </button>\r\n            <button\r\n                className={`privateorpublic__btn ${\r\n                    currentBoard.isPrivate ? 'privateorpublic-active' : ''\r\n                }`}\r\n                onClick={() => handleChangeState(true)}>\r\n                <div className=\"privateorpublic__btn__top\">\r\n                    <IoMdLock className=\"privateorpublic__btn__top__icon\" />\r\n                    <span>Private</span>\r\n                </div>\r\n                <p className=\"privateorpublic__btn__desc\">Only board members can see this</p>\r\n            </button>\r\n        </DropDown>\r\n    );\r\n};\r\n\r\nexport default PrivateOrPublic;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from '../../utils/axios';\r\n// import { insertSpecialCharacter } from '../../utils/utils';\r\nimport DropDown from '../utils/Dropdown';\r\nimport { VscChromeClose } from 'react-icons/vsc';\r\n\r\nconst EmojiPicker = ({ isOpen, setIsOpen, allowsRef }) => {\r\n    // Faire du call API ici : https://emoji-api.com/\r\n    // insertSpecialCharacter() Afficher les emojis\r\n    const [emoji, setEmoji] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\r\n                'https://emoji-api.com/categories/travel-places?access_key=c73293510309d49f6b5de5ad0badf72689ddf3ec'\r\n            )\r\n            .then((res) => {\r\n                setEmoji(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <DropDown\r\n            allowsRef={allowsRef}\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            bottom=\"-160px\"\r\n            right=\"-8px\">\r\n            <div className=\"emojipicker\">\r\n                <div className=\"emojipicker__category\">\r\n                    <button\r\n                        className=\"emojipicker__category__btn-close\"\r\n                        onClick={() => setIsOpen(false)}>\r\n                        <VscChromeClose />\r\n                    </button>\r\n                </div>\r\n                <div className=\"emojipicker__content\">\r\n                    {emoji.map((emo, index) => {\r\n                        return (\r\n                            <button key={index} className=\"emojipicker__content__item\">\r\n                                {emo.character}\r\n                            </button>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </DropDown>\r\n    );\r\n};\r\n\r\nexport default EmojiPicker;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport socket from '../../utils/socket';\r\nimport {\r\n    insertSpecialCharacter,\r\n    removeHtmlClass,\r\n    removeHtmlStyle,\r\n    warningToast,\r\n} from '../../utils/utils';\r\nimport Button from '../utils/Button';\r\nimport { MdInsertEmoticon } from 'react-icons/md';\r\nimport EmojiPicker from './EmojiPicker';\r\n\r\nconst MAX_CHARS = 800;\r\n\r\nconst EditDescription = ({ setIsOpen, currentDescription, boardID }) => {\r\n    const [newDescription, setNewDescription] = useState('');\r\n    const [isOpenEmojiPicker, setIsOpenEmojiPicker] = useState(false);\r\n    const editorRef = useRef();\r\n    const descriptionRef = useRef();\r\n    const outputRef = useRef();\r\n\r\n    const parseValue = (value) => {\r\n        return value.replaceAll(\r\n            /\\*[a-z0-1A-Z]+/g,\r\n            '<span class=\"description-word-important\">$&</span>'\r\n        );\r\n    };\r\n    const handleSaveDescription = async () => {\r\n        if (currentDescription === outputRef.current.innerHTML) return setIsOpen(false);\r\n        if (newDescription.length > MAX_CHARS)\r\n            return warningToast(`Description is too long (max chars : ${MAX_CHARS})`);\r\n\r\n        const description = removeHtmlStyle(outputRef.current.innerHTML);\r\n        socket.emit('change description', { description, boardID });\r\n        setIsOpen(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        outputRef.current.innerHTML = currentDescription;\r\n        descriptionRef.current.innerHTML = removeHtmlClass(outputRef.current.innerHTML);\r\n        setNewDescription(outputRef.current.textContent);\r\n    }, [descriptionRef, currentDescription]);\r\n\r\n    const handleFormatDescription = (e) => {\r\n        if (e.keyCode === 9) {\r\n            e.preventDefault();\r\n            insertSpecialCharacter(descriptionRef, 0x0009);\r\n            outputRef.current.innerHTML = parseValue(descriptionRef.current.innerHTML);\r\n        }\r\n    };\r\n\r\n    const handleSetDescription = (e) => {\r\n        setNewDescription(e.target.textContent);\r\n        outputRef.current.innerHTML = removeHtmlStyle(parseValue(e.target.innerHTML));\r\n    };\r\n\r\n    // const handlePaste = (e) => {\r\n    //     console.log(e.clipboardData.getData('text/plain'));\r\n    //     // descriptionRef.innerHTML = removeHtmlStyle()\r\n    // };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"editdescription__wrapper\" ref={editorRef}>\r\n                <div\r\n                    // onPaste={handlePaste}\r\n                    onKeyDown={handleFormatDescription}\r\n                    spellCheck={false}\r\n                    onInput={handleSetDescription}\r\n                    ref={descriptionRef}\r\n                    className=\"editdescription__wrapper__input\"\r\n                    contentEditable={true}\r\n                />\r\n                <div ref={outputRef} className=\"editdescription__wrapper__output\"></div>\r\n                <button\r\n                    className=\"editdescription__wrapper__btn-emoji\"\r\n                    onClick={() => setIsOpenEmojiPicker(true)}>\r\n                    <MdInsertEmoticon />\r\n                </button>\r\n                <EmojiPicker\r\n                    allowsRef={editorRef}\r\n                    isOpen={isOpenEmojiPicker}\r\n                    setIsOpen={setIsOpenEmojiPicker}\r\n                />\r\n            </div>\r\n            <div className=\"editdescription__chars-wrapper\">\r\n                <span className=\"editdescription__chars-wrapper__item\">\r\n                    max chars : {MAX_CHARS}\r\n                </span>\r\n                <span\r\n                    className={`editdescription__chars-wrapper__item ${\r\n                        newDescription.length > MAX_CHARS ? 'maxchars-error' : ''\r\n                    }`}>\r\n                    current chars : {newDescription.length}\r\n                </span>\r\n            </div>\r\n\r\n            <div className=\"editdescription__btn-wrapper\">\r\n                <Button\r\n                    className=\"editdescription__btn-wrapper__btn-send\"\r\n                    onClick={() => handleSaveDescription()}>\r\n                    Save\r\n                </Button>\r\n                <button\r\n                    className=\"editdescription__btn-wrapper__btn-cancel\"\r\n                    onClick={() => setIsOpen(false)}>\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default EditDescription;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { MdEdit, MdDescription } from 'react-icons/md';\r\nimport { FaUserCircle } from 'react-icons/fa';\r\nimport { getPicturePath, isEmpty } from '../../../utils/utils';\r\nimport socket from '../../../utils/socket';\r\nimport EditDescription from '../EditDescription';\r\n\r\nconst BoardMenu = ({ isOpen, setIsOpen }) => {\r\n    const descriptionRef = useRef();\r\n    const boardMenuRef = useRef();\r\n    const board = useSelector((state) => state.boardReducer.currentBoard);\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [isEditDescription, setIsEditDescription] = useState(false);\r\n\r\n    const isBoardOwner = () => {\r\n        return !isEmpty(user) && !isEmpty(board) && board.owner._id === user._id;\r\n    };\r\n\r\n    const handleFormatDate = () => {\r\n        if (isEmpty(board)) return;\r\n        const month = [\r\n            'January',\r\n            'February',\r\n            'March',\r\n            'April',\r\n            'May',\r\n            'June',\r\n            'July',\r\n            'August',\r\n            'September',\r\n            'October',\r\n            'November',\r\n            'December',\r\n        ];\r\n        const noFormatDate = board.createdAt;\r\n        const boardYear = noFormatDate.substring(0, 4);\r\n        const boardMonth =\r\n            noFormatDate[5] === '0' ? noFormatDate.substring(6, 7) : noFormatDate.substring(5, 7);\r\n        const boardMontLetter = month[boardMonth - 1];\r\n        const boardMonthDay = noFormatDate.substring(8, 10);\r\n\r\n        return `on ${boardMonthDay} ${boardMontLetter}, ${boardYear} `;\r\n    };\r\n    handleFormatDate();\r\n    const handleBanMember = (memberBannedID) => {\r\n        const banMemberObject = {\r\n            boardID: board._id,\r\n            memberBannedID,\r\n        };\r\n        socket.emit('ban member', banMemberObject);\r\n    };\r\n\r\n    const handleLeaveBoard = () => {\r\n        const leaveBoardObject = {\r\n            userID: user._id,\r\n            boardID: board._id,\r\n        };\r\n        socket.emit('leave board', leaveBoardObject);\r\n    };\r\n\r\n    const handleDeleteBoard = () => {\r\n        const boardID = board._id;\r\n        socket.emit('delete board', boardID);\r\n    };\r\n    useEffect(() => {\r\n        if (!isEmpty(board.description) && descriptionRef.current) {\r\n            descriptionRef.current.innerHTML = board.description;\r\n        }\r\n    }, [board.description, isOpen, isEditDescription]);\r\n\r\n    return (\r\n        <>\r\n            <DropDown\r\n                isVertical={false}\r\n                contentRef={boardMenuRef}\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                top=\"-4px\"\r\n                right=\"-8px\">\r\n                <div className=\"boardmenu\" ref={boardMenuRef}>\r\n                    <div className=\"boardmenu__top\">\r\n                        <h3 className=\"boardmenu__top__name\">{board.name}</h3>\r\n                        <button\r\n                            className=\"boardmenu__top__btn-close\"\r\n                            onClick={() => setIsOpen(false)}>\r\n                            <CgClose />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"boardmenu__content\">\r\n                        <div className=\"boardmenu__content__creator\">\r\n                            <span className=\"boardmenu__content__title\">\r\n                                <FaUserCircle className=\"boardmenu__content__title__icon\" />\r\n                                <span className=\"boardmenu__content__title__label\">Made by</span>\r\n                            </span>\r\n                            <div className=\"boardmenu__content__creator__profil\">\r\n                                <img\r\n                                    className=\"boardmenu__content__creator__profil__img\"\r\n                                    src={\r\n                                        !isEmpty(board) &&\r\n                                        getPicturePath('user', board.owner.picture)\r\n                                    }\r\n                                    alt={`owner ${!isEmpty(board) && board.owner.pseudo}`}\r\n                                />\r\n                                <div className=\"boardmenu__content__creator__profil__infos\">\r\n                                    <span className=\"boardmenu__content__creator__profil__infos__name\">\r\n                                        {!isEmpty(board) && board.owner.pseudo}\r\n                                    </span>\r\n                                    <span className=\"boardmenu__content__creator__profil__infos__date\">\r\n                                        {handleFormatDate()}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"boardmenu__content__description\">\r\n                            <div className=\"boardmenu__content__description__top\">\r\n                                <span className=\"boardmenu__content__title\">\r\n                                    <MdDescription className=\"boardmenu__content__title__icon\" />\r\n                                    <span className=\"boardmenu__content__title__label\">\r\n                                        Description\r\n                                    </span>\r\n                                </span>\r\n                                {!isEditDescription && isBoardOwner() && (\r\n                                    <button\r\n                                        className=\"boardmenu__content__description__top__btn-edit\"\r\n                                        onClick={() => setIsEditDescription(!isEditDescription)}>\r\n                                        <MdEdit className=\"boardmenu__content__description__top__btn-edit__icon\" />\r\n                                        <span>Edit</span>\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                            {isEditDescription ? (\r\n                                <EditDescription\r\n                                    boardID={board._id}\r\n                                    currentDescription={board.description}\r\n                                    isOpen={isEditDescription}\r\n                                    setIsOpen={setIsEditDescription}\r\n                                />\r\n                            ) : (\r\n                                <p\r\n                                    ref={descriptionRef}\r\n                                    className=\"boardmenu__content__description__para\"></p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"boardmenu__content__team\">\r\n                            <div className=\"boardmenu__content__team__top\">\r\n                                <span className=\"boardmenu__content__title\">\r\n                                    <MdDescription className=\"boardmenu__content__title__icon\" />\r\n                                    <span className=\"boardmenu__content__title__label\">Team</span>\r\n                                </span>\r\n                            </div>\r\n                            <ul className=\"boardmenu__content__team__list\">\r\n                                {!isEmpty(board) &&\r\n                                    board.members.map((member, index) => {\r\n                                        return (\r\n                                            <li\r\n                                                key={member._id}\r\n                                                className=\"boardmenu__content__team__list__item\"\r\n                                                style={{\r\n                                                    marginBottom:\r\n                                                        index === board.members.length - 1\r\n                                                            ? ''\r\n                                                            : '15px',\r\n                                                }}>\r\n                                                <img\r\n                                                    className=\"boardmenu__content__team__list__item__img\"\r\n                                                    src={getPicturePath('user', member.picture)}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                                <span className=\"boardmenu__content__team__list__item__pseudo\">\r\n                                                    {member.pseudo}\r\n                                                </span>\r\n                                                {board.owner._id === member._id ? (\r\n                                                    <span className=\"boardmenu__content__team__list__item__admin\">\r\n                                                        Admin\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    isBoardOwner() && (\r\n                                                        <button\r\n                                                            className=\"boardmenu__content__team__list__item__btn-remove\"\r\n                                                            onClick={() =>\r\n                                                                handleBanMember(member._id)\r\n                                                            }>\r\n                                                            Remove\r\n                                                        </button>\r\n                                                    )\r\n                                                )}\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                            </ul>\r\n                        </div>\r\n                        <button\r\n                            className=\"boardmenu__content__btn-leave\"\r\n                            onClick={() => handleLeaveBoard()}>\r\n                            Leave\r\n                        </button>\r\n                        {isBoardOwner() && (\r\n                            <button\r\n                                className=\"boardmenu__content__btn-delete\"\r\n                                onClick={() => handleDeleteBoard()}>\r\n                                Delete Board\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </DropDown>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BoardMenu;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useSelector } from 'react-redux';\r\nimport socket from '../../../utils/socket';\r\nimport { closeOnClickOutside } from '../../../utils/utils';\r\n\r\nconst AddListOrCard = ({\r\n    isOpen,\r\n    setIsOpen,\r\n    listID,\r\n    onClick,\r\n    isAddList,\r\n    isFirstList,\r\n    isFirstCard,\r\n    style,\r\n    scrollBottomReset,\r\n    scrollLeftReset,\r\n}) => {\r\n    const addListRef = useRef();\r\n    const inputRef = useRef();\r\n    const [isOpenInput, setIsOpenInput] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const user = useSelector((state) => state.userReducer);\r\n    const board = useSelector((state) => state.boardReducer.currentBoard);\r\n    const currentIsOpen = isAddList ? isOpenInput : isOpen;\r\n    const currentSetIsOpen = isAddList ? setIsOpenInput : setIsOpen;\r\n    const boardID = board._id;\r\n\r\n    const handleAddListOrCard = (event) => {\r\n        event.preventDefault();\r\n        if (!name) return inputRef.current.focus();\r\n        const userID = user._id;\r\n\r\n        isAddList\r\n            ? socket.emit('add list', { name, boardID, userID })\r\n            : socket.emit('add card', { name, boardID, listID, userID });\r\n\r\n        setName('');\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n        if (!isAddList) {\r\n            onClick && onClick();\r\n        }\r\n        currentSetIsOpen(true);\r\n    };\r\n\r\n    const handleButtonText = () => {\r\n        return `Add ${isFirstList || isFirstCard ? '' : 'another'} ${isAddList ? 'list' : 'card'}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentListID = listID;\r\n        socket.on('add list', ({ listCreated, boardID, userID }) => {\r\n            if (userID === user._id) {\r\n                console.log('SCROLL LEFT RESET');\r\n                inputRef.current && inputRef.current.focus();\r\n                scrollLeftReset && scrollLeftReset();\r\n            }\r\n        });\r\n        socket.on('add card', ({ listID, userID }) => {\r\n            if (currentListID === listID && userID === user._id) {\r\n                inputRef.current && inputRef.current.focus();\r\n                scrollBottomReset && scrollBottomReset();\r\n            }\r\n        });\r\n    }, [board, listID]);\r\n\r\n    useEffect(() => {\r\n        if (currentIsOpen) {\r\n            inputRef.current && inputRef.current.focus();\r\n            scrollLeftReset && scrollLeftReset();\r\n            closeOnClickOutside(addListRef, currentSetIsOpen);\r\n        }\r\n    }, [currentIsOpen]);\r\n\r\n    return (\r\n        <>\r\n            <form style={style} onSubmit={(event) => handleAddListOrCard(event)}>\r\n                <a\r\n                    href=\"#\"\r\n                    className={`addlist ${currentIsOpen ? 'addlist__open' : ''}`}\r\n                    onClick={() => handleOnClick()}\r\n                    ref={addListRef}>\r\n                    <div className=\"addlist__head\">\r\n                        {currentIsOpen ? (\r\n                            <input\r\n                                ref={inputRef}\r\n                                className=\"addlist__input\"\r\n                                value={name}\r\n                                onChange={(e) => setName(e.target.value)}\r\n                                type=\"text\"\r\n                            />\r\n                        ) : (\r\n                            <>\r\n                                <span>{handleButtonText()}</span>\r\n                                <MdAdd className=\"addlist__head__icon\" />\r\n                            </>\r\n                        )}\r\n                    </div>\r\n                    {currentIsOpen && (\r\n                        <button type=\"submit\" className=\"addlist__btn-add\">\r\n                            Add {isAddList ? 'list' : 'card'}\r\n                        </button>\r\n                    )}\r\n                </a>\r\n            </form>\r\n        </>\r\n    );\r\n};\r\nexport default AddListOrCard;\r\n","import React from 'react';\r\nimport { BsPaperclip } from 'react-icons/bs';\r\nimport { MdComment } from 'react-icons/md';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport Button from '../../utils/Button';\r\n\r\nconst CardItem = () => {\r\n    return (\r\n        <li className=\"card\">\r\n            <div className=\"card__image\"></div>\r\n            <span className=\"card__title\">Github jobs challenge</span>\r\n            <ul className=\"card__category\">\r\n                <li className=\"card__category__item\">Design</li>\r\n                <li className=\"card__category__item\">Concept</li>\r\n            </ul>\r\n            <div className=\"card__bottom\">\r\n                <ul className=\"card__bottom__members\">\r\n                    <li className=\"card__bottom__members__item\"></li>\r\n                    <li>\r\n                        <Button className=\"card__bottom__members__btn-addmember\">\r\n                            <MdAdd className=\"card__bottom__members__btn-addmember__icon\" />\r\n                        </Button>\r\n                    </li>\r\n                </ul>\r\n\r\n                <div className=\"card__bottom__utils\">\r\n                    <button className=\"card__bottom__utils__btn\">\r\n                        <MdComment />\r\n                        <span className=\"card__bottom__utils__btn__number\">1</span>\r\n                    </button>\r\n                    <button className=\"card__bottom__utils__btn\">\r\n                        <BsPaperclip />\r\n                        <span className=\"card__bottom__utils__btn__number\">1</span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default CardItem;\r\n","import React, { useRef, useState } from 'react';\r\nimport { HiDotsHorizontal } from 'react-icons/hi';\r\nimport { isEmpty } from '../../../utils/utils';\r\nimport AddListOrCard from './AddList';\r\nimport CardItem from './CardItem';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport Modal from '../../utils/Modal';\r\nimport { useSelector } from 'react-redux';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst ListItem = ({ _id, name, cards }) => {\r\n    const listRef = useRef();\r\n    const [isOpenInputAddCard, setIsOpenInputAddCard] = useState(false);\r\n    const boardID = useSelector((state) => state.boardReducer.currentBoard._id);\r\n    const [isOpenListMenu, setIsOpenListMenu] = useState(false);\r\n    const [isOpenConfirmDeleteList, setIsOpenConfirmDeleteList] = useState(false);\r\n\r\n    const handleAddCartScrollReset = () => {\r\n        if (listRef.current) {\r\n            listRef.current.scrollTop = listRef.current.scrollHeight;\r\n        }\r\n    };\r\n\r\n    const handleOpenInputAddCard = async () => {\r\n        await setIsOpenInputAddCard(true);\r\n        handleAddCartScrollReset();\r\n    };\r\n\r\n    const handleDeleteList = () => {\r\n        socket.emit('delete list', { listID: _id, boardID });\r\n        setIsOpenConfirmDeleteList(false);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpenConfirmDeleteList}\r\n                setIsOpen={setIsOpenConfirmDeleteList}\r\n                hasChoiceButton={true}\r\n                confirmMessage=\"Are your sure delete this list ?\"\r\n                confirmFunction={() => handleDeleteList()}\r\n            />\r\n\r\n            <div className=\"list\">\r\n                <div className=\"list__top\">\r\n                    <span className=\"list__top__title\">{name}</span>\r\n                    <button className=\"list__top__btn-menu\" onClick={() => setIsOpenListMenu(true)}>\r\n                        <HiDotsHorizontal />\r\n                    </button>\r\n                    <DropDown\r\n                        top=\"28px\"\r\n                        right=\"-148px\"\r\n                        isOpen={isOpenListMenu}\r\n                        setIsOpen={setIsOpenListMenu}>\r\n                        <ul className=\"listmenu\">\r\n                            <li className=\"listmenu__item\">\r\n                                <button className=\"listmenu__item__btn\">Rename</button>\r\n                            </li>\r\n                            <li className=\"listmenu__item listmenu__divider\"></li>\r\n                            <li className=\"listmenu__item\">\r\n                                <button\r\n                                    className=\"listmenu__item__btn\"\r\n                                    onClick={() => setIsOpenConfirmDeleteList(true)}>\r\n                                    Delete this list\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </DropDown>\r\n                </div>\r\n                <ul className=\"list__content\" ref={listRef}>\r\n                    {cards.map((card) => {\r\n                        return <CardItem key={card._id} />;\r\n                    })}\r\n                    {isOpenInputAddCard && (\r\n                        <AddListOrCard\r\n                            onClick={() => handleOpenInputAddCard()}\r\n                            isOpen={isOpenInputAddCard}\r\n                            setIsOpen={setIsOpenInputAddCard}\r\n                            listID={_id}\r\n                            isFirstCard={isEmpty(cards) && true}\r\n                        />\r\n                    )}\r\n                </ul>\r\n                {!isOpenInputAddCard && (\r\n                    <AddListOrCard\r\n                        onClick={() => handleOpenInputAddCard()}\r\n                        isOpen={isOpenInputAddCard}\r\n                        setIsOpen={setIsOpenInputAddCard}\r\n                        listID={_id}\r\n                        scrollBottomReset={handleAddCartScrollReset}\r\n                        isFirstCard={isEmpty(cards) && true}\r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ListItem;\r\n","import React, { useMemo, useRef } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { isEmpty } from '../../../utils/utils';\r\nimport TableItem from './ListItem';\r\nimport AddListOrCard from './AddList';\r\n\r\nconst ListManager = (props) => {\r\n    const boardRef = useRef();\r\n    const lists = useSelector((state) => state.boardReducer.currentBoard.lists);\r\n\r\n    const listsMemo = useMemo(\r\n        () =>\r\n            !isEmpty(lists) &&\r\n            lists.map((list) => {\r\n                console.log('re render list');\r\n                return <TableItem key={list._id} {...list} />;\r\n            }),\r\n        [lists]\r\n    );\r\n\r\n    const handleAddListScrollReset = () => {\r\n        if (boardRef.current) {\r\n            boardRef.current.scrollLeft = boardRef.current.scrollWidth;\r\n        }\r\n    };\r\n    return (\r\n        // <div className=\"board-wrapper\">\r\n        <div id=\"board\" ref={boardRef}>\r\n            {listsMemo}\r\n\r\n            <AddListOrCard\r\n                style={{ paddingRight: '25px' }}\r\n                scrollLeftReset={handleAddListScrollReset}\r\n                isFirstList={isEmpty(lists) && true}\r\n                isAddList={true}\r\n            />\r\n        </div>\r\n        // </div>\r\n    );\r\n};\r\n\r\nexport default ListManager;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PageTemplate from '../components/templates/PageTemplate';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { cleanCurrentBoard, getBoard } from '../redux/actions/board.action';\r\nimport Button from '../components/utils/Button';\r\nimport { HiDotsHorizontal } from 'react-icons/hi';\r\nimport { MdLock, MdAdd } from 'react-icons/md';\r\nimport { getPicturePath, isEmpty } from '../utils/utils';\r\nimport InviteMember from '../components/templates/dropdown/InviteMember';\r\nimport BoardError from './BoardError';\r\nimport PrivateOrPublic from '../components/templates/dropdown/PrivateOrPublic';\r\nimport BoardMenu from '../components/templates/dropdown/BoardMenu';\r\nimport ListManager from '../components/templates/board/ListManager';\r\n\r\nconst Board = (props) => {\r\n    const { id } = useParams();\r\n    const board = useSelector((state) => state.boardReducer.currentBoard);\r\n    const dispatch = useDispatch();\r\n    const [isOpenInviteMember, setIsOpenInviteMember] = useState(false);\r\n    const [isOpenPrivateOrPublic, setIsOpenPrivateOrPublic] = useState(false);\r\n    const [isOpenBoardMenu, setIsOpenBoardMenu] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(getBoard(id));\r\n        return () => {\r\n            dispatch(cleanCurrentBoard());\r\n            setIsOpenInviteMember(false);\r\n            setIsOpenPrivateOrPublic(false);\r\n            setIsOpenBoardMenu(false);\r\n        };\r\n    }, [dispatch, id]);\r\n\r\n    return (\r\n        // METTRE LE NOM DU BOARD DYNAMIQUEMENT DANS LE TITRE\r\n        <>\r\n            {board === 'BOARD_ERROR' ? (\r\n                <BoardError />\r\n            ) : (\r\n                <PageTemplate\r\n                    boardName={board.name}\r\n                    pageTitle={`Board - ${board.name}`}\r\n                    isHeaderBoard={true}>\r\n                    <div className=\"board\">\r\n                        <BoardMenu isOpen={isOpenBoardMenu} setIsOpen={setIsOpenBoardMenu} />\r\n\r\n                        {board.NOT_MEMBER ? (\r\n                            <p className=\"board__not-member\">\r\n                                This board is public , you can't interact with him if you are not\r\n                                member\r\n                            </p>\r\n                        ) : (\r\n                            <div className=\"board__top\">\r\n                                <div className=\"board__top__left\">\r\n                                    <span>\r\n                                        <Button\r\n                                            className=\"board__top__left__btn-state\"\r\n                                            onClick={() => setIsOpenPrivateOrPublic(true)}>\r\n                                            <MdLock className=\"board__top__left__btn-state__icon\" />\r\n                                            {board.isPrivate ? 'Private' : 'Public'}\r\n                                        </Button>\r\n                                        <PrivateOrPublic\r\n                                            isOpen={isOpenPrivateOrPublic}\r\n                                            setIsOpen={setIsOpenPrivateOrPublic}\r\n                                        />\r\n                                    </span>\r\n                                    <div className=\"board__top__left__members\">\r\n                                        <ul className=\"board__top__left__members__list\">\r\n                                            {!isEmpty(board.members) &&\r\n                                                board.members.map(({ picture, _id, pseudo }) => {\r\n                                                    return (\r\n                                                        <li\r\n                                                            key={_id}\r\n                                                            className=\"board__top__left__members__list__item\">\r\n                                                            <img\r\n                                                                src={getPicturePath(\r\n                                                                    'user',\r\n                                                                    picture\r\n                                                                )}\r\n                                                                alt={`${pseudo} profil`}\r\n                                                                style={{ width: '100%' }}\r\n                                                            />\r\n                                                        </li>\r\n                                                    );\r\n                                                })}\r\n                                        </ul>\r\n                                        <div className=\"board__top__left__members__adduser-wrapper\">\r\n                                            <Button\r\n                                                className=\"board__top__left__members__btn-adduser\"\r\n                                                onClick={() => setIsOpenInviteMember(true)}>\r\n                                                <MdAdd />\r\n                                            </Button>\r\n                                            <InviteMember\r\n                                                isOpen={isOpenInviteMember}\r\n                                                setIsOpen={setIsOpenInviteMember}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"board__top__right\">\r\n                                    <Button\r\n                                        className=\"board__top__right__btn-menu\"\r\n                                        onClick={() => setIsOpenBoardMenu(true)}>\r\n                                        <HiDotsHorizontal className=\"board__top__right__btn-menu__icon\" />\r\n                                        <span className=\"board__top__right__btn-menu__label\">\r\n                                            Show Menu\r\n                                        </span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {/* ALL LIST */}\r\n                        <ListManager />\r\n                    </div>\r\n                </PageTemplate>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect()(Board);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { isEmpty } from '../../utils/utils';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                !isEmpty(!user) ? <Component /> : <Redirect to=\"/login\" />\r\n            }></Route>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Footer from '../components/templates/Footer';\nimport Home from '../pages/Home';\nimport Login from '../pages/Auth/Login';\nimport Register from '../pages/Auth/Register';\nimport Board from '../pages/Board';\nimport { useSelector } from 'react-redux';\nimport { isEmpty } from '../utils/utils';\nimport PrivateRoute from '../components/routes/PrivateRoute.js';\n// import BoardError from '../pages/BoardError';\n\nconst MainRouter = (props) => {\n    const user = useSelector((state) => state.userReducer);\n    const isLoading = useSelector((state) => state.loaderReducer);\n    // const redirect = useSelector((state) => state.redirectReducer);\n    // FAIRE UNE ROUTE PRIVE POUR REDIGER VERS LOGIN SI PAS AUTH\n    // ET ETRE REDIGE SUR LA PAGE ACTUEL SANS BUG (CAR ACTULLEMENT BUG 1 FOIS SUR 5...)\n\n    return (\n        <>\n            <Router>\n                {/* {redirect && <Redirect to={redirect} />} */}\n                {!isLoading && isEmpty(user) && <Redirect to=\"/login\" />}\n                <Switch>\n                    <PrivateRoute exact path=\"/allboards\" component={Home} />\n                    <PrivateRoute exact path=\"/board/:id\" component={Board} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    {!isEmpty(user) && document.location.pathname === '/' && (\n                        <Redirect to=\"/login\" />\n                    )}\n                    <>\n                        <h1>Error 404</h1>\n                    </>\n                </Switch>\n                <Footer />\n            </Router>\n        </>\n    );\n};\n\nexport default MainRouter;\n","import React from 'react';\r\nimport Loader from '../utils/Loader';\r\n\r\nconst PageLoader = (props) => {\r\n    return (\r\n        <div className=\"pageloader\">\r\n            <Loader radius=\"280\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React from 'react';\r\n\r\nconst Toast = ({ icon, info, type, onClick, style }) => {\r\n    return (\r\n        <li style={style} className={`toast toast-${type}`} onClick={onClick}>\r\n            <div className=\"toast__icon\">{icon}</div>\r\n            <span className=\"toast__info\">{info}</span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Toast;\r\n","import React from 'react';\r\nimport Toast from '../utils/Toast';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { removeToast } from '../../redux/actions/toast.action';\r\n\r\nconst PopupManagerStyle = {\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '50%',\r\n    transform: 'translateX(-50%)',\r\n    zIndex: '9999999',\r\n    listStyle: 'none',\r\n    wordBreak: 'break-all',\r\n    maxHeight: '100vh',\r\n};\r\n\r\nconst PopupManager = (props) => {\r\n    const toasts = useSelector((state) => state.toastReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ul style={PopupManagerStyle}>\r\n            <TransitionGroup>\r\n                {toasts.map((toast, index) => {\r\n                    return (\r\n                        <CSSTransition\r\n                            // unmountOnExit\r\n                            key={index}\r\n                            appear={true}\r\n                            timeout={300}\r\n                            classNames=\"toast\">\r\n                            <Toast\r\n                                key={index + 1}\r\n                                icon={toast.icon}\r\n                                info={toast.info}\r\n                                type={toast.type}\r\n                                onClick={() => dispatch(removeToast(toast.id))}\r\n                            />\r\n                        </CSSTransition>\r\n                    );\r\n                })}\r\n            </TransitionGroup>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PopupManager;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    addCard,\r\n    addList,\r\n    banMember,\r\n    changeDescription,\r\n    changeState,\r\n    deleteBoard,\r\n    deleteList,\r\n    joinBoard,\r\n    leaveBoard,\r\n} from '../redux/actions/board.action';\r\nimport { addNotification } from '../redux/actions/user.action';\r\nimport socket from '../utils/socket';\r\n\r\nconst SocketManager = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        socket.on('send invitation', (invitations) => {\r\n            dispatch(addNotification(invitations));\r\n        });\r\n        socket.on('join board', ({ user, board }) => {\r\n            dispatch(joinBoard(user, board));\r\n        });\r\n        socket.on('change state', ({ boardID, state }) => {\r\n            dispatch(changeState(boardID, state));\r\n        });\r\n        socket.on('ban member', ({ boardID, memberBannedID }) => {\r\n            dispatch(banMember(boardID, memberBannedID));\r\n        });\r\n        socket.on('change description', ({ description, boardID }) => {\r\n            console.log('change desc scktio');\r\n            dispatch(changeDescription(description, boardID));\r\n        });\r\n        socket.on('add list', ({ listCreated, boardID, userID }) => {\r\n            console.log('add list scktio');\r\n            dispatch(addList(listCreated, boardID, userID));\r\n        });\r\n        socket.on('add card', ({ cardCreated, listID, boardID, userID }) => {\r\n            console.log('add card scktio');\r\n            dispatch(addCard(cardCreated, listID, boardID));\r\n        });\r\n        socket.on('delete list', ({ listID, boardID }) => {\r\n            console.log('delete list scktio');\r\n            dispatch(deleteList(listID, boardID));\r\n        });\r\n        socket.on('leave board', ({ userID, boardID }) => {\r\n            console.log('leave board scktio');\r\n            dispatch(leaveBoard(userID, boardID));\r\n        });\r\n        socket.on('delete board', (boardID) => {\r\n            dispatch(deleteBoard(boardID));\r\n        });\r\n    }, []);\r\n\r\n    return <></>;\r\n};\r\n\r\nexport default SocketManager;\r\n","import React, { useEffect } from 'react';\nimport Router from './router/index';\nimport PageLoader from './components/templates/PageLoader';\nimport { useSelector } from 'react-redux';\nimport ToastManager from './components/templates/ToastManager';\nimport SocketManager from './socket/socketManager';\n\nconst App = (props) => {\n    const isLoading = useSelector((state) => state.loaderReducer);\n\n    useEffect(() => {\n        isLoading\n            ? (document.querySelector('html').style = 'overflow : hidden')\n            : (document.querySelector('html').style = 'overflow : visible');\n    }, [isLoading]);\n\n    return (\n        <div className=\"app\">\n            {isLoading && <PageLoader />}\n            <SocketManager />\n            <ToastManager />\n            <Router />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './scss/index.scss';\nimport { CookiesProvider } from 'react-cookie';\nimport { rememberMe } from './redux/actions/user.action';\n\nstore.dispatch(rememberMe());\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </CookiesProvider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}