{"version":3,"sources":["components/templates/Footer.js","components/utils/Button.js","redux/actions/toast.action.js","config.js","utils/axios.js","redux/actions/loader.action.js","redux/actions/board.action.js","redux/actions/user.action.js","redux/reducer/user.reducer.js","redux/reducer/board.reducer.js","redux/reducer/toast.reducer.js","redux/actions/redirect.action.js","redux/actions/modal.action.js","redux/reducer/modal.reducer.js","redux/reducer/rootReducer.js","redux/reducer/loader.reducer.js","redux/reducer/redirect.reducer.js","redux/store.js","utils/utils.js","components/utils/Dropdown.js","components/utils/Modal.js","utils/socket.js","components/templates/modal/Notifications.js","components/templates/dropdown/ProfilMenu.js","components/templates/Header.js","components/templates/PageTemplate.js","components/templates/modal/CreateBoard.jsx","components/templates/board/BoardItem.js","pages/Home.js","assets/images/Logo.svg","components/layouts/AuthWrapper.js","pages/Auth/Login.js","components/utils/Loader.js","pages/Auth/Register.js","components/templates/dropdown/InviteMember.js","pages/BoardError.js","components/templates/dropdown/PrivateOrPublic.js","components/templates/EmojiPicker.js","components/templates/ContentEditable.js","components/layouts/CategoryTitle.js","components/templates/dropdown/BoardMenu.js","components/templates/board/AddList.js","components/templates/dropdown/AssignMember.js","components/layouts/UserDisplay.js","components/templates/modal/CardModal/Description.js","components/templates/modal/CardModal/Attachments.js","components/templates/board/CommentBox.js","components/templates/modal/CardModal/Comments.js","components/templates/board/CardLabel.js","components/templates/dropdown/Label.js","components/templates/modal/CardModal.js","components/templates/modal/ModalManager.js","components/templates/board/CardItem.js","components/templates/board/Placeholder.js","components/templates/board/ListItem.js","components/templates/board/ListManager.js","pages/Board.js","components/routes/PrivateRoute.js","router/index.js","components/templates/PageLoader.js","components/utils/Toast.js","components/templates/ToastManager.js","socket/socketManager.js","App.js","index.js"],"names":["Footer","props","button","cursor","Button","children","type","onClick","className","style","PUSH_TOAST","REMOVE_TOAST","CLEAR_TOAST","API_URL","axios","create","baseURL","responseType","LOADING","END_LOADING","loading","dispatch","payload","endLoading","CREATE_BOARD","GET_BOARD","GET_ALL_BOARD_BY_USERID","CLEAN_CURRENTBOARD","JOIN_BOARD","CHANGE_STATE","BAN_MEMBER","CHANGE_DESCRIPTION","ADD_LIST","LEAVE_BOARD","DELETE_BOARD","ADD_CARD","DELETE_LIST","RENAME_LIST","REORDER_LIST","ASSIGN_MEMBER","CHANGE_CARD_TITLE","CHANGE_CARD_DESCRIPTION","ADD_CARD_LABEL","DELETE_CARD_LABEL","getAllBoardByUserID","userID","get","then","res","boards","data","catch","err","console","log","reorderList","listsReorder","boardID","a","currentUser","store","getState","userReducer","LOGIN","REMEMBER_ME","ADD_NOTIFICATION","DELETE_NOTIFICATION","deleteNotification","notificationID","boardIDRequested","deleteNotifObject","post","initialState","currentBoard","REDIRECT","CLEAR_REDIRECT","OPEN_MODAL","CLOSE_MODAL","modalName","combineReducers","state","action","notifications","userIndex","findIndex","invit","_id","filter","notif","boardReducer","currentBoardIndex","board","user","members","map","push","NOT_MEMBER","document","location","reload","isPrivate","memberBannedID","member","description","isEmpty","lists","listCreated","list","listID","cards","cardCreated","name","rename","forEach","card","cardID","assignedMembers","title","cardTitle","labels","label","labelID","loaderReducer","toastReducer","toastID","toast","id","includes","redirectReducer","modalReducer","createStore","rootReducer","composeWithDevTools","applyMiddleware","thunk","value","undefined","Object","keys","length","trim","setRememberMeCookie","token","Cookies","set","maxAge","errorsManager","error","addToast","icon","info","uuid","setTimeout","pushToast","clearToastByTypes","clearToast","warningToast","message","successToast","getPicturePath","model","image","removeHtmlStyle","html","replaceAll","closeOnClickOutside","ref","setIsOpen","window","addEventListener","e","current","contains","target","getDraggedDom","draggableID","querySelector","cutMongooseTimestampInDate","mongooseTimestamp","noFormatDate","years","substring","monthNum","monthLetter","dayNum","dayLetter","hour","DropDown","contentRef","contentClass","allowsRef","isOpen","isResponsive","maxWidthResponsive","isVertical","top","right","bottom","left","topResponsive","rightResponsive","bottomResponsive","leftResponsive","dropdownContentRef","useRef","currentRef","isBreakPoint","useMediaQuery","query","useState","contentSize","setContentSize","heightOrWidth","defaultStyle","transition","transitionStyles","entering","entered","exiting","exited","useEffect","getBoundingClientRect","height","width","handleCloseDropDown","removeEventListener","Transition","unmountOnExit","in","timeout","Modal","hasCloseButton","hasOverflowYScroll","hasChoiceButton","btnConfirmMessage","btnConfirmIcon","confirmMessage","confirmFunction","isOpenContent","setIsOpenContent","modalRef","useDispatch","handleCloseModal","CSSTransition","classNames","appear","onEntered","onExit","onExited","alignItems","io","Notifications","useSelector","textAlign","marginTop","joinBoardObject","socket","emit","handleJoinBoard","ProfilMenu","isOpenNotification","setIsOpenNotification","useCookies","removeCookie","fontSize","path","Header","isHeaderBoard","boardName","isOpenSearchBar","setIsOpenSearchBar","isOpenProfilMenu","setIsOpenProfilMenu","test","setTest","to","minWidth","viewBox","fill","xmlns","d","maxWidth","placeholder","src","picture","alt","pseudo","PageTemplate","pageTitle","hasHeader","isLoading","ModalCreateBoard","picturePreview","setPicturePreview","owner","newBoard","setNewBoard","handleChangePicture","files","pictureFile","URL","createObjectURL","picturePreviewURL","handleCreateBoard","FormData","append","errors","response","createBoard","htmlFor","backgroundImage","onChange","accept","hidden","maxLength","oldNewBoard","BoardItem","index","slice","MEMBER_MAX_LENGTH","Home","isOpenCreateBoard","setIsOpenCreateBoard","authContainer","display","justifyContent","logo","position","AuthWrapper","ThulloLogo","Login","email","password","userLogin","setUserLogin","onSubmit","preventDefault","login","noValidate","autoComplete","Loader","radius","color","cx","cy","r","strokeWidth","stroke","Register","emailAlreadyExist","setEmailAlreadyExist","isSignUpSuccessful","setIsSignUpSuccessful","setIsLoading","userRegister","useFormik","initialValues","confirmPassword","validationSchema","Yup","min","max","required","oneOf","values","finally","handleRegister","handleSubmit","getFieldProps","touched","InviteMember","usersToInvite","setUsersToInvite","userSelected","setUserSelected","userSearch","setUserSearch","searchValue","setSearchValue","marginBottom","invitationObject","senderPseudo","guestUserIDList","userSug","handleSendInvation","BoardError","PrivateOrPublic","handleChangeState","EmojiPicker","emoji","setEmoji","emo","character","ContentEditable","content","submitFunc","HTMLInjectedRef","isOpenEmojiPicker","setIsOpenEmojiPicker","editorRef","descriptionRef","outputRef","parseValue","handleSaveDescription","innerHTML","onKeyDown","keyCode","sel","ownerDocument","defaultView","getSelection","range","getRangeAt","tabNode","createTextNode","String","fromCodePoint","insertNode","setStartAfter","setEndAfter","removeAllRanges","addRange","insertSpecialCharacter","spellCheck","onInput","contentEditable","CategoryTitle","withMarginBottom","BoardMenu","boardMenuRef","isEditDescription","setIsEditDescription","isBoardOwner","createdAt","handleFormatDate","newDesc","banMemberObject","handleBanMember","leaveBoardObject","handleLeaveBoard","handleDeleteBoard","AddListOrCard","isAddList","isFirstList","isFirstCard","scrollBottomReset","scrollLeftReset","addListRef","inputRef","isOpenInput","setIsOpenInput","setName","currentIsOpen","currentSetIsOpen","handleOnClick","currentListID","on","focus","event","handleAddListOrCard","margin","background","AssignMember","cardMembers","setMembers","memberID","memberIDArg","oldMember","assignMemberObject","assignedMembersID","UserDisplay","Description","isOpenEditDesc","setIsOpenEditDesc","dangerouslySetInnerHTML","__html","Attachments","attachments","attachmentsState","setAttachmentsState","attachmentID","oldAttachment","attach","isPicture","file","fileExtension","match","toLowerCase","formData","handleAddAttachement","filePath","download","handleDownloadAttachment","CommentBox","setContent","isNewComment","userPicture","commentBoxRef","commentRef","isDisabledPlaceholder","setIsDisabledPlaceholder","isFocus","setIsFocus","textContent","onFocus","onBlur","Comments","comments","newCommentRef","commentsState","setCommentsState","commentID","isEdit","commentEdited","setCommentEdited","commentMessageEdited","setCommentMessageEdited","setMessage","oldComments","comment","currentCardID","off","handleSetEditComment","innerText","labelStyle","borderRadius","padding","marginRight","CardLabel","isDeleted","backgroundColor","marginLeft","Label","labelsState","setLabelsState","labelName","setLabelName","colorSelected","setColorSelected","colors","darkGreen","yellow","orange","red","blue","cyan","lightGreen","veryDarkGray","darkGray","midGray","lightGray","gray","oldLabels","colorsItems","handleReturnColorItem","CardModal","listName","setCard","isOpenLabel","setIsOpenLabel","isOpenAssignMember","setIsOpenAssignMember","oldCard","changeCardTitleObject","handleChangeCardTitle","CARD_MODAL","ModalManager","handleModalCall","CardItem","stopPropagation","Placeholder","destinationIndex","currentListOverID","placeholderProps","setPlaceholderProps","domQuery","domListQuery","draggedDOM","listOverDOM","clientHeight","clientWidth","clientY","parseFloat","getComputedStyle","parentNode","paddingTop","reduce","total","curr","currentStyle","clientX","paddingLeft","ListItem","React","forwardRef","placeHolderProps","droppableListDomID","inputRenameRef","renameFormRef","isOpenInputAddCard","setIsOpenInputAddCard","listsReducer","setRename","isOpenListMenu","setIsOpenListMenu","isOpenConfirmDeleteList","setIsOpenConfirmDeleteList","isOpenListRename","setIsOpenListRename","cardsState","setCardsState","draggableId","provided","snapshot","innerRef","draggableProps","dragHandleProps","handleAddCartScrollReset","listEl","scrollTop","scrollHeight","handleOpenInputAddCard","handleOpenListRename","defaultValue","droppableId","droppableProps","isDraggingOver","AddList","ListManager","listsState","setListsState","setPlaceHolderProps","isDragScroll","setIsDragScroll","handleClearDraggedAnimation","classList","remove","handleClearDraggedAnimationCallback","useCallback","handleDragScroll","el","Math","sign","movementX","scrollLeft","abs","getListIDByDraggableID","draggabID","handleAddListScrollReset","boardEl","scrollWidth","onDragUpdate","dragprops","destination","onDragStart","add","source","onDragEnd","currentIndex","array","newArray","splice","reorderArray","destinationListID","currentCardIndex","destinationCardIndex","newLists","currentListIndex","destinationListIndex","cardDragged","reorderCardFunc","direction","onMouseDown","onMouseMove","onMouseUp","paddingRight","connect","useParams","isOpenInviteMember","setIsOpenInviteMember","isOpenPrivateOrPublic","setIsOpenPrivateOrPublic","isOpenBoardMenu","setIsOpenBoardMenu","withCredentials","PrivateRoute","Component","component","rest","render","MainRouter","exact","Board","pathname","PageLoader","Toast","PopupManagerStyle","transform","zIndex","listStyle","wordBreak","maxHeight","PopupManager","toasts","TransitionGroup","SocketManager","dispatchCallback","func","invitations","joinBoard","changeState","banMember","changeDescription","addList","addCard","renameList","deleteList","assignMemberToCard","changeCardTitle","changeCardDescription","addCardLabel","deleteCardLabel","leaveBoard","deleteBoard","App","ToastManager","cookie","ReactDOM","CookiesProvider"],"mappings":"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","file":"static/js/main.b1cd3267.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n// const footer = {\r\n//     clear: 'both',\r\n//     position: 'relative',\r\n//     height: '30px',\r\n//     marginTop: '-30px',\r\n//     display: 'flex',\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//     textAlign: 'center',\r\n//     fontSize: '0.9rem',\r\n// };\r\n\r\nconst Footer = (props) => {\r\n    return (\r\n        <>\r\n            {/* <footer style={footer}>\r\n                <p>\r\n                    © 2021 coded by <a href=\"#\">Alex</a> , devchallenges.io\r\n                </p>\r\n            </footer> */}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Footer;\r\n","import React from 'react';\r\n\r\nconst button = {\r\n    cursor: 'pointer',\r\n};\r\n\r\nconst Button = ({ children, type, onClick, className, style }) => {\r\n    return (\r\n        <button\r\n            type={type}\r\n            style={{ ...button, ...style }}\r\n            className={`${className}`}\r\n            onClick={onClick}>\r\n            {children}\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { v4 as uuid } from 'uuid';\r\n\r\nexport const PUSH_TOAST = 'PUSH_TOAST';\r\nexport const REMOVE_TOAST = 'REMOVE_TOAST';\r\nexport const CLEAR_TOAST = 'CLEAR_TOAST';\r\n\r\nexport const pushToast = (icon, info, type) => {\r\n    return (dispatch) => {\r\n        const toastID = uuid();\r\n        dispatch({ type: PUSH_TOAST, payload: { id: toastID, icon, info, type } });\r\n        setTimeout(() => {\r\n            dispatch({ type: REMOVE_TOAST, payload: toastID });\r\n        }, 6000);\r\n    };\r\n};\r\n\r\nexport const removeToast = (toastID) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: REMOVE_TOAST, payload: toastID });\r\n    };\r\n};\r\n\r\nexport const clearToast = (type) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CLEAR_TOAST, payload: type });\r\n    };\r\n};\r\n","/**\n * FOR LOCAL\n */\n// export const API_URL = 'http://localhost:5000/api';\n// export const SOCKET_URL = 'http://localhost:5000';\n\n/**\n * FOR HEROKU\n */\nexport const API_URL = '/api';\nexport const SOCKET_URL = '';\n\n// export const API_URL = 'http://c24487f3706e.ngrok.io';\n// export const SOCKET_URL = 'http://c24487f3706e.ngrok.io';\n","import axios from 'axios';\r\nimport { API_URL } from '../config';\r\n\r\nexport default axios.create({\r\n    baseURL: API_URL,\r\n    responseType: 'json',\r\n});\r\n","export const LOADING = 'LOADING';\r\nexport const END_LOADING = 'END_LOADING';\r\n\r\nexport const loading = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: LOADING, payload: true });\r\n    };\r\n};\r\n\r\nexport const endLoading = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: END_LOADING, payload: false });\r\n    };\r\n};\r\n","import axios from '../../utils/axios';\r\nimport { errorsManager, successToast } from '../../utils/utils';\r\nimport { store } from '../store';\r\nimport { endLoading, loading } from './loader.action';\r\n\r\nexport const CREATE_BOARD = 'CREATE_BOARD';\r\nexport const GET_BOARD = 'GET_BOARD';\r\nexport const GET_ALL_BOARD_BY_USERID = 'GET_ALL_BOARD_BY_USERID';\r\nexport const CLEAN_CURRENTBOARD = 'CLEAN_CURRENTBOARD';\r\nexport const JOIN_BOARD = 'JOIN_BOARD';\r\nexport const CHANGE_STATE = 'CHANGE_STATE';\r\nexport const BAN_MEMBER = 'BAN_MEMBER';\r\nexport const CHANGE_DESCRIPTION = 'CHANGE_DESCRIPTION';\r\nexport const ADD_LIST = 'ADD_LIST';\r\nexport const LEAVE_BOARD = 'LEAVE_BOARD';\r\nexport const DELETE_BOARD = 'DELETE_BOARD';\r\nexport const ADD_CARD = 'ADD_CARD';\r\nexport const DELETE_LIST = 'DELETE_LIST';\r\nexport const RENAME_LIST = 'RENAME_LIST';\r\nexport const REORDER_LIST = 'REORDER_LIST';\r\nexport const REORDER_CARD = 'REORDER_CARD';\r\nexport const ASSIGN_MEMBER = 'ASSIGN_MEMBER';\r\nexport const CHANGE_CARD_TITLE = 'CHANGE_CARD_TITLE';\r\nexport const CHANGE_CARD_DESCRIPTION = 'CHANGE_CARD_DESCRIPTION';\r\nexport const ADD_CARD_LABEL = 'ADD_CARD_LABEL';\r\nexport const DELETE_CARD_LABEL = 'DELETE_CARD_LABEL';\r\n\r\nexport const createBoard = (data) => {\r\n    return (dispatch) => {\r\n        axios\r\n            .post('/board/create', data)\r\n            .then((res) => {\r\n                const board = res.data;\r\n                console.log(board);\r\n                successToast(`Board ${board.name} create !`);\r\n                return dispatch({ type: CREATE_BOARD, payload: board });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n                const errors = err.response.data;\r\n                errorsManager(errors);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getAllBoardByUserID = (userID) => {\r\n    return (dispatch) => {\r\n        return axios\r\n            .get(`/board/getallboardbyuserid/${userID}`)\r\n            .then((res) => {\r\n                const boards = res.data;\r\n                dispatch({ type: GET_ALL_BOARD_BY_USERID, payload: boards });\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n};\r\n\r\nexport const getBoard = (boardID) => {\r\n    return (dispatch) => {\r\n        dispatch(loading());\r\n        axios\r\n            .get(`/board/${boardID}`, { withCredentials: true })\r\n            .then((res) => {\r\n                const boards = res.data;\r\n                console.log(boards);\r\n                dispatch({ type: GET_BOARD, payload: boards });\r\n            })\r\n            .catch((err) => {\r\n                const errors = err.response.data;\r\n                errorsManager(errors);\r\n                dispatch({ type: GET_BOARD, payload: 'BOARD_ERROR' });\r\n            })\r\n            .finally(() => {\r\n                dispatch(endLoading());\r\n            });\r\n    };\r\n};\r\n\r\nexport const cleanCurrentBoard = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CLEAN_CURRENTBOARD, payload: {} });\r\n    };\r\n};\r\n\r\nexport const joinBoard = (user, board) => {\r\n    return async (dispatch) => {\r\n        const currentUser = await store.getState().userReducer;\r\n        console.log(user);\r\n        dispatch({ type: JOIN_BOARD, payload: { currentUser, user, board } });\r\n    };\r\n};\r\n\r\nexport const changeState = (boardID, state) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CHANGE_STATE, payload: { boardID, state } });\r\n    };\r\n};\r\n\r\nexport const banMember = (boardID, memberBannedID) => {\r\n    return async (dispatch) => {\r\n        const currentUser = await store.getState().userReducer;\r\n        return dispatch({ type: BAN_MEMBER, payload: { boardID, memberBannedID, currentUser } });\r\n    };\r\n};\r\n\r\nexport const changeDescription = (description, boardID) => {\r\n    return async (dispatch) => {\r\n        return dispatch({\r\n            type: CHANGE_DESCRIPTION,\r\n            payload: { description, boardID },\r\n        });\r\n    };\r\n};\r\n\r\nexport const addList = (listCreated, boardID, userID) => {\r\n    return async (dispatch) => {\r\n        const currentUser = store.getState().userReducer;\r\n        return dispatch({ type: ADD_LIST, payload: { listCreated, boardID, userID, currentUser } });\r\n    };\r\n};\r\n\r\nexport const addCard = (cardCreated, listID, boardID) => {\r\n    return async (dispatch) => {\r\n        return dispatch({ type: ADD_CARD, payload: { cardCreated, listID, boardID } });\r\n    };\r\n};\r\n\r\nexport const deleteList = (listID, boardID) => {\r\n    return async (dispatch) => {\r\n        return dispatch({ type: DELETE_LIST, payload: { listID, boardID } });\r\n    };\r\n};\r\n\r\nexport const renameList = (rename, listID, boardID) => {\r\n    return async (dispatch) => {\r\n        return dispatch({ type: RENAME_LIST, payload: { rename, listID, boardID } });\r\n    };\r\n};\r\n\r\nexport const reorderList = (listsReorder, boardID, userID) => {\r\n    return async (dispatch) => {\r\n        const currentUser = store.getState().userReducer;\r\n\r\n        return dispatch({\r\n            type: REORDER_LIST,\r\n            payload: { listsReorder, boardID, userID, currentUser },\r\n        });\r\n    };\r\n};\r\n\r\nexport const leaveBoard = (userID, boardID) => {\r\n    return async (dispatch) => {\r\n        const currentUser = store.getState().userReducer;\r\n        return dispatch({ type: LEAVE_BOARD, payload: { userID, boardID, currentUser } });\r\n    };\r\n};\r\n\r\nexport const deleteBoard = (boardID) => {\r\n    return async (dispatch) => {\r\n        return dispatch({ type: DELETE_BOARD, payload: { boardID } });\r\n    };\r\n};\r\n\r\nexport const assignMemberToCard = (assignedMembers, boardID, listID, cardID) => {\r\n    return async (dispatch) => {\r\n        return dispatch({\r\n            type: ASSIGN_MEMBER,\r\n            payload: { assignedMembers, boardID, listID, cardID },\r\n        });\r\n    };\r\n};\r\n\r\nexport const changeCardTitle = (boardID, listID, cardID, cardTitle) => {\r\n    return async (dispatch) => {\r\n        return dispatch({\r\n            type: CHANGE_CARD_TITLE,\r\n            payload: { boardID, listID, cardID, cardTitle },\r\n        });\r\n    };\r\n};\r\n\r\nexport const changeCardDescription = (boardID, listID, cardID, description) => {\r\n    return async (dispatch) => {\r\n        return dispatch({\r\n            type: CHANGE_CARD_DESCRIPTION,\r\n            payload: { boardID, listID, cardID, description },\r\n        });\r\n    };\r\n};\r\nexport const addCardLabel = (boardID, listID, cardID, label) => {\r\n    return async (dispatch) => {\r\n        return dispatch({\r\n            type: ADD_CARD_LABEL,\r\n            payload: { boardID, listID, cardID, label },\r\n        });\r\n    };\r\n};\r\n\r\nexport const deleteCardLabel = (boardID, listID, cardID, labelID) => {\r\n    return async (dispatch) => {\r\n        return dispatch({\r\n            type: DELETE_CARD_LABEL,\r\n            payload: { boardID, listID, cardID, labelID },\r\n        });\r\n    };\r\n};\r\n","import { Cookies } from 'react-cookie';\nimport axios from '../../utils/axios';\nimport { addToast, clearToastByTypes, errorsManager, setRememberMeCookie } from '../../utils/utils';\nimport { loading, endLoading } from './loader.action';\nimport { FiUserCheck } from 'react-icons/fi';\nimport { getAllBoardByUserID } from './board.action';\n\nexport const LOGIN = 'LOGIN';\nexport const REMEMBER_ME = 'REMEMBER_ME';\nexport const ADD_NOTIFICATION = 'ADD_NOTIFICATION';\nexport const DELETE_NOTIFICATION = 'DELETE_NOTIFICATION';\n\nexport const login = (userLogin) => {\n    return (dispatch) => {\n        axios\n            .post('/user/login', userLogin)\n            .then((res) => {\n                const { user, token } = res.data;\n                setRememberMeCookie(token);\n                clearToastByTypes(['danger', 'warning']);\n                addToast(<FiUserCheck />, `Welcome ${user.pseudo} !`, 'neutral');\n                dispatch(getAllBoardByUserID(user._id));\n                return dispatch({ type: LOGIN, payload: user });\n            })\n            .catch((err) => {\n                const errors = err.response.data;\n                errorsManager(errors);\n            });\n    };\n};\n\nexport const rememberMe = () => {\n    return (dispatch) => {\n        dispatch(loading());\n        const cookie = new Cookies();\n        axios\n            .get('/user/rememberme', { withCredentials: true })\n            .then((res) => {\n                const { user, token } = res.data;\n                setRememberMeCookie(token);\n                addToast(<FiUserCheck />, `Welcome ${user.pseudo} !`, 'neutral');\n                dispatch(getAllBoardByUserID(user._id));\n                return dispatch({ type: REMEMBER_ME, payload: user });\n            })\n            .catch((err) => {\n                cookie.remove('token');\n                dispatch({ type: REMEMBER_ME, payload: {} });\n                console.log('RememberMe error : ' + err);\n            })\n            .finally(() => {\n                dispatch(endLoading());\n            });\n    };\n};\n\nexport const addNotification = (notifications) => {\n    return (dispatch) => {\n        console.log(notifications);\n        return dispatch({ type: ADD_NOTIFICATION, payload: notifications });\n    };\n};\n\nexport const deleteNotification = (userID, notificationID, boardIDRequested) => {\n    return (dispatch) => {\n        const deleteNotifObject = {\n            userID,\n            notificationID,\n            boardIDRequested,\n        };\n        return axios\n            .post(`/user/delete-notification`, deleteNotifObject)\n            .then((res) => {\n                return dispatch({ type: DELETE_NOTIFICATION, payload: notificationID });\n            })\n            .catch((err) => {\n                console.log(err);\n            });\n    };\n};\n","import { LOGIN, REMEMBER_ME, ADD_NOTIFICATION, DELETE_NOTIFICATION } from '../actions/user.action';\n\nconst initialState = {};\n\nexport default function userReducer(state = initialState, action) {\n    switch (action.type) {\n        case LOGIN:\n            return action.payload;\n        case REMEMBER_ME:\n            return action.payload;\n        case ADD_NOTIFICATION:\n            const notifications = action.payload;\n            const userIndex = notifications.findIndex((invit) => invit._id === state._id);\n            return userIndex === -1\n                ? { ...state }\n                : {\n                      ...state,\n                      notifications: [\n                          ...state.notifications,\n                          notifications[userIndex].notifications,\n                      ],\n                  };\n        case DELETE_NOTIFICATION:\n            return {\n                ...state,\n                notifications: state.notifications.filter((notif) => notif._id !== action.payload),\n            };\n        default:\n            return state;\n    }\n}\n","import { isEmpty } from '../../utils/utils';\nimport {\n    GET_BOARD,\n    CREATE_BOARD,\n    GET_ALL_BOARD_BY_USERID,\n    CLEAN_CURRENTBOARD,\n    JOIN_BOARD,\n    CHANGE_STATE,\n    BAN_MEMBER,\n    CHANGE_DESCRIPTION,\n    ADD_LIST,\n    LEAVE_BOARD,\n    DELETE_BOARD,\n    ADD_CARD,\n    DELETE_LIST,\n    RENAME_LIST,\n    REORDER_LIST,\n    ASSIGN_MEMBER,\n    CHANGE_CARD_TITLE,\n    CHANGE_CARD_DESCRIPTION,\n    ADD_CARD_LABEL,\n    DELETE_CARD_LABEL,\n} from '../actions/board.action';\n\nconst initialState = {\n    currentBoard: {},\n    boards: [],\n};\n\nexport default function boardReducer(state = initialState, action) {\n    switch (action.type) {\n        case CREATE_BOARD:\n            const boards = state.boards ? [...state.boards, action.payload] : [action.payload];\n            // const boards = [action.payload];\n            // return { ...state };\n            // return { ...state, boards: [...state.boards, action.payload] };\n            return { ...state, boards: boards };\n        case GET_ALL_BOARD_BY_USERID:\n            return { ...state, boards: action.payload };\n        case GET_BOARD:\n            // return { ...state };\n            return { ...state, currentBoard: action.payload };\n        case CLEAN_CURRENTBOARD:\n            return { ...state, currentBoard: {} };\n        case JOIN_BOARD:\n            const currentBoardIndex = state.boards.findIndex(\n                (board) => board._id === action.payload.board._id\n            );\n            if (action.payload.currentUser._id === action.payload.user._id)\n                return { ...state, boards: [...state.boards, action.payload.board] };\n            if (action.payload.board._id === state.currentBoard._id && currentBoardIndex !== -1)\n                return {\n                    ...state,\n                    currentBoard: {\n                        ...state.currentBoard,\n                        members: [...state.currentBoard.members, action.payload.user],\n                    },\n                    boards: state.boards.map((board) => {\n                        if (board._id === action.payload.board._id)\n                            board.members.push(action.payload.user);\n                        return board;\n                    }),\n                };\n            if (action.payload.board._id !== state.currentBoard._id && currentBoardIndex !== -1)\n                return {\n                    ...state,\n                    boards: state.boards.map((board) => {\n                        if (board._id === action.payload.board._id)\n                            board.members.push(action.payload.user);\n                        return board;\n                    }),\n                };\n            return { ...state };\n\n        case CHANGE_STATE:\n            if (\n                state.currentBoard._id === action.payload.boardID &&\n                !state.currentBoard.NOT_MEMBER\n            ) {\n                return {\n                    ...state,\n                    currentBoard: { ...state.currentBoard, isPrivate: action.payload.state },\n                };\n            }\n            if (\n                state.currentBoard._id === action.payload.boardID &&\n                state.currentBoard.NOT_MEMBER\n            ) {\n                document.location.reload();\n                return {\n                    ...state,\n                    currentBoard: {},\n                };\n            }\n            return { ...state };\n        case BAN_MEMBER:\n            if (state.currentBoard._id === action.payload.boardID) {\n                if (action.payload.memberBannedID === action.payload.currentUser._id)\n                    document.location.reload();\n                return {\n                    ...state,\n                    currentBoard: {\n                        ...state.currentBoard,\n                        members: state.currentBoard.members.filter(\n                            (member) => member._id !== action.payload.memberBannedID\n                        ),\n                    },\n                    boards: state.boards.map((board) => {\n                        if (board._id === action.payload.boardID) {\n                            board.members = board.members.filter(\n                                (member) => member._id !== action.payload.memberBannedID\n                            );\n                            return board;\n                        }\n                        return board;\n                    }),\n                };\n            }\n            if (\n                state.boards.findIndex((board) => board._id === action.payload.boardID) !== -1 &&\n                action.payload.memberBannedID === action.payload.currentUser._id\n            ) {\n                return {\n                    ...state,\n                    boards: state.boards.filter((board) => board._id !== action.payload.boardID),\n                };\n            }\n            return { ...state };\n        case CHANGE_DESCRIPTION:\n            if (state.currentBoard._id === action.payload.boardID) {\n                return {\n                    ...state,\n                    currentBoard: {\n                        ...state.currentBoard,\n                        description: action.payload.description,\n                    },\n                };\n            }\n            return { ...state };\n        case ADD_LIST:\n            if (state.currentBoard._id !== action.payload.boardID || isEmpty(state.currentBoard))\n                return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: [...state.currentBoard.lists, action.payload.listCreated],\n                },\n            };\n        case ADD_CARD:\n            if (state.currentBoard._id !== action.payload.boardID || isEmpty(state.currentBoard))\n                return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.map((list) => {\n                        if (\n                            state.currentBoard._id === action.payload.boardID &&\n                            list._id === action.payload.listID\n                        )\n                            list.cards.push(action.payload.cardCreated);\n                        return list;\n                    }),\n                },\n            };\n        case RENAME_LIST:\n            if (state.currentBoard._id !== action.payload.boardID) return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.map((list) => {\n                        if (list._id === action.payload.listID) list.name = action.payload.rename;\n                        return list;\n                    }),\n                },\n            };\n        case REORDER_LIST:\n            if (\n                state.currentBoard._id !== action.payload.boardID ||\n                action.payload.currentUser._id === action.payload.userID\n            )\n                return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: action.payload.listsReorder,\n                },\n            };\n        case DELETE_LIST:\n            if (state.currentBoard._id !== action.payload.boardID || isEmpty(state.currentBoard))\n                return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.filter(\n                        (list) => list._id !== action.payload.listID\n                    ),\n                },\n            };\n        case ASSIGN_MEMBER:\n            if (state.currentBoard._id !== action.payload.boardID) return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.map((list) => {\n                        if (list._id === action.payload.listID) {\n                            list.cards.forEach((card) => {\n                                if (card._id === action.payload.cardID) {\n                                    card.members = [...action.payload.assignedMembers];\n                                }\n                            });\n                        }\n\n                        return list;\n                    }),\n                },\n            };\n        case CHANGE_CARD_TITLE:\n            if (state.currentBoard._id !== action.payload.boardID) return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.map((list) => {\n                        if (list._id === action.payload.listID) {\n                            list.cards.forEach((card) => {\n                                if (card._id === action.payload.cardID) {\n                                    console.log('CHANGE CARD TOTITLE');\n                                    card.title = action.payload.cardTitle;\n                                }\n                            });\n                        }\n                        return list;\n                    }),\n                },\n            };\n        case CHANGE_CARD_DESCRIPTION:\n            if (state.currentBoard._id !== action.payload.boardID) return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.map((list) => {\n                        if (list._id === action.payload.listID) {\n                            list.cards.forEach((card) => {\n                                if (card._id === action.payload.cardID) {\n                                    card.description = action.payload.description;\n                                }\n                            });\n                        }\n                        return list;\n                    }),\n                },\n            };\n        case ADD_CARD_LABEL:\n            if (state.currentBoard._id !== action.payload.boardID) return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.map((list) => {\n                        if (list._id === action.payload.listID) {\n                            list.cards.forEach((card) => {\n                                if (card._id === action.payload.cardID) {\n                                    card.labels.push(action.payload.label);\n                                }\n                            });\n                        }\n                        return list;\n                    }),\n                },\n            };\n        case DELETE_CARD_LABEL:\n            if (state.currentBoard._id !== action.payload.boardID) return { ...state };\n\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    lists: state.currentBoard.lists.map((list) => {\n                        if (list._id === action.payload.listID) {\n                            list.cards.forEach((card) => {\n                                if (card._id === action.payload.cardID) {\n                                    card.labels = card.labels.filter(\n                                        (label) => label._id !== action.payload.labelID\n                                    );\n                                }\n                            });\n                        }\n                        return list;\n                    }),\n                },\n            };\n        case LEAVE_BOARD:\n            return {\n                ...state,\n                currentBoard: {\n                    ...state.currentBoard,\n                    members: state.currentBoard.members.filter((member) => {\n                        if (\n                            member._id === action.payload.userID &&\n                            state.currentBoard._id === action.payload.boardID\n                        ) {\n                            if (action.payload.currentUser._id === action.payload.userID)\n                                document.location.reload();\n                            return false;\n                        }\n                        return true;\n                    }),\n                },\n                boards: state.boards.filter((board) => {\n                    return board._id === action.payload.boardID &&\n                        action.payload.currentUser._id === action.payload.userID\n                        ? false\n                        : true;\n                }),\n            };\n        case DELETE_BOARD:\n            return {\n                ...state,\n                currentBoard:\n                    state.currentBoard._id === action.payload.boardID\n                        ? 'BOARD_ERROR'\n                        : { ...state.currentBoard },\n                boards: state.boards.filter((board) => board._id !== action.payload.boardID),\n            };\n        default:\n            return { ...state };\n    }\n}\n","import { CLEAR_TOAST, PUSH_TOAST, REMOVE_TOAST } from '../actions/toast.action';\r\n\r\nconst initialState = [];\r\n\r\nexport default function toastReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case PUSH_TOAST:\r\n            return [...state, action.payload];\r\n        case REMOVE_TOAST:\r\n            const toastID = action.payload;\r\n            return state.filter((toast) => toast.id !== toastID);\r\n        case CLEAR_TOAST:\r\n            return state.filter((toast) => !action.payload.includes(toast.type));\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","export const REDIRECT = 'REDIRECT';\r\nexport const CLEAR_REDIRECT = 'CLEAR_REDIRECT';\r\n\r\nexport const redirect = (to) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: REDIRECT, payload: to });\r\n    };\r\n};\r\n\r\nexport const clearRedirect = () => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CLEAR_REDIRECT, payload: '' });\r\n    };\r\n};\r\n","export const OPEN_MODAL = 'OPEN_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\n\r\nexport const openModal = (modalName, props) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: OPEN_MODAL, payload: { modalName, props } });\r\n    };\r\n};\r\n\r\nexport const closeModal = (props) => {\r\n    return (dispatch) => {\r\n        return dispatch({ type: CLOSE_MODAL, payload: props });\r\n    };\r\n};\r\n","import { CLOSE_MODAL, OPEN_MODAL } from '../actions/modal.action';\r\n\r\nconst initialState = {\r\n    modalName: '',\r\n    props: {},\r\n};\r\n\r\nexport default function modalReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case OPEN_MODAL:\r\n            return action.payload;\r\n        case CLOSE_MODAL:\r\n            return initialState;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { combineReducers } from 'redux';\nimport userReducer from './user.reducer';\nimport boardReducer from './board.reducer';\nimport loaderReducer from './loader.reducer';\nimport toastReducer from './toast.reducer';\nimport redirectReducer from './redirect.reducer';\nimport modalReducer from './modal.reducer';\n\nexport default combineReducers({\n    userReducer,\n    boardReducer,\n    loaderReducer,\n    toastReducer,\n    redirectReducer,\n    modalReducer,\n});\n","import { LOADING, END_LOADING } from '../actions/loader.action';\r\n\r\nconst initialState = false;\r\n\r\nexport default function loaderReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case LOADING:\r\n            return action.payload;\r\n        case END_LOADING:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { CLEAR_REDIRECT, REDIRECT } from '../actions/redirect.action';\r\n\r\nconst initialState = '';\r\n\r\nexport default function redirectReducer(state = initialState, action) {\r\n    switch (action.type) {\r\n        case REDIRECT:\r\n            return action.payload;\r\n        case CLEAR_REDIRECT:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport rootReducer from './reducer/rootReducer';\r\nimport thunk from 'redux-thunk';\r\n\r\n// export const store = createStore(rootReducer, applyMiddleware(thunk));\r\nexport const store = createStore(rootReducer, composeWithDevTools(applyMiddleware(thunk)));\r\n","import { Cookies } from 'react-cookie';\nimport { clearToast, pushToast } from '../redux/actions/toast.action';\nimport { store } from '../redux/store';\nimport { RiErrorWarningLine } from 'react-icons/ri';\nimport { FiCheckCircle } from 'react-icons/fi';\nimport { API_URL } from '../config';\nimport { clearRedirect, redirect } from '../redux/actions/redirect.action';\n\nexport const isEmpty = (value) => {\n    return (\n        value === undefined ||\n        value === null ||\n        (typeof value === 'object' && Object.keys(value).length === 0) ||\n        (typeof value === 'string' && value.trim().length === 0)\n    );\n};\n\nexport const setRememberMeCookie = async (token) => {\n    const cookie = new Cookies();\n    // cookie.remove('token', { path: '/' });\n    cookie.set('token', token, { maxAge: 604800000 }); // 1 week ?\n};\n\nexport const errorsManager = (err) => {\n    for (const error in err) {\n        addToast(<RiErrorWarningLine />, err[error], 'danger');\n    }\n};\n\nexport const addToast = (icon, info, type) => {\n    store.dispatch(pushToast(icon, info, type));\n};\n\nexport const clearToastByTypes = (type) => {\n    store.dispatch(clearToast(type));\n};\nexport const warningToast = (message) => {\n    clearToastByTypes(['danger', 'warning']);\n    addToast(<RiErrorWarningLine />, message, 'warning');\n};\nexport const successToast = (message) => {\n    clearToastByTypes(['danger', 'warning']);\n    addToast(<FiCheckCircle />, message, 'success');\n};\n\nexport const getPicturePath = (model, image) => {\n    switch (model) {\n        case 'board':\n            return `${API_URL}/board-picture/${image}`;\n        case 'user':\n            return `${API_URL}/user-picture/${image}`;\n        case 'attachment':\n            return `${API_URL}/attachment/${image}`;\n        default:\n            console.log('getPicturePath() -> Picture Path Error');\n    }\n};\n\nexport const redirectTo = (to) => {\n    store.dispatch(redirect(to));\n    // setTimeout(() => {\n    store.dispatch(clearRedirect());\n    // }, 500);\n};\n\nexport const insertSpecialCharacter = (ref, character) => {\n    var doc = ref.current.ownerDocument.defaultView;\n\n    var sel = doc.getSelection();\n    var range = sel.getRangeAt(0);\n\n    var tabNode = document.createTextNode(String.fromCodePoint(character)); // code point\n\n    range.insertNode(tabNode);\n\n    range.setStartAfter(tabNode);\n    range.setEndAfter(tabNode);\n    sel.removeAllRanges();\n    sel.addRange(range);\n};\n\nexport const removeHTMLtags = (html) => {\n    return html.replaceAll(/(<([^>]+)>)/gi, '');\n};\n\nexport const removeHtmlClass = (html) => {\n    return html.replaceAll(/class=\"[a-zA-Z0-9:;.\\s()\\-,]*\"/gi, '');\n    // return html.replaceAll(/class=\"[a-zA-Z0-9:;\\.\\s\\(\\)\\-\\,]*\"/gi, '');\n};\n\nexport const removeHtmlStyle = (html) => {\n    return html.replaceAll(/(<[^>]+) style=\".*?\"/gi, '');\n};\n\nexport const removeHtmlAttributes = (html) => {\n    return html.replaceAll(/<\\s*(\\w+).*?>/gi, '');\n};\n\nexport const closeOnClickOutside = (ref, setIsOpen) => {\n    const handleCloseModal = (e) => {\n        if (!ref.current) return () => setIsOpen(false);\n\n        !ref.current.contains(e.target) && setIsOpen(false);\n    };\n\n    window.addEventListener('mousedown', handleCloseModal);\n};\n\nexport const reorderArray = (currentIndex, destinationIndex, array) => {\n    let newArray = [...array];\n    const [reorderList] = newArray.splice(currentIndex, 1);\n    newArray.splice(destinationIndex, 0, reorderList);\n    return newArray;\n};\n\nexport const getDraggedDom = (draggableID) => {\n    const dataName = 'data-rbd-draggable-id';\n    const draggedEl = document.querySelector(`[${dataName}=${draggableID}]`);\n    return draggedEl;\n};\n\nexport const cutMongooseTimestampInDate = (mongooseTimestamp) => {\n    const month = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n    const days = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n\n    const noFormatDate = mongooseTimestamp;\n\n    //  YEAR\n    const years = noFormatDate.substring(0, 4);\n\n    //  MONTH\n    const monthNum =\n        noFormatDate[5] === '0' ? noFormatDate.substring(6, 7) : noFormatDate.substring(5, 7);\n    const monthLetter = month[monthNum - 1];\n\n    //  DAY\n    const dayNum = noFormatDate.substring(8, 10);\n    const dayLetter = days[dayNum];\n\n    // HOUR\n    const hour = noFormatDate.substring(11, 16);\n\n    return { hour, dayNum, dayLetter, monthNum, monthLetter, years };\n};\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useMediaQuery } from 'react-responsive';\r\nimport { Transition } from 'react-transition-group';\r\nimport { isEmpty } from '../../utils/utils';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DropDown = ({\r\n    children,\r\n    contentRef,\r\n    contentClass,\r\n    allowsRef,\r\n    isOpen,\r\n    setIsOpen,\r\n    isResponsive = false,\r\n    maxWidthResponsive = 600,\r\n    isVertical = true,\r\n    title,\r\n    description,\r\n    top,\r\n    right,\r\n    bottom,\r\n    left,\r\n    topResponsive,\r\n    rightResponsive,\r\n    bottomResponsive,\r\n    leftResponsive,\r\n}) => {\r\n    const dropdownContentRef = useRef();\r\n    const currentRef = isVertical ? dropdownContentRef : contentRef;\r\n    const isBreakPoint = useMediaQuery({ query: `(max-width: ${maxWidthResponsive}px)` });\r\n    const [contentSize, setContentSize] = useState(null);\r\n    const heightOrWidth = isVertical ? 'maxHeight' : 'maxWidth';\r\n    const duration = 300;\r\n    const defaultStyle = {\r\n        transition: `${duration}ms ease`,\r\n        [heightOrWidth]: '0',\r\n        // padding: '8px',\r\n        overflow: 'hidden',\r\n    };\r\n    const transitionStyles = {\r\n        entering: {\r\n            [heightOrWidth]: `${contentSize}px`,\r\n            overflow: 'hidden',\r\n        },\r\n        entered: {\r\n            [heightOrWidth]: `${contentSize}px`,\r\n            overflow: 'visible',\r\n        },\r\n        exiting: { [heightOrWidth]: '0', overflow: 'hidden' },\r\n        exited: { [heightOrWidth]: '0', overflow: 'hidden' },\r\n    };\r\n\r\n    useEffect(() => {\r\n        if (!isOpen) return;\r\n        if (currentRef.current) {\r\n            isVertical\r\n                ? setContentSize(currentRef.current.getBoundingClientRect().height)\r\n                : setContentSize(currentRef.current.getBoundingClientRect().width);\r\n        }\r\n        const handleCloseDropDown = (e) => {\r\n            if (isEmpty(allowsRef)) {\r\n                if (!currentRef.current) return setIsOpen(false);\r\n                !currentRef.current.contains(e.target) && setIsOpen(false);\r\n            } else {\r\n                if (!currentRef.current || !allowsRef.current) return setIsOpen(false);\r\n                if (\r\n                    !currentRef.current.contains(e.target) &&\r\n                    !allowsRef.current.contains(e.target)\r\n                ) {\r\n                    setIsOpen(false);\r\n                }\r\n            }\r\n        };\r\n        window.addEventListener('mousedown', handleCloseDropDown);\r\n        if (!currentRef.current) return setIsOpen(false);\r\n        if (!isOpen) {\r\n            window.removeEventListener('mousedown', handleCloseDropDown);\r\n        }\r\n    }, [isOpen, setIsOpen, currentRef, isVertical, allowsRef]);\r\n\r\n    return (\r\n        <>\r\n            <div\r\n                className={`dropdown ${isResponsive && isBreakPoint ? 'dropdown-responsive' : ''}`}\r\n                style={\r\n                    isResponsive && isBreakPoint\r\n                        ? {\r\n                              top: topResponsive,\r\n                              right: rightResponsive,\r\n                              bottom: bottomResponsive,\r\n                              left: leftResponsive,\r\n                          }\r\n                        : { top, right, bottom, left }\r\n                }>\r\n                <Transition unmountOnExit in={isOpen} timeout={duration}>\r\n                    {(state) => (\r\n                        <div\r\n                            className={`dropdown__content`}\r\n                            style={{\r\n                                ...defaultStyle,\r\n                                ...transitionStyles[state],\r\n                            }}>\r\n                            <div\r\n                                className={`${contentClass}`}\r\n                                ref={isVertical && dropdownContentRef}>\r\n                                {title && description && (\r\n                                    <>\r\n                                        <span className=\"dropdown__content__title\">{title}</span>\r\n                                        <span className=\"dropdown__content__description\">\r\n                                            {description}\r\n                                        </span>\r\n                                    </>\r\n                                )}\r\n                                {children}\r\n                            </div>\r\n                        </div>\r\n                    )}\r\n                </Transition>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nDropDown.propTypes = {\r\n    isOpen: PropTypes.bool,\r\n    setIsOpen: PropTypes.func,\r\n};\r\n\r\nexport default DropDown;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Button from '../utils/Button';\r\nimport { IoClose } from 'react-icons/io5';\r\nimport { useDispatch } from 'react-redux';\r\nimport { closeModal } from '../../redux/actions/modal.action';\r\n\r\nconst Modal = ({\r\n    children,\r\n    hasCloseButton = false,\r\n    isOpen,\r\n    setIsOpen,\r\n    hasOverflowYScroll = false,\r\n    hasChoiceButton = false,\r\n    btnConfirmMessage,\r\n    btnConfirmIcon,\r\n    confirmMessage,\r\n    confirmFunction,\r\n}) => {\r\n    const [isOpenContent, setIsOpenContent] = useState(false);\r\n    const modalRef = useRef();\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        if (isOpen) return (document.querySelector('html').style = 'overflow : hidden');\r\n        return (document.querySelector('html').style = 'overflow : visible');\r\n    }, [isOpen]);\r\n\r\n    useEffect(() => {\r\n        const handleCloseModal = (e) => {\r\n            if (!modalRef.current) {\r\n                return setIsOpen(false);\r\n            }\r\n\r\n            if (!modalRef.current.contains(e.target)) {\r\n                setIsOpen(false);\r\n            }\r\n        };\r\n\r\n        window.addEventListener('mousedown', handleCloseModal);\r\n\r\n        return () => {\r\n            window.removeEventListener('mousedown', handleCloseModal);\r\n            document.querySelector('html').style = 'overflow : visible';\r\n        };\r\n    }, [setIsOpen]);\r\n\r\n    return (\r\n        <>\r\n            <CSSTransition\r\n                in={isOpen}\r\n                classNames=\"modal\"\r\n                appear={true}\r\n                timeout={200}\r\n                onEntered={() => setIsOpenContent(true)}\r\n                onExit={() => setIsOpenContent(false)}\r\n                onExited={() => {\r\n                    dispatch(closeModal());\r\n                    setIsOpen(false);\r\n                }}\r\n                unmountOnExit>\r\n                <div\r\n                    className=\"modal\"\r\n                    style={{ alignItems: hasOverflowYScroll ? 'flex-start' : 'center' }}>\r\n                    <CSSTransition\r\n                        in={isOpenContent}\r\n                        classNames=\"modalcontent\"\r\n                        appear={true}\r\n                        timeout={300}\r\n                        unmountOnExit>\r\n                        <div ref={modalRef} className=\"modal__content\">\r\n                            {hasCloseButton && (\r\n                                <Button\r\n                                    className=\"modal__content__close\"\r\n                                    onClick={() => setIsOpen(false)}>\r\n                                    <IoClose />\r\n                                </Button>\r\n                            )}\r\n\r\n                            {children}\r\n\r\n                            {hasChoiceButton && (\r\n                                <>\r\n                                    <p className=\"modal__content__confirm-message\">\r\n                                        {confirmMessage}\r\n                                    </p>\r\n                                    <div className=\"modal__content__btn-wrapper\">\r\n                                        <Button\r\n                                            className=\"modal__content__btn-wrapper__cancel\"\r\n                                            onClick={() => setIsOpen(false)}>\r\n                                            Cancel\r\n                                        </Button>\r\n                                        <Button\r\n                                            className=\"modal__content__btn-wrapper__confirm\"\r\n                                            onClick={confirmFunction}>\r\n                                            {btnConfirmIcon && (\r\n                                                <span className=\"modal__content__btn-wrapper__confirm__icon\">\r\n                                                    {btnConfirmIcon}\r\n                                                </span>\r\n                                            )}\r\n                                            <span className=\"modal__content__btn-wrapper__confirm__label\">\r\n                                                {btnConfirmMessage ? btnConfirmMessage : 'Confirm'}\r\n                                            </span>\r\n                                        </Button>\r\n                                    </div>\r\n                                </>\r\n                            )}\r\n                        </div>\r\n                    </CSSTransition>\r\n                </div>\r\n            </CSSTransition>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Modal;\r\n","import { io } from 'socket.io-client';\r\nimport { SOCKET_URL } from '../config';\r\n\r\nexport default io(SOCKET_URL);\r\n","import React from 'react';\r\nimport { MdNotifications, MdCheck } from 'react-icons/md';\r\nimport { IoMdTrash } from 'react-icons/io';\r\nimport Modal from '../../utils/Modal';\r\nimport { AiOutlineAppstoreAdd } from 'react-icons/ai';\r\nimport Button from '../../utils/Button';\r\nimport { isEmpty } from '../../../utils/utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { deleteNotification } from '../../../redux/actions/user.action';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst Notifications = ({ isOpen, setIsOpen }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    const handleJoinBoard = (boardID, notificationID) => {\r\n        const joinBoardObject = {\r\n            userID: user._id,\r\n            boardID,\r\n        };\r\n        socket.emit('join board', joinBoardObject);\r\n        dispatch(deleteNotification(user._id, notificationID));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal isOpen={isOpen} setIsOpen={setIsOpen} hasCloseButton={true}>\r\n                <div className=\"profilmenu__notifications\">\r\n                    <span className=\"profilmenu__notifications__top\">\r\n                        <MdNotifications className=\"profilmenu__notifications__top__icon\" />\r\n                        Notifications\r\n                    </span>\r\n                    <ul className=\"profilmenu__notifications__list\">\r\n                        {!isEmpty(user.notifications) ? (\r\n                            user.notifications.map(({ _id, title, message, boardIDRequested }) => {\r\n                                return (\r\n                                    <li key={_id} className=\"profilmenu__notifications__list__item\">\r\n                                        <div className=\"profilmenu__notifications__list__item__right\">\r\n                                            <AiOutlineAppstoreAdd className=\"profilmenu__notifications__list__item__right__icon\" />\r\n                                            <div className=\"profilmenu__notifications__list__item__right__content\">\r\n                                                <span className=\"profilmenu__notifications__list__item__right__content__title\">\r\n                                                    {title}\r\n                                                </span>\r\n                                                <span className=\"profilmenu__notifications__list__item__right__content__message\">\r\n                                                    {message}\r\n                                                </span>\r\n                                            </div>\r\n                                        </div>\r\n                                        <div className=\"profilmenu__notifications__list__item__left\">\r\n                                            <Button\r\n                                                className=\"profilmenu__notifications__list__item__left__btn-valid\"\r\n                                                onClick={() =>\r\n                                                    handleJoinBoard(boardIDRequested, _id)\r\n                                                }>\r\n                                                <MdCheck />\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"profilmenu__notifications__list__item__left__btn-wrong\"\r\n                                                onClick={() =>\r\n                                                    dispatch(\r\n                                                        deleteNotification(\r\n                                                            user._id,\r\n                                                            _id,\r\n                                                            boardIDRequested\r\n                                                        )\r\n                                                    )\r\n                                                }>\r\n                                                <IoMdTrash />\r\n                                            </Button>\r\n                                        </div>\r\n                                    </li>\r\n                                );\r\n                            })\r\n                        ) : (\r\n                            <h4 style={{ textAlign: 'center', marginTop: '20px' }}>\r\n                                You don't have notifications\r\n                            </h4>\r\n                        )}\r\n                    </ul>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Notifications;\r\n","import React, { useState } from 'react';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport { FaUserAlt } from 'react-icons/fa';\r\nimport { MdNotifications } from 'react-icons/md';\r\nimport { RiLogoutBoxRFill } from 'react-icons/ri';\r\nimport { useSelector } from 'react-redux';\r\nimport { isEmpty } from '../../../utils/utils';\r\nimport Notifications from '../modal/Notifications';\r\nimport { useCookies } from 'react-cookie';\r\n\r\nconst ProfilMenu = ({ isOpen, setIsOpen }) => {\r\n    const [isOpenNotification, setIsOpenNotification] = useState(false);\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [, , removeCookie] = useCookies();\r\n\r\n    return (\r\n        <>\r\n            <Notifications isOpen={isOpenNotification} setIsOpen={setIsOpenNotification} />\r\n\r\n            <DropDown\r\n                contentClass=\"profilmenu\"\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                top=\"60px\"\r\n                right=\"10px\">\r\n                <div>\r\n                    <ul className=\"profilmenu__navlist\">\r\n                        <li>\r\n                            <button className=\"profilmenu__navlist__item\">\r\n                                <FaUserAlt className=\"profilmenu__navlist__item__icon\" />\r\n                                Profil\r\n                            </button>\r\n                        </li>\r\n                        <li onClick={() => setIsOpenNotification(true)}>\r\n                            <button className=\"profilmenu__navlist__item\">\r\n                                <MdNotifications className=\"profilmenu__navlist__item__icon\" />\r\n                                Notifications\r\n                                {!isEmpty(user.notifications) && (\r\n                                    <span\r\n                                        className=\"bubble-notifications\"\r\n                                        style={{\r\n                                            fontSize: user.notifications.length > 99 && '0.6rem',\r\n                                        }}>\r\n                                        {user.notifications.length > 99\r\n                                            ? '99+'\r\n                                            : user.notifications.length}\r\n                                    </span>\r\n                                )}\r\n                            </button>\r\n                        </li>\r\n                        <li className=\"profilmenu__navlist__divider\"></li>\r\n                        <li>\r\n                            <button\r\n                                className=\"profilmenu__navlist__item\"\r\n                                onClick={() => {\r\n                                    removeCookie('token', { path: '/' });\r\n                                    document.location.reload();\r\n                                }}>\r\n                                <RiLogoutBoxRFill className=\"profilmenu__navlist__item__icon profilmenu__navlist__item__icon--logout\" />\r\n                                Logout\r\n                            </button>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </DropDown>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ProfilMenu;\r\n","import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Button from '../../components/utils/Button';\r\nimport { BsFillCaretDownFill } from 'react-icons/bs';\r\nimport { Link } from 'react-router-dom';\r\nimport { BsGrid3X3Gap } from 'react-icons/bs';\r\nimport MediaQuery from 'react-responsive';\r\nimport DropDown from '../utils/Dropdown';\r\nimport { addToast, getPicturePath, isEmpty } from '../../utils/utils';\r\nimport ProfilMenu from './dropdown/ProfilMenu';\r\n\r\nconst Header = ({ isHeaderBoard, boardName }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [isOpenSearchBar, setIsOpenSearchBar] = useState(false);\r\n    const [isOpenProfilMenu, setIsOpenProfilMenu] = useState(false);\r\n    const [test, setTest] = useState(1);\r\n\r\n    return (\r\n        <>\r\n            <header className=\"header\">\r\n                <div className=\"header__left\">\r\n                    <Link className=\"header__left__logo\" to=\"/allboards\">\r\n                        <MediaQuery minWidth=\"650px\">\r\n                            <svg\r\n                                width=\"98\"\r\n                                height=\"29\"\r\n                                viewBox=\"0 0 98 29\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M54.3311 8.436V10.47H50.9831V21H48.4631V10.47H45.1151V8.436H54.3311ZM61.1557 10.884C61.9117 10.884 62.5837 11.052 63.1717 11.388C63.7597 11.712 64.2157 12.198 64.5397 12.846C64.8757 13.482 65.0437 14.25 65.0437 15.15V21H62.5237V15.492C62.5237 14.7 62.3257 14.094 61.9297 13.674C61.5337 13.242 60.9937 13.026 60.3097 13.026C59.6137 13.026 59.0617 13.242 58.6537 13.674C58.2577 14.094 58.0597 14.7 58.0597 15.492V21H55.5397V7.68H58.0597V12.27C58.3837 11.838 58.8157 11.502 59.3557 11.262C59.8957 11.01 60.4957 10.884 61.1557 10.884ZM76.2241 11.028V21H73.6861V19.74C73.3621 20.172 72.9361 20.514 72.4081 20.766C71.8921 21.006 71.3281 21.126 70.7161 21.126C69.9361 21.126 69.2461 20.964 68.6461 20.64C68.0461 20.304 67.5721 19.818 67.2241 19.182C66.8881 18.534 66.7201 17.766 66.7201 16.878V11.028H69.2401V16.518C69.2401 17.31 69.4381 17.922 69.8341 18.354C70.2301 18.774 70.7701 18.984 71.4541 18.984C72.1501 18.984 72.6961 18.774 73.0921 18.354C73.4881 17.922 73.6861 17.31 73.6861 16.518V11.028H76.2241ZM80.6005 7.68V21H78.0805V7.68H80.6005ZM84.9803 7.68V21H82.4603V7.68H84.9803ZM91.268 21.162C90.308 21.162 89.444 20.952 88.676 20.532C87.908 20.1 87.302 19.494 86.858 18.714C86.426 17.934 86.21 17.034 86.21 16.014C86.21 14.994 86.432 14.094 86.876 13.314C87.332 12.534 87.95 11.934 88.73 11.514C89.51 11.082 90.38 10.866 91.34 10.866C92.3 10.866 93.17 11.082 93.95 11.514C94.73 11.934 95.342 12.534 95.786 13.314C96.242 14.094 96.47 14.994 96.47 16.014C96.47 17.034 96.236 17.934 95.768 18.714C95.312 19.494 94.688 20.1 93.896 20.532C93.116 20.952 92.24 21.162 91.268 21.162ZM91.268 18.966C91.724 18.966 92.15 18.858 92.546 18.642C92.954 18.414 93.278 18.078 93.518 17.634C93.758 17.19 93.878 16.65 93.878 16.014C93.878 15.066 93.626 14.34 93.122 13.836C92.63 13.32 92.024 13.062 91.304 13.062C90.584 13.062 89.978 13.32 89.486 13.836C89.006 14.34 88.766 15.066 88.766 16.014C88.766 16.962 89 17.694 89.468 18.21C89.948 18.714 90.548 18.966 91.268 18.966Z\"\r\n                                    fill=\"#333333\"\r\n                                    className=\"header__left__logo__label\"\r\n                                />\r\n\r\n                                <path\r\n                                    d=\"M0 4C0 1.79086 1.79086 0 4 0H10C12.2091 0 14 1.79086 14 4V25C14 27.2091 12.2091 29 10 29H4C1.79086 29 0 27.2091 0 25V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__left\"\r\n                                />\r\n                                <path\r\n                                    d=\"M18 4C18 1.79086 19.7909 0 22 0H28C30.2091 0 32 1.79086 32 4V14C32 16.2091 30.2091 18 28 18H22C19.7909 18 18 16.2091 18 14V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__right\"\r\n                                />\r\n                            </svg>\r\n                        </MediaQuery>\r\n                        <MediaQuery maxWidth=\"649px\">\r\n                            <svg\r\n                                width=\"32\"\r\n                                height=\"29\"\r\n                                viewBox=\"0 0 32 29\"\r\n                                fill=\"none\"\r\n                                xmlns=\"http://www.w3.org/2000/svg\">\r\n                                <path\r\n                                    d=\"M0 4C0 1.79086 1.79086 0 4 0H10C12.2091 0 14 1.79086 14 4V25C14 27.2091 12.2091 29 10 29H4C1.79086 29 0 27.2091 0 25V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__left\"\r\n                                />\r\n                                <path\r\n                                    d=\"M18 4C18 1.79086 19.7909 0 22 0H28C30.2091 0 32 1.79086 32 4V14C32 16.2091 30.2091 18 28 18H22C19.7909 18 18 16.2091 18 14V4Z\"\r\n                                    fill=\"#2F80ED\"\r\n                                    className=\"header__left__logo__right\"\r\n                                />\r\n                            </svg>\r\n                        </MediaQuery>\r\n                    </Link>\r\n                    {isHeaderBoard && (\r\n                        <div className=\"header__left__board\">\r\n                            <h2 className=\"header__left__board__name\">{boardName}</h2>\r\n                            <span className=\"header__left__board__divider\"></span>\r\n                            <Link to=\"/allboards\" className=\"header__left__board__btn-allboard\">\r\n                                <BsGrid3X3Gap className=\"header__left__board__btn-allboard__icons\" />\r\n                                <span className=\"header__left__board__btn-allboard__label\">\r\n                                    All board\r\n                                </span>\r\n                            </Link>\r\n                        </div>\r\n                    )}\r\n                </div>\r\n                <div className=\"header__right\">\r\n                    <MediaQuery minWidth=\"1100px\">\r\n                        <div className=\"header__right__search\">\r\n                            <input\r\n                                className=\"header__right__search__input\"\r\n                                type=\"text\"\r\n                                placeholder=\"Keyword...\"\r\n                            />\r\n                            <Button\r\n                                className=\"header__right__search__button\"\r\n                                onClick={() => {\r\n                                    addToast(<BsFillCaretDownFill />, `test ${test}`, 'success');\r\n                                    setTest(test + 1);\r\n                                }}>\r\n                                Search\r\n                            </Button>\r\n                        </div>\r\n                    </MediaQuery>\r\n                    <MediaQuery maxWidth=\"1099px\">\r\n                        <div className=\"header__right__search__responsive\">\r\n                            <Button\r\n                                className=\"header__right__search__responsive__button\"\r\n                                onClick={() => setIsOpenSearchBar(true)}>\r\n                                Search\r\n                            </Button>\r\n                            {/* {isOpenSearchBar && ( */}\r\n                            <DropDown\r\n                                left=\"-170px\"\r\n                                top=\"46px\"\r\n                                isOpen={isOpenSearchBar}\r\n                                setIsOpen={setIsOpenSearchBar}>\r\n                                <div className=\"header__right__search__responsive__dropdown__wrapper\">\r\n                                    <input\r\n                                        className={`header__right__search__responsive__dropdown__wrapper__input `}\r\n                                        type=\"text\"\r\n                                        placeholder=\"Keyword...\"\r\n                                    />\r\n                                </div>\r\n                            </DropDown>\r\n                            {/* )} */}\r\n                        </div>\r\n                    </MediaQuery>\r\n                    <button\r\n                        className=\"header__right__profil\"\r\n                        onClick={() => setIsOpenProfilMenu(true)}>\r\n                        <img\r\n                            className=\"header__right__profil__img\"\r\n                            src={getPicturePath('user', user.picture)}\r\n                            alt=\"p\"\r\n                        />\r\n                        <span className=\"header__right__profil__name\">{user.pseudo}</span>\r\n                        <span className=\"header__right__profil__icon\">\r\n                            <BsFillCaretDownFill />\r\n                        </span>\r\n                        {!isEmpty(user.notifications) && (\r\n                            <span\r\n                                className=\"bubble-notifications\"\r\n                                style={{ fontSize: user.notifications.length > 99 && '0.6rem' }}>\r\n                                {user.notifications.length > 99 ? '99+' : user.notifications.length}\r\n                            </span>\r\n                        )}\r\n                    </button>\r\n                    <ProfilMenu isOpen={isOpenProfilMenu} setIsOpen={setIsOpenProfilMenu} />\r\n                </div>\r\n            </header>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Header from './Header';\r\n\r\nconst PageTemplate = ({\r\n    pageTitle,\r\n    children,\r\n    isHeaderBoard = false,\r\n    boardName,\r\n    hasHeader = true,\r\n}) => {\r\n    const isLoading = useSelector((state) => state.loaderReducer);\r\n    document.title = `Thullo | ${isLoading ? 'Loading . . .' : pageTitle}`;\r\n\r\n    return (\r\n        <>\r\n            {hasHeader && <Header isHeaderBoard={isHeaderBoard} boardName={boardName} />}\r\n\r\n            {children}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default PageTemplate;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { RiAddFill } from 'react-icons/ri';\r\nimport Modal from '../../utils/Modal';\r\nimport { MdImage, MdLock } from 'react-icons/md';\r\nimport { IoIosAddCircleOutline } from 'react-icons/io';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { createBoard } from '../../../redux/actions/board.action';\r\nimport Button from '../../utils/Button';\r\n\r\nconst ModalCreateBoard = ({ isOpen, setIsOpen }) => {\r\n    const dispatch = useDispatch();\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [picturePreview, setPicturePreview] = useState('');\r\n    const [newBoard, setNewBoard] = useState({\r\n        name: '',\r\n        picture: '',\r\n        isPrivate: false,\r\n        owner: user._id,\r\n    });\r\n\r\n    useEffect(() => {\r\n        if (!isOpen) {\r\n            setPicturePreview('');\r\n            setNewBoard({\r\n                name: '',\r\n                picture: '',\r\n                isPrivate: false,\r\n                owner: '',\r\n            });\r\n        }\r\n    }, [isOpen]);\r\n\r\n    const handleChangePicture = async (e) => {\r\n        if (!e.target.files[0]) return;\r\n        const pictureFile = await e.target.files[0];\r\n        // console.log(pictureFile);\r\n        setNewBoard({ ...newBoard, picture: pictureFile });\r\n        const picturePreviewURL = await URL.createObjectURL(pictureFile);\r\n        setPicturePreview(picturePreviewURL);\r\n    };\r\n\r\n    const handleCreateBoard = () => {\r\n        const data = new FormData();\r\n        data.append('name', newBoard.name);\r\n        data.append('picture', newBoard.picture);\r\n        data.append('isPrivate', newBoard.isPrivate);\r\n        data.append('owner', user._id);\r\n        setIsOpen(false);\r\n        dispatch(createBoard(data));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                hasCloseButton={true}\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                hasChoiceButton={true}\r\n                btnConfirmIcon={<RiAddFill />}\r\n                btnConfirmMessage=\"Create\"\r\n                confirmFunction={() => handleCreateBoard()}>\r\n                <div className=\"createboardmodal\">\r\n                    <label\r\n                        className={`createboardmodal__input__image ${\r\n                            picturePreview ? '' : 'no-preview'\r\n                        }`}\r\n                        htmlFor=\"boardmodal_input_image\"\r\n                        style={{ backgroundImage: `url(${picturePreview})` }}>\r\n                        <div className={`${picturePreview ? 'preview-background' : ''}`}>\r\n                            <IoIosAddCircleOutline\r\n                                className={`createboardmodal__input__image__icon ${\r\n                                    picturePreview ? 'preview-active' : ''\r\n                                }`}\r\n                            />\r\n                        </div>\r\n                        <input\r\n                            type=\"file\"\r\n                            id=\"boardmodal_input_image\"\r\n                            onChange={handleChangePicture}\r\n                            accept=\".png , .jpg , .jpeg\"\r\n                            hidden\r\n                        />\r\n                    </label>\r\n                    <input\r\n                        value={newBoard.name}\r\n                        onChange={(e) => setNewBoard({ ...newBoard, name: e.target.value })}\r\n                        maxLength=\"20\"\r\n                        className=\"createboardmodal__input__name\"\r\n                        type=\"text\"\r\n                        placeholder=\"Add board title\"\r\n                    />\r\n                    <div className=\"createboardmodal__button__wrapper\">\r\n                        <Button className=\"createboardmodal__button__wrapper__item\">\r\n                            <MdImage className=\"createboardmodal__button__wrapper__item__icon\" />{' '}\r\n                            Cover\r\n                        </Button>\r\n                        <Button\r\n                            className={`createboardmodal__button__wrapper__item ${\r\n                                newBoard.isPrivate ? 'isStateActiveCreateBoard' : ''\r\n                            }`}\r\n                            onClick={() =>\r\n                                setNewBoard((oldNewBoard) => {\r\n                                    oldNewBoard.isPrivate = !oldNewBoard.isPrivate;\r\n                                    return { ...oldNewBoard };\r\n                                })\r\n                            }>\r\n                            <MdLock className=\"createboardmodal__button__wrapper__item__icon\" />{' '}\r\n                            Private\r\n                        </Button>\r\n                    </div>\r\n                </div>\r\n            </Modal>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ModalCreateBoard;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { getPicturePath } from '../../../utils/utils';\r\nimport { v4 as uuid } from 'uuid';\r\n\r\nconst BoardItem = ({ _id, name, picture, members }) => {\r\n    const MEMBER_MAX_LENGTH = 3;\r\n\r\n    return (\r\n        <Link to={`/board/${_id}`} className=\"allboards__container__items\">\r\n            <img\r\n                className=\"allboards__container__items__img\"\r\n                src={getPicturePath('board', picture)}\r\n                alt={`board ${name}`}\r\n            />\r\n            <span className=\"allboards__container__items__title\">{name}</span>\r\n            <ul className=\"allboards__container__items__members\">\r\n                {members\r\n                    .map(({ _id, pseudo, picture }, index) => {\r\n                        if (index === MEMBER_MAX_LENGTH)\r\n                            return (\r\n                                <span\r\n                                    key={uuid()}\r\n                                    className=\"allboards__container__items__members__others\">\r\n                                    +{members.length - MEMBER_MAX_LENGTH} Others\r\n                                </span>\r\n                            );\r\n                        return (\r\n                            <li key={_id} className=\"allboards__container__items__members__profil\">\r\n                                <img\r\n                                    src={getPicturePath('user', picture)}\r\n                                    alt={`${pseudo} profil`}></img>\r\n                            </li>\r\n                        );\r\n                    })\r\n                    .slice(0, MEMBER_MAX_LENGTH + 1)}\r\n            </ul>\r\n        </Link>\r\n    );\r\n};\r\n\r\nexport default BoardItem;\r\n","import React, { useState } from 'react';\r\nimport PageTemplate from '../components/templates/PageTemplate';\r\nimport Button from '../components/utils/Button';\r\nimport { RiAddFill } from 'react-icons/ri';\r\nimport { useSelector } from 'react-redux';\r\nimport ModalCreateBoard from '../components/templates/modal/CreateBoard.jsx';\r\nimport BoardItem from '../components/templates/board/BoardItem';\r\nimport { isEmpty } from '../utils/utils';\r\n// REDIRIGER VERS LOGIN SI NON CONNECTE\r\nconst Home = () => {\r\n    const boards = useSelector((state) => state.boardReducer.boards);\r\n    const [isOpenCreateBoard, setIsOpenCreateBoard] = useState(false);\r\n\r\n    return (\r\n        <>\r\n            <ModalCreateBoard isOpen={isOpenCreateBoard} setIsOpen={setIsOpenCreateBoard} />\r\n\r\n            <PageTemplate pageTitle=\"Allboards\">\r\n                <div className=\"allboards\">\r\n                    <div className=\"allboards__top\">\r\n                        <h1 className=\"allboards__top__title\">All Boards</h1>\r\n                        <Button\r\n                            className=\"allboards__top__btn\"\r\n                            onClick={() => setIsOpenCreateBoard(true)}>\r\n                            <RiAddFill className=\"allboards__top__btn__icon\" />\r\n                            <span className=\"allboards__top__btn__label\">Add</span>\r\n                        </Button>\r\n                    </div>\r\n\r\n                    <div className=\"allboards__container\">\r\n                        {!isEmpty(boards) &&\r\n                            boards.map((board) => {\r\n                                return <BoardItem key={board._id} {...board} />;\r\n                            })}\r\n                    </div>\r\n                </div>\r\n            </PageTemplate>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","export default __webpack_public_path__ + \"static/media/Logo.e207370e.svg\";","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { isEmpty } from '../../utils/utils';\r\nimport ThulloLogo from '../../assets/images/Logo.svg';\r\n\r\nconst authContainer = {\r\n    height: '80vh',\r\n    width: '100%',\r\n    display: 'flex',\r\n    justifyContent: 'center',\r\n    alignItems: 'center',\r\n};\r\n\r\nconst logo = {\r\n    height: '50px',\r\n    position: 'absolute',\r\n    top: '15px',\r\n    left: '15px',\r\n};\r\n\r\nconst AuthWrapper = ({ children }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <>\r\n            {!isEmpty(user) && <Redirect to=\"/allboards\" />}\r\n            <div className=\"auth\">\r\n                <img style={logo} src={ThulloLogo} alt=\"Thullo\" />\r\n                <div style={authContainer}>{children}</div>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AuthWrapper;\r\n","import React, { useState } from 'react';\r\nimport AuthWrapper from '../../components/layouts/AuthWrapper.js';\r\nimport Button from '../../components/utils/Button';\r\nimport { Link } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { login } from '../../redux/actions/user.action';\r\nimport PageTemplate from '../../components/templates/PageTemplate.js';\r\n\r\nconst Login = (props) => {\r\n    const dispatch = useDispatch();\r\n    const [userLogin, setUserLogin] = useState({\r\n        email: '',\r\n        password: '',\r\n    });\r\n\r\n    const handleLogin = (e) => {\r\n        e.preventDefault();\r\n        dispatch(login(userLogin));\r\n    };\r\n\r\n    return (\r\n        <PageTemplate pageTitle=\"Login\" hasHeader={false}>\r\n            <AuthWrapper>\r\n                <form className=\"auth__component\" onSubmit={handleLogin} noValidate>\r\n                    <h1 className=\"auth__title\">Login</h1>\r\n                    <div className=\"auth__input__wrapper\">\r\n                        <input\r\n                            className=\"auth__input\"\r\n                            type=\"email\"\r\n                            placeholder=\"Email\"\r\n                            value={userLogin.email}\r\n                            autoComplete=\"on\"\r\n                            onChange={(e) => setUserLogin({ ...userLogin, email: e.target.value })}\r\n                        />\r\n                    </div>\r\n                    <div className=\"auth__input__wrapper\">\r\n                        <input\r\n                            className=\"auth__input\"\r\n                            type=\"password\"\r\n                            placeholder=\"Password\"\r\n                            value={userLogin.password}\r\n                            onChange={(e) =>\r\n                                setUserLogin({ ...userLogin, password: e.target.value })\r\n                            }\r\n                        />\r\n                    </div>\r\n                    <Button className=\"auth__btn\">Connexion</Button>\r\n                    <p className=\"auth__has-account\">\r\n                        You don't have account ? <Link to=\"/register\">Register</Link>\r\n                    </p>\r\n                </form>\r\n            </AuthWrapper>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import React from 'react';\r\n\r\nconst primaryColorScss = '#2f80ed'; // default\r\n\r\nconst Loader = ({ radius, color = primaryColorScss }) => {\r\n    return (\r\n        <svg className=\"loader\" height={radius * 2 || 100} width={radius * 2 || 100}>\r\n            <circle\r\n                className=\"loader__inset\"\r\n                cx={radius * 0.8 || 50}\r\n                cy={radius * 0.8 || 50}\r\n                r={(radius * 0.8) / 2 || 25}\r\n                strokeWidth={radius * 0.03}\r\n                stroke={color}\r\n            />\r\n            <circle\r\n                className=\"loader__around\"\r\n                cx={radius || 50}\r\n                cy={radius || 50}\r\n                r={radius / 2 || 25}\r\n                strokeWidth={radius * 0.03}\r\n                stroke={color}\r\n            />\r\n        </svg>\r\n    );\r\n};\r\n\r\nexport default Loader;\r\n","import React, { useState } from 'react';\nimport AuthWrapper from '../../components/layouts/AuthWrapper';\nimport Button from '../../components/utils/Button';\nimport { Link, Redirect } from 'react-router-dom';\nimport { useFormik } from 'formik';\nimport * as Yup from 'yup';\nimport axios from '../../utils/axios';\nimport PageTemplate from '../../components/templates/PageTemplate';\nimport { addToast, clearToastByTypes, errorsManager } from '../../utils/utils';\nimport { BsBookmarkCheck } from 'react-icons/bs';\nimport Loader from '../../components/utils/Loader';\n\nconst Register = (props) => {\n    const [emailAlreadyExist, setEmailAlreadyExist] = useState({});\n    const [isSignUpSuccessful, setIsSignUpSuccessful] = useState(false);\n    const [isLoading, setIsLoading] = useState(false);\n\n    const handleRegister = (user) => {\n        if (isLoading) return;\n        setIsLoading(true);\n        axios\n            .post('/user/register', user)\n            .then((res) => {\n                setEmailAlreadyExist({});\n                clearToastByTypes(['danger', 'warning']);\n                addToast(<BsBookmarkCheck />, 'Sign Up Successful', 'success');\n                setIsSignUpSuccessful(true);\n            })\n            .catch((err) => {\n                const error = err.response.data;\n                errorsManager(error);\n                setEmailAlreadyExist(err.response.data);\n            })\n            .finally(() => {\n                setIsLoading(false);\n            });\n    };\n\n    const userRegister = useFormik({\n        initialValues: {\n            pseudo: '',\n            email: '',\n            password: '',\n            confirmPassword: '',\n        },\n        validationSchema: Yup.object({\n            pseudo: Yup.string()\n                .min(4, 'Pseudo should have 4 characters minimum')\n                .max(12, 'Pseudo should have 12 characters maximum')\n                .required('Required'),\n\n            email: Yup.string()\n                .required('Email address is required')\n                .email('Invalid email address'),\n\n            password: Yup.string()\n                .min(6, 'Password should have 6 characters minimum')\n                .required('Password is required'),\n\n            confirmPassword: Yup.string()\n                .required('Please confirm your password')\n                .oneOf([Yup.ref('password'), null], 'Password must matched'),\n        }),\n        onSubmit: (values) => {\n            const user = {\n                pseudo: values.pseudo,\n                email: values.email,\n                password: values.password,\n            };\n            handleRegister(user);\n        },\n    });\n\n    return (\n        <>\n            {isSignUpSuccessful && <Redirect to=\"/login\" />}\n\n            <PageTemplate pageTitle=\"Register\" hasHeader={false}>\n                <AuthWrapper>\n                    <form\n                        className=\"auth__component\"\n                        onSubmit={userRegister.handleSubmit}\n                        noValidate>\n                        <h1 className=\"auth__title\">Register</h1>\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"text\"\n                                {...userRegister.getFieldProps('pseudo')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.pseudo && 'placeholder_active'\n                                }`}>\n                                Pseudo\n                            </span>\n                        </div>\n                        {userRegister.touched.pseudo && userRegister.errors.pseudo && (\n                            <p className=\"auth__error\">{userRegister.errors.pseudo}</p>\n                        )}\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"email\"\n                                {...userRegister.getFieldProps('email')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.email && 'placeholder_active'\n                                }`}>\n                                Email\n                            </span>\n                        </div>\n                        {userRegister.touched.email && userRegister.errors.email && (\n                            <p className=\"auth__error\">{userRegister.errors.email}</p>\n                        )}\n                        {emailAlreadyExist && (\n                            <p className=\"auth__error\">{emailAlreadyExist.message}</p>\n                        )}\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"password\"\n                                {...userRegister.getFieldProps('password')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.password && 'placeholder_active'\n                                }`}>\n                                Password\n                            </span>\n                        </div>\n                        {userRegister.touched.password && userRegister.errors.password && (\n                            <p className=\"auth__error\">{userRegister.errors.password}</p>\n                        )}\n                        <div className=\"auth__input__wrapper\">\n                            <input\n                                className=\"auth__input\"\n                                type=\"password\"\n                                {...userRegister.getFieldProps('confirmPassword')}\n                            />\n                            <span\n                                className={`placeholder ${\n                                    userRegister.values.confirmPassword && 'placeholder_active'\n                                }`}>\n                                Confirm Password\n                            </span>\n                        </div>\n                        {userRegister.touched.confirmPassword &&\n                            userRegister.errors.confirmPassword && (\n                                <p className=\"auth__error\">{userRegister.errors.confirmPassword}</p>\n                            )}\n                        <Button\n                            type=\"submit\"\n                            className=\"auth__btn\"\n                            style={{ position: 'relative' }}>\n                            {isLoading ? <Loader color=\"white\" radius=\"28\" /> : 'Register'}\n                        </Button>\n                        <p className=\"auth__has-account\">\n                            You have already account ? <Link to=\"/login\">Connexion</Link>\n                        </p>\n                    </form>\n                </AuthWrapper>\n            </PageTemplate>\n        </>\n    );\n};\n\nexport default Register;\n","import React, { useEffect, useState } from 'react';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport Button from '../../utils/Button';\r\nimport { HiOutlineSearch } from 'react-icons/hi';\r\nimport axios from '../../../utils/axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { getPicturePath, isEmpty } from '../../../utils/utils';\r\nimport { IoAddCircleOutline } from 'react-icons/io5';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst InviteMember = ({ isOpen, setIsOpen }) => {\r\n    const currentBoard = useSelector((state) => state.boardReducer.currentBoard);\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [usersToInvite, setUsersToInvite] = useState([]);\r\n    const [userSelected, setUserSelected] = useState([]);\r\n    const [userSearch, setUserSearch] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    useEffect(() => {\r\n\r\n        if (!isEmpty(currentBoard)) {\r\n            axios\r\n                .get(`/user/all/${currentBoard._id}`)\r\n                .then((res) => {\r\n                    setUsersToInvite(res.data);\r\n                    setUserSearch(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [currentBoard]);\r\n\r\n    const handleSearchUser = () => {\r\n        setUserSearch(usersToInvite.filter((user) => user.pseudo.includes(searchValue)));\r\n    };\r\n\r\n    const handleSendInvation = () => {\r\n        const invitationObject = {\r\n            senderPseudo: user.pseudo,\r\n            guestUserIDList: userSelected,\r\n            boardID: currentBoard._id,\r\n            boardName: currentBoard.name,\r\n        };\r\n        setUsersToInvite(usersToInvite.filter((userSug) => !userSelected.includes(userSug._id)));\r\n        setUserSearch(userSearch.filter((userSug) => !userSelected.includes(userSug._id)));\r\n        socket.emit('send invitation', invitationObject);\r\n    };\r\n\r\n    const handleSelectUser = (id) => {\r\n        userSelected.findIndex((userID) => userID === id) === -1\r\n            ? setUserSelected([...userSelected, id])\r\n            : setUserSelected(userSelected.filter((userID) => userID !== id));\r\n    };\r\n\r\n    return (\r\n        <DropDown\r\n            contentClass=\"invitemember\"\r\n            isResponsive={true}\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            top=\"46px\"\r\n            left=\"-4px\"\r\n            title=\"Invite to Board\"\r\n            description=\"Search users you want to invite to\">\r\n            <div className=\"invitemember__input__wrapper\">\r\n                <input\r\n                    className=\"invitemember__input__wrapper__input\"\r\n                    placeholder=\"User...\"\r\n                    type=\"text\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setSearchValue(e.target.value)}\r\n                />\r\n                <Button\r\n                    className=\"invitemember__input__wrapper__btn\"\r\n                    onClick={() => handleSearchUser()}>\r\n                    <HiOutlineSearch />\r\n                </Button>\r\n            </div>\r\n            {!isEmpty(userSearch) && (\r\n                <ul className=\"invitemember__suggest\">\r\n                    {userSearch.map(({ _id, pseudo, picture }, index) => {\r\n                        return (\r\n                            <li\r\n                                key={_id}\r\n                                style={{\r\n                                    marginBottom: index === userSearch.length - 1 ? '' : '15px',\r\n                                }}>\r\n                                <button\r\n                                    className=\"invitemember__suggest__item\"\r\n                                    onClick={() => handleSelectUser(_id)}>\r\n                                    <img\r\n                                        className=\"invitemember__suggest__item__picture\"\r\n                                        src={getPicturePath('user', picture)}\r\n                                        alt={`user ${pseudo}`}\r\n                                    />\r\n                                    <span className=\"invitemember__suggest__item__pseudo\">\r\n                                        {pseudo}\r\n                                    </span>\r\n                                    {userSelected.includes(_id) ? (\r\n                                        <FiCheckCircle className=\"invitemember__suggest__item__icon invitemember__suggest__item__icon--select\" />\r\n                                    ) : (\r\n                                        <IoAddCircleOutline className=\"invitemember__suggest__item__icon\" />\r\n                                    )}\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            )}\r\n\r\n            <Button\r\n                className={`invitemember__btn-invite ${\r\n                    isEmpty(userSelected) ? 'invitemember__btn-invite--disabled' : ''\r\n                }`}\r\n                onClick={() => !isEmpty(userSelected) && handleSendInvation()}>\r\n                Invite\r\n            </Button>\r\n        </DropDown>\r\n    );\r\n};\r\n\r\nexport default InviteMember;\r\n","import React from 'react';\r\nimport PageTemplate from '../components/templates/PageTemplate';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst BoardError = (props) => {\r\n    return (\r\n        <PageTemplate pageTitle=\"Board Error\">\r\n            <h1>Board not found or is Private</h1>\r\n            <Link to=\"/allboards\">Back to home</Link>\r\n        </PageTemplate>\r\n    );\r\n};\r\n\r\nexport default BoardError;\r\n","import React from 'react';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport { MdPublic } from 'react-icons/md';\r\nimport { IoMdLock } from 'react-icons/io';\r\nimport { useSelector } from 'react-redux';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst PrivateOrPublic = ({ isOpen, setIsOpen }) => {\r\n    const currentBoard = useSelector((state) => state.boardReducer.currentBoard);\r\n\r\n    const handleChangeState = (state) => {\r\n        if (currentBoard.isPrivate === state) return;\r\n        const boardID = currentBoard._id;\r\n        setIsOpen(false);\r\n        socket.emit('change state', { boardID, state });\r\n    };\r\n\r\n    return (\r\n        <DropDown\r\n            contentClass=\"privateorpublic\"\r\n            left=\"-6px\"\r\n            top=\"45px\"\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            title=\"Visibility\"\r\n            description=\"Choose who can see to this board.\">\r\n            <button\r\n                className={`privateorpublic__btn ${\r\n                    !currentBoard.isPrivate ? 'privateorpublic-active' : ''\r\n                }`}\r\n                style={{ marginBottom: '8px' }}\r\n                onClick={() => handleChangeState(false)}>\r\n                <div className=\"privateorpublic__btn__top\">\r\n                    <MdPublic className=\"privateorpublic__btn__top__icon\" />\r\n                    <span>Public</span>\r\n                </div>\r\n                <p className=\"privateorpublic__btn__desc\">Anyone on the internet can see this.</p>\r\n            </button>\r\n            <button\r\n                className={`privateorpublic__btn ${\r\n                    currentBoard.isPrivate ? 'privateorpublic-active' : ''\r\n                }`}\r\n                onClick={() => handleChangeState(true)}>\r\n                <div className=\"privateorpublic__btn__top\">\r\n                    <IoMdLock className=\"privateorpublic__btn__top__icon\" />\r\n                    <span>Private</span>\r\n                </div>\r\n                <p className=\"privateorpublic__btn__desc\">Only board members can see this</p>\r\n            </button>\r\n        </DropDown>\r\n    );\r\n};\r\n\r\nexport default PrivateOrPublic;\r\n","import React, { useEffect, useState } from 'react';\r\nimport axios from '../../utils/axios';\r\n// import { insertSpecialCharacter } from '../../utils/utils';\r\nimport DropDown from '../utils/Dropdown';\r\nimport { VscChromeClose } from 'react-icons/vsc';\r\n\r\nconst EmojiPicker = ({ isOpen, setIsOpen, allowsRef }) => {\r\n    // Faire du call API ici : https://emoji-api.com/\r\n    // insertSpecialCharacter() Afficher les emojis\r\n    const [emoji, setEmoji] = useState([]);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .get(\r\n                'https://emoji-api.com/categories/travel-places?access_key=c73293510309d49f6b5de5ad0badf72689ddf3ec'\r\n            )\r\n            .then((res) => {\r\n                setEmoji(res.data);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    return (\r\n        <DropDown\r\n            allowsRef={allowsRef}\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            bottom=\"-160px\"\r\n            right=\"-8px\">\r\n            <div className=\"emojipicker\">\r\n                <div className=\"emojipicker__category\">\r\n                    <button\r\n                        className=\"emojipicker__category__btn-close\"\r\n                        onClick={() => setIsOpen(false)}>\r\n                        <VscChromeClose />\r\n                    </button>\r\n                </div>\r\n                <div className=\"emojipicker__content\">\r\n                    {emoji.map((emo, index) => {\r\n                        return (\r\n                            <button key={index} className=\"emojipicker__content__item\">\r\n                                {emo.character}\r\n                            </button>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </DropDown>\r\n    );\r\n};\r\n\r\nexport default EmojiPicker;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { insertSpecialCharacter, removeHtmlClass, removeHtmlStyle } from '../../utils/utils';\r\nimport Button from '../utils/Button';\r\nimport { MdInsertEmoticon } from 'react-icons/md';\r\nimport EmojiPicker from './EmojiPicker';\r\n\r\nconst ContentEditable = ({ setIsOpen, content, submitFunc, HTMLInjectedRef }) => {\r\n    // const [innerContent, setInnerContent] = useState('');\r\n    const [isOpenEmojiPicker, setIsOpenEmojiPicker] = useState(false);\r\n    const editorRef = useRef();\r\n    const descriptionRef = useRef();\r\n    const outputRef = useRef();\r\n\r\n    const parseValue = (value) => {\r\n        return value.replaceAll(\r\n            /\\*[a-z0-1A-Z]+/g,\r\n            '<span class=\"description-word-important\">$&</span>'\r\n        );\r\n    };\r\n    const handleSaveDescription = async () => {\r\n        submitFunc && submitFunc(removeHtmlStyle(outputRef.current.innerHTML));\r\n    };\r\n\r\n    useEffect(() => {\r\n        outputRef.current.innerHTML = content;\r\n        descriptionRef.current.innerHTML = removeHtmlClass(outputRef.current.innerHTML);\r\n        // setInnerContent(outputRef.current.textContent);\r\n    }, [descriptionRef, content]);\r\n\r\n    const handleFormatDescription = (e) => {\r\n        if (e.keyCode === 9) {\r\n            e.preventDefault();\r\n            insertSpecialCharacter(descriptionRef, 0x0009);\r\n            outputRef.current.innerHTML = parseValue(descriptionRef.current.innerHTML);\r\n        }\r\n    };\r\n\r\n    const handleSetDescription = (e) => {\r\n        // setInnerContent(e.target.textContent);\r\n        outputRef.current.innerHTML = removeHtmlStyle(parseValue(e.target.innerHTML));\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"editdescription__wrapper\" ref={editorRef}>\r\n                <div\r\n                    onKeyDown={handleFormatDescription}\r\n                    spellCheck={false}\r\n                    onInput={handleSetDescription}\r\n                    ref={descriptionRef}\r\n                    className=\"editdescription__wrapper__input\"\r\n                    contentEditable={true}\r\n                />\r\n                <div ref={outputRef} className=\"editdescription__wrapper__output\"></div>\r\n                <button\r\n                    className=\"editdescription__wrapper__btn-emoji\"\r\n                    onClick={() => setIsOpenEmojiPicker(true)}>\r\n                    <MdInsertEmoticon />\r\n                </button>\r\n                <EmojiPicker\r\n                    allowsRef={editorRef}\r\n                    isOpen={isOpenEmojiPicker}\r\n                    setIsOpen={setIsOpenEmojiPicker}\r\n                />\r\n            </div>\r\n            {/* <div className=\"editdescription__chars-wrapper\">\r\n                <span className=\"editdescription__chars-wrapper__item\">\r\n                    max chars : {MAX_CHARS}\r\n                </span>\r\n                <span\r\n                    className={`editdescription__chars-wrapper__item ${\r\n                        innerContent.length > MAX_CHARS ? 'maxchars-error' : ''\r\n                    }`}>\r\n                    current chars : {innerContent.length}\r\n                </span>\r\n            </div> */}\r\n\r\n            <div className=\"editdescription__btn-wrapper\">\r\n                <Button\r\n                    className=\"editdescription__btn-wrapper__btn-send\"\r\n                    onClick={() => handleSaveDescription()}>\r\n                    Save\r\n                </Button>\r\n                <button\r\n                    className=\"editdescription__btn-wrapper__btn-cancel\"\r\n                    onClick={() => setIsOpen(false)}>\r\n                    Cancel\r\n                </button>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default ContentEditable;\r\n","import React from 'react';\r\n\r\nconst CategoryTitle = ({ icon, title, withMarginBottom = true }) => {\r\n    return (\r\n        <div className=\"categorytitle\" style={{ marginBottom: withMarginBottom ? '16px' : '0' }}>\r\n            <span className=\"categorytitle__icon\">{icon}</span>\r\n            <span className=\"categorytitle__label\">{title}</span>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CategoryTitle;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport { CgClose } from 'react-icons/cg';\r\nimport { MdEdit, MdDescription } from 'react-icons/md';\r\nimport { FaUserCircle } from 'react-icons/fa';\r\nimport { cutMongooseTimestampInDate, getPicturePath, isEmpty } from '../../../utils/utils';\r\nimport socket from '../../../utils/socket';\r\nimport ContentEditable from '../ContentEditable';\r\nimport CategoryTitle from '../../layouts/CategoryTitle';\r\n\r\nconst BoardMenu = ({ isOpen, setIsOpen }) => {\r\n    const descriptionRef = useRef();\r\n    const boardMenuRef = useRef();\r\n    const board = useSelector((state) => state.boardReducer.currentBoard);\r\n    const user = useSelector((state) => state.userReducer);\r\n    const [isEditDescription, setIsEditDescription] = useState(false);\r\n\r\n    const isBoardOwner = () => {\r\n        return !isEmpty(user) && !isEmpty(board) && board.owner._id === user._id;\r\n    };\r\n\r\n    const handleFormatDate = () => {\r\n        if (isEmpty(board)) return;\r\n        const { dayNum, monthLetter, years } = cutMongooseTimestampInDate(board.createdAt);\r\n        return `on ${dayNum} ${monthLetter}, ${years} `;\r\n    };\r\n\r\n    const handleBanMember = (memberBannedID) => {\r\n        const banMemberObject = {\r\n            boardID: board._id,\r\n            memberBannedID,\r\n        };\r\n        socket.emit('ban member', banMemberObject);\r\n    };\r\n\r\n    const handleSaveDescription = (newDesc) => {\r\n        socket.emit('change description', { description: newDesc, boardID: board._id });\r\n        setIsEditDescription(false);\r\n    };\r\n\r\n    const handleLeaveBoard = () => {\r\n        const leaveBoardObject = {\r\n            userID: user._id,\r\n            boardID: board._id,\r\n        };\r\n        socket.emit('leave board', leaveBoardObject);\r\n    };\r\n\r\n    const handleDeleteBoard = () => {\r\n        const boardID = board._id;\r\n        socket.emit('delete board', boardID);\r\n    };\r\n    useEffect(() => {\r\n        if (!isEmpty(board.description) && descriptionRef.current) {\r\n            descriptionRef.current.innerHTML = board.description;\r\n        }\r\n    }, [board.description, isOpen, isEditDescription]);\r\n\r\n    return (\r\n        <>\r\n            <DropDown\r\n                isVertical={false}\r\n                contentRef={boardMenuRef}\r\n                isOpen={isOpen}\r\n                setIsOpen={setIsOpen}\r\n                top=\"0\"\r\n                right=\"-8px\">\r\n                <div className=\"boardmenu\" ref={boardMenuRef}>\r\n                    <div className=\"boardmenu__top\">\r\n                        <h3 className=\"boardmenu__top__name\">{board.name}</h3>\r\n                        <button\r\n                            className=\"boardmenu__top__btn-close\"\r\n                            onClick={() => setIsOpen(false)}>\r\n                            <CgClose />\r\n                        </button>\r\n                    </div>\r\n                    <div className=\"boardmenu__content\">\r\n                        <div className=\"boardmenu__content__creator\">\r\n                            <CategoryTitle icon={<FaUserCircle />} title=\"Made by\" />\r\n                            <div className=\"boardmenu__content__creator__profil\">\r\n                                <img\r\n                                    className=\"boardmenu__content__creator__profil__img\"\r\n                                    src={\r\n                                        !isEmpty(board) &&\r\n                                        getPicturePath('user', board.owner.picture)\r\n                                    }\r\n                                    alt={`owner ${!isEmpty(board) && board.owner.pseudo}`}\r\n                                />\r\n                                <div className=\"boardmenu__content__creator__profil__infos\">\r\n                                    <span className=\"boardmenu__content__creator__profil__infos__name\">\r\n                                        {!isEmpty(board) && board.owner.pseudo}\r\n                                    </span>\r\n                                    <span className=\"boardmenu__content__creator__profil__infos__date\">\r\n                                        {handleFormatDate()}\r\n                                    </span>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"boardmenu__content__description\">\r\n                            <div className=\"boardmenu__content__description__top\">\r\n                                <CategoryTitle\r\n                                    icon={<MdDescription />}\r\n                                    title=\"Description\"\r\n                                    withMarginBottom={false}\r\n                                />\r\n                                {!isEditDescription && isBoardOwner() && (\r\n                                    <button\r\n                                        className=\"boardmenu__content__description__top__btn-edit\"\r\n                                        onClick={() => setIsEditDescription(!isEditDescription)}>\r\n                                        <MdEdit className=\"boardmenu__content__description__top__btn-edit__icon\" />\r\n                                        <span>Edit</span>\r\n                                    </button>\r\n                                )}\r\n                            </div>\r\n                            {isEditDescription ? (\r\n                                <ContentEditable\r\n                                    content={board.description}\r\n                                    submitFunc={handleSaveDescription}\r\n                                    setIsOpen={setIsEditDescription}\r\n                                />\r\n                            ) : (\r\n                                <p\r\n                                    ref={descriptionRef}\r\n                                    className=\"boardmenu__content__description__para\"></p>\r\n                            )}\r\n                        </div>\r\n                        <div className=\"boardmenu__content__team\">\r\n                            <CategoryTitle icon={<MdDescription />} title=\"Team\" />\r\n                            <ul className=\"boardmenu__content__team__list\">\r\n                                {!isEmpty(board) &&\r\n                                    board.members.map((member, index) => {\r\n                                        return (\r\n                                            <li\r\n                                                key={member._id}\r\n                                                className=\"boardmenu__content__team__list__item\"\r\n                                                style={{\r\n                                                    marginBottom:\r\n                                                        index === board.members.length - 1\r\n                                                            ? ''\r\n                                                            : '15px',\r\n                                                }}>\r\n                                                <img\r\n                                                    className=\"boardmenu__content__team__list__item__img\"\r\n                                                    src={getPicturePath('user', member.picture)}\r\n                                                    alt=\"\"\r\n                                                />\r\n                                                <span className=\"boardmenu__content__team__list__item__pseudo\">\r\n                                                    {member.pseudo}\r\n                                                </span>\r\n                                                {board.owner._id === member._id ? (\r\n                                                    <span className=\"boardmenu__content__team__list__item__admin\">\r\n                                                        Admin\r\n                                                    </span>\r\n                                                ) : (\r\n                                                    isBoardOwner() && (\r\n                                                        <button\r\n                                                            className=\"boardmenu__content__team__list__item__btn-remove\"\r\n                                                            onClick={() =>\r\n                                                                handleBanMember(member._id)\r\n                                                            }>\r\n                                                            Remove\r\n                                                        </button>\r\n                                                    )\r\n                                                )}\r\n                                            </li>\r\n                                        );\r\n                                    })}\r\n                            </ul>\r\n                        </div>\r\n                        <button\r\n                            className=\"boardmenu__content__btn-leave\"\r\n                            onClick={() => handleLeaveBoard()}>\r\n                            Leave\r\n                        </button>\r\n                        {isBoardOwner() && (\r\n                            <button\r\n                                className=\"boardmenu__content__btn-delete\"\r\n                                onClick={() => handleDeleteBoard()}>\r\n                                Delete Board\r\n                            </button>\r\n                        )}\r\n                    </div>\r\n                </div>\r\n            </DropDown>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default BoardMenu;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport { useSelector } from 'react-redux';\r\nimport socket from '../../../utils/socket';\r\nimport { closeOnClickOutside } from '../../../utils/utils';\r\n\r\nconst AddListOrCard = ({\r\n    isOpen,\r\n    setIsOpen,\r\n    listID,\r\n    onClick,\r\n    isAddList,\r\n    isFirstList,\r\n    isFirstCard,\r\n    style,\r\n    scrollBottomReset,\r\n    scrollLeftReset,\r\n}) => {\r\n    const addListRef = useRef();\r\n    const inputRef = useRef();\r\n    const [isOpenInput, setIsOpenInput] = useState(false);\r\n    const [name, setName] = useState('');\r\n    const user = useSelector((state) => state.userReducer);\r\n    const board = useSelector((state) => state.boardReducer.currentBoard);\r\n    const currentIsOpen = isAddList ? isOpenInput : isOpen;\r\n    const currentSetIsOpen = isAddList ? setIsOpenInput : setIsOpen;\r\n    const boardID = board._id;\r\n\r\n    const handleAddListOrCard = (event) => {\r\n        event.preventDefault();\r\n\r\n        if (!name) return inputRef.current.focus();\r\n        const userID = user._id;\r\n\r\n        isAddList\r\n            ? socket.emit('add list', { name, boardID, userID })\r\n            : socket.emit('add card', { name, boardID, listID, userID });\r\n\r\n        setName('');\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n        if (!isAddList) {\r\n            onClick && onClick();\r\n        }\r\n        currentSetIsOpen(true);\r\n    };\r\n\r\n    const handleButtonText = () => {\r\n        return `Add ${isFirstList || isFirstCard ? '' : 'another'} ${isAddList ? 'list' : 'card'}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentListID = listID;\r\n        socket.on('add list', ({ listCreated, boardID, userID }) => {\r\n            if (userID === user._id) {\r\n                setTimeout(() => {\r\n                    inputRef.current && inputRef.current.focus();\r\n                    scrollLeftReset && scrollLeftReset();\r\n                }, 0);\r\n            }\r\n        });\r\n        socket.on('add card', ({ listID, userID }) => {\r\n            if (currentListID === listID && userID === user._id) {\r\n                setTimeout(() => {\r\n                    inputRef.current && inputRef.current.focus();\r\n                    scrollBottomReset && scrollBottomReset();\r\n                }, 0);\r\n            }\r\n        });\r\n    }, [board, listID, scrollBottomReset, scrollLeftReset, user._id]);\r\n\r\n    useEffect(() => {\r\n        if (currentIsOpen) {\r\n            inputRef.current && inputRef.current.focus();\r\n            scrollLeftReset && scrollLeftReset();\r\n            closeOnClickOutside(addListRef, currentSetIsOpen);\r\n        }\r\n    }, [currentIsOpen, currentSetIsOpen, scrollLeftReset]);\r\n\r\n    return (\r\n        <>\r\n            {currentIsOpen ? (\r\n                <form\r\n                    ref={addListRef}\r\n                    className=\"addlist addlist__form\"\r\n                    style={style}\r\n                    onSubmit={(event) => handleAddListOrCard(event)}>\r\n                    <div className=\"addlist__head\">\r\n                        <input\r\n                            ref={inputRef}\r\n                            className=\"addlist__input\"\r\n                            value={name}\r\n                            onChange={(e) => setName(e.target.value)}\r\n                            type=\"text\"\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"addlist__btn-add\">\r\n                        Add {isAddList ? 'list' : 'card'}\r\n                    </button>\r\n                </form>\r\n            ) : (\r\n                <button\r\n                    style={{\r\n                        ...style,\r\n                        margin: isAddList ? '' : 'auto',\r\n                        background: 'transparent',\r\n                        display: 'flex',\r\n                    }}\r\n                    onClick={(e) => handleOnClick()}>\r\n                    <div className=\"addlist\">\r\n                        <span>{handleButtonText()}</span>\r\n                        <MdAdd className=\"addlist__head__icon\" />\r\n                    </div>\r\n                </button>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default AddListOrCard;\r\n","import React, { useEffect, useState } from 'react';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport Button from '../../utils/Button';\r\nimport { HiOutlineSearch } from 'react-icons/hi';\r\nimport axios from '../../../utils/axios';\r\nimport { useSelector } from 'react-redux';\r\nimport { getPicturePath, isEmpty } from '../../../utils/utils';\r\nimport { IoAddCircleOutline } from 'react-icons/io5';\r\nimport { FiCheckCircle } from 'react-icons/fi';\r\nimport socket from '../../../utils/socket';\r\n\r\nconst AssignMember = ({ isOpen, setIsOpen, cardMembers, cardID, listID }) => {\r\n    const currentBoard = useSelector((state) => state.boardReducer.currentBoard);\r\n    const [members, setMembers] = useState([]);\r\n    const [usersToInvite, setUsersToInvite] = useState([]);\r\n    const [userSearch, setUserSearch] = useState([]);\r\n    const [searchValue, setSearchValue] = useState('');\r\n\r\n    useEffect(() =>{\r\n        if (isEmpty(cardMembers)) return;\r\n        setMembers(cardMembers.map((member) => member._id))\r\n    }, [cardMembers]);\r\n\r\n    useEffect(() => {\r\n        if (!isEmpty(currentBoard)) {\r\n            axios\r\n                .post(`/board/members/${currentBoard._id}`, { cardID, listID })\r\n                .then((res) => {\r\n                    setUsersToInvite(res.data);\r\n                    setUserSearch(res.data);\r\n                })\r\n                .catch((err) => {\r\n                    console.log(err);\r\n                });\r\n        }\r\n    }, [isOpen, cardID, listID, currentBoard]);\r\n\r\n    const handleSearchUser = () => {\r\n        setUserSearch(usersToInvite.filter((user) => user.pseudo.includes(searchValue)));\r\n    };\r\n\r\n    const handleAssignMemberToCard = (memberID) => {\r\n        members.findIndex((memberIDArg) => memberIDArg === memberID) === -1\r\n            ? setMembers((oldMember) => {\r\n                  oldMember.push(memberID);\r\n                  const assignMemberObject = {\r\n                      assignedMembersID: oldMember,\r\n                      boardID: currentBoard._id,\r\n                      listID,\r\n                      cardID,\r\n                  };\r\n                  socket.emit('assign member card', assignMemberObject);\r\n                  return [...oldMember];\r\n              })\r\n            : setMembers((oldMember) => {\r\n                  oldMember = oldMember.filter((memberIDArg) => memberIDArg !== memberID);\r\n                  const assignMemberObject = {\r\n                      assignedMembersID: oldMember,\r\n                      boardID: currentBoard._id,\r\n                      listID,\r\n                      cardID,\r\n                  };\r\n                  socket.emit('assign member card', assignMemberObject);\r\n                  return [...oldMember];\r\n              });\r\n    };\r\n\r\n    return (\r\n        <DropDown\r\n            contentClass=\"invitemember\"\r\n            isResponsive={true}\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            title=\"Members\"\r\n            description=\"Assign members to this card\">\r\n            <div className=\"invitemember__input__wrapper\">\r\n                <input\r\n                    className=\"invitemember__input__wrapper__input\"\r\n                    placeholder=\"User...\"\r\n                    type=\"text\"\r\n                    value={searchValue}\r\n                    onChange={(e) => setSearchValue(e.target.value)}\r\n                />\r\n                <Button\r\n                    className=\"invitemember__input__wrapper__btn\"\r\n                    onClick={() => handleSearchUser()}>\r\n                    <HiOutlineSearch />\r\n                </Button>\r\n            </div>\r\n            {!isEmpty(userSearch) && (\r\n                <ul className=\"invitemember__suggest\">\r\n                    {userSearch.map(({ _id, pseudo, picture }, index) => {\r\n                        return (\r\n                            <li\r\n                                key={_id}\r\n                                style={{\r\n                                    marginBottom: index === userSearch.length - 1 ? '' : '15px',\r\n                                }}>\r\n                                <button\r\n                                    className=\"invitemember__suggest__item\"\r\n                                    onClick={() => handleAssignMemberToCard(_id)}>\r\n                                    <img\r\n                                        className=\"invitemember__suggest__item__picture\"\r\n                                        src={getPicturePath('user', picture)}\r\n                                        alt={`user ${pseudo}`}\r\n                                    />\r\n                                    <span className=\"invitemember__suggest__item__pseudo\">\r\n                                        {pseudo}\r\n                                    </span>\r\n                                    {members.includes(_id) ? (\r\n                                        <FiCheckCircle className=\"invitemember__suggest__item__icon invitemember__suggest__item__icon--select\" />\r\n                                    ) : (\r\n                                        <IoAddCircleOutline className=\"invitemember__suggest__item__icon\" />\r\n                                    )}\r\n                                </button>\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            )}\r\n\r\n            {/* <Button\r\n                className={`invitemember__btn-invite ${\r\n                    isEmpty(userSelected) ? 'invitemember__btn-invite--disabled' : ''\r\n                }`}\r\n                onClick={() => !isEmpty(userSelected) && handleAssignMember()}>\r\n                Add\r\n            </Button> */}\r\n        </DropDown>\r\n    );\r\n};\r\n\r\nexport default AssignMember;\r\n","import React from 'react';\r\nimport { getPicturePath } from '../../utils/utils';\r\n\r\nconst UserDisplay = ({ pseudo, picture }) => {\r\n    return (\r\n        <li className=\"userdisplay\">\r\n            <img className=\"userdisplay__img\" src={getPicturePath('user', picture)} alt=\"\" />\r\n            <span className=\"userdisplay__name\">{pseudo}</span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default UserDisplay;\r\n","import React, { useState } from 'react';\r\nimport CategoryTitle from '../../../layouts/CategoryTitle';\r\nimport { MdDescription, MdEdit } from 'react-icons/md';\r\nimport Button from '../../../utils/Button';\r\nimport ContentEditable from '../../ContentEditable';\r\nimport socket from '../../../../utils/socket';\r\n\r\nconst Description = ({ card, listID, board }) => {\r\n    const [isOpenEditDesc, setIsOpenEditDesc] = useState(false);\r\n\r\n    const handleChangeCardDescription = (newDesc) => {\r\n        socket.emit('change card description', {\r\n            boardID: board._id,\r\n            listID,\r\n            cardID: card._id,\r\n            description: newDesc,\r\n        });\r\n        setIsOpenEditDesc(false);\r\n    };\r\n\r\n    return (\r\n        <div className=\"cardmodal__content__left__description\">\r\n            <div className=\"cardmodal__content__left__description__head\">\r\n                <CategoryTitle\r\n                    icon={<MdDescription />}\r\n                    title=\"Description\"\r\n                    withMarginBottom={false}\r\n                />\r\n                <Button\r\n                    className=\"cardmodal__content__left__description__head__btn-edit\"\r\n                    onClick={() => setIsOpenEditDesc(true)}>\r\n                    <MdEdit className=\"cardmodal__content__left__description__head__btn-edit__icon\" />\r\n                    <span className=\"cardmodal__content__left__description__head__btn-edit__label\">\r\n                        Edit\r\n                    </span>\r\n                </Button>\r\n            </div>\r\n            {isOpenEditDesc ? (\r\n                <ContentEditable\r\n                    content={card.description}\r\n                    submitFunc={handleChangeCardDescription}\r\n                    setIsOpen={setIsOpenEditDesc}\r\n                />\r\n            ) : (\r\n                <p\r\n                    dangerouslySetInnerHTML={{ __html: card.description }}\r\n                    className=\"cardmodal__content__left__description__content\"\r\n                />\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Description;\r\n","import React, { useEffect, useState } from 'react';\r\nimport CategoryTitle from '../../../layouts/CategoryTitle';\r\nimport { MdDescription, MdAdd } from 'react-icons/md';\r\nimport Button from '../../../utils/Button';\r\nimport axios from '../../../../utils/axios';\r\nimport download from 'downloadjs';\r\nimport { cutMongooseTimestampInDate, getPicturePath, isEmpty } from '../../../../utils/utils';\r\nimport socket from '../../../../utils/socket';\r\n\r\nconst Attachments = ({ boardID, listID, cardID, attachments }) => {\r\n    const [attachmentsState, setAttachmentsState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        if (isEmpty(attachments)) return;\r\n        setAttachmentsState(attachments);\r\n    }, [attachments]);\r\n\r\n    useEffect(() => {\r\n        socket.on('delete attachment', ({ attachmentID }) => {\r\n            setAttachmentsState((oldAttachment) =>\r\n                oldAttachment.filter((attach) => attach._id !== attachmentID)\r\n            );\r\n        });\r\n    }, []);\r\n\r\n    const isPicture = (file) => {\r\n        const fileExtension = file.match(/\\.[0-9a-z]+$/i)[0].toLowerCase();\r\n\r\n        return fileExtension === '.png' || fileExtension === '.jpg' || fileExtension === '.jpeg';\r\n    };\r\n\r\n    const handleDeleteAttachement = (attachmentID) => {\r\n        socket.emit('delete attachment', { boardID, listID, cardID, attachmentID });\r\n    };\r\n\r\n    const handleAddAttachement = (e) => {\r\n        const formData = new FormData();\r\n        formData.append('attachment', e.target.files[0]);\r\n        formData.append('boardID', boardID);\r\n        formData.append('listID', listID);\r\n        formData.append('cardID', cardID);\r\n\r\n        axios\r\n            .post('/board/list/card/attachment', formData)\r\n            .then((res) => {\r\n                setAttachmentsState([...attachmentsState, res.data]);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    const handleFormatDate = (createdAt) => {\r\n        if (isEmpty(createdAt)) return;\r\n        const { dayNum, monthLetter, years } = cutMongooseTimestampInDate(createdAt);\r\n        return `Added ${monthLetter} ${dayNum}, ${years}`;\r\n    };\r\n\r\n    const handleDownloadAttachment = (name, filePath) => {\r\n        axios\r\n            .post('/board/list/card/download-attachment', { filePath }, { responseType: 'blob' })\r\n            .then((res) => {\r\n                console.log(res);\r\n                download(res.data, name);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    };\r\n\r\n    return (\r\n        <div className=\"cardmodal__content__left__attachements\">\r\n            <div className=\"cardmodal__content__left__attachements__head\">\r\n                <CategoryTitle\r\n                    icon={<MdDescription />}\r\n                    title=\"Attachements\"\r\n                    withMarginBottom={false}\r\n                />\r\n                <label\r\n                    className=\"cardmodal__content__left__attachements__head__btn-add\"\r\n                    htmlFor=\"upload-attachement\">\r\n                    {/* <Button className=\"cardmodal__content__left__attachements__head__btn-add\">\r\n                    <MdAdd className=\"cardmodal__content__left__attachements__head__btn-add__icon\" />\r\n                    <span className=\"cardmodal__content__left__attachements__head__btn-add__label\">\r\n                        Add\r\n                    </span>\r\n                        </Button> */}\r\n                    <MdAdd className=\"cardmodal__content__left__attachements__head__btn-add__icon\" />\r\n                    <span className=\"cardmodal__content__left__attachements__head__btn-add__label\">\r\n                        Add\r\n                    </span>\r\n                    <input\r\n                        type=\"file\"\r\n                        onChange={(e) => handleAddAttachement(e)}\r\n                        name=\"\"\r\n                        id=\"upload-attachement\"\r\n                    />\r\n                </label>\r\n            </div>\r\n            <ul className=\"cardmodal__content__left__attachements__list\">\r\n                {attachmentsState.map(({ _id, name, filePath, createdAt }, index) => {\r\n                    return (\r\n                        <li\r\n                            key={index}\r\n                            className=\"cardmodal__content__left__attachements__list__item\">\r\n                            <div className=\"cardmodal__content__left__attachements__list__item__left\">\r\n                                {isPicture(name) ? (\r\n                                    <img\r\n                                        className=\"cardmodal__content__left__attachements__list__item__left__img\"\r\n                                        src={getPicturePath('attachment', filePath)}\r\n                                        alt=\"attachment\"\r\n                                    />\r\n                                ) : (\r\n                                    <span>{name.substring(0, 2)}</span>\r\n                                )}\r\n                            </div>\r\n                            <div className=\"cardmodal__content__left__attachements__list__item__right\">\r\n                                <span className=\"cardmodal__content__left__attachements__list__item__right__date\">\r\n                                    {handleFormatDate(createdAt)}\r\n                                </span>\r\n                                <h4 className=\"cardmodal__content__left__attachements__list__item__right__name\">\r\n                                    {name}\r\n                                </h4>\r\n                                <div className=\"cardmodal__content__left__attachements__list__item__right__btn-wrapper\">\r\n                                    <Button\r\n                                        className=\"cardmodal__content__left__attachements__list__item__right__btn-wrapper__item\"\r\n                                        onClick={() => handleDownloadAttachment(name, filePath)}>\r\n                                        Download\r\n                                    </Button>\r\n                                    <Button\r\n                                        className=\"cardmodal__content__left__attachements__list__item__right__btn-wrapper__item\"\r\n                                        onClick={() => handleDeleteAttachement(_id)}>\r\n                                        Delete\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        </li>\r\n                    );\r\n                })}\r\n            </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Attachments;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { closeOnClickOutside, getPicturePath } from '../../../utils/utils';\r\nimport Button from '../../utils/Button';\r\n\r\nconst CommentBox = ({ content, setContent, submitFunc, isNewComment = true, userPicture }) => {\r\n    const commentBoxRef = useRef();\r\n    const commentRef = useRef();\r\n    const [isDisabledPlaceholder, setIsDisabledPlaceholder] = useState(false);\r\n    const [isFocus, setIsFocus] = useState(false);\r\n\r\n    useEffect(() => {\r\n        if (!content && isFocus) setIsDisabledPlaceholder(false);\r\n        // setIsDisabledPlaceholder(true);\r\n        commentRef.current.textContent = content;\r\n        closeOnClickOutside(commentBoxRef, setIsFocus);\r\n    }, [content]);\r\n\r\n    const handleSubmit = () => {\r\n        if (!content) return commentRef.current.focus();\r\n        submitFunc();\r\n        setContent('');\r\n        commentRef.current.innerHTML = '';\r\n    };\r\n\r\n    const handleOnFocus = () => {\r\n        setIsDisabledPlaceholder(true);\r\n        setIsFocus(true);\r\n    };\r\n\r\n    const handleOnBlur = () => {\r\n        !content && setIsDisabledPlaceholder(false);\r\n    };\r\n\r\n    const handleSetComment = () => {\r\n        setContent(commentRef.current.textContent);\r\n        if (!content) setIsDisabledPlaceholder(true);\r\n    };\r\n\r\n    return (\r\n        <div className=\"commentbox\" ref={commentBoxRef}>\r\n            <div className=\"commentbox__head\">\r\n                <img src={getPicturePath('user', userPicture)} alt=\"\" />\r\n                <div className=\"commentbox-input-wrapper\">\r\n                    <div\r\n                        ref={commentRef}\r\n                        onFocus={() => handleOnFocus()}\r\n                        onBlur={() => handleOnBlur()}\r\n                        onInput={() => handleSetComment()}\r\n                        className=\"commentbox-input-wrapper__input\"\r\n                        contentEditable={true}></div>\r\n                    {!isDisabledPlaceholder && (\r\n                        <span className=\"commentbox-input-wrapper__placeholder\">\r\n                            Write a comment...\r\n                        </span>\r\n                    )}\r\n                </div>\r\n            </div>\r\n\r\n            <div className={`commentbox__toolbar ${isFocus ? 'commentbox__toolbar--open' : ''}`}>\r\n                <Button onClick={() => handleSubmit()}>{isNewComment ? 'Comment' : 'Save'}</Button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CommentBox;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport socket from '../../../../utils/socket';\r\nimport { cutMongooseTimestampInDate, getPicturePath, isEmpty } from '../../../../utils/utils';\r\nimport CommentBox from '../../board/CommentBox';\r\nimport Button from '../../../utils/Button';\r\n\r\nconst Comments = ({ boardID, listID, cardID, comments }) => {\r\n    const commentRef = useRef();\r\n    const newCommentRef = useRef();\r\n    const [commentsState, setCommentsState] = useState([]);\r\n    const [commentEdited, setCommentEdited] = useState({\r\n        commentID: null,\r\n        isEdit: false,\r\n    });\r\n    const [commentMessageEdited, setCommentMessageEdited] = useState('');\r\n    const { _id: userID, picture } = useSelector((state) => state.userReducer);\r\n    const [message, setMessage] = useState('');\r\n\r\n    useEffect(() => {\r\n        socket.on('card edit comment', ({ boardID, listID, cardID, commentID, message }) => {\r\n            setCommentsState((oldComments) => {\r\n                return oldComments.map((comment) => {\r\n                    if (comment._id === commentID) {\r\n                        comment.message = message;\r\n                    }\r\n                    return comment;\r\n                });\r\n            });\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        if (isEmpty(comments)) return;\r\n        setCommentsState(comments);\r\n    }, [comments]);\r\n\r\n    const handleFormatDate = (createdAt) => {\r\n        const { dayNum, monthLetter, hour } = cutMongooseTimestampInDate(createdAt);\r\n        return `${dayNum} ${monthLetter} at ${hour}`;\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentCardID = cardID;\r\n        socket.on('card comment', ({ boardID, listID, cardID, comments }) => {\r\n            if (cardID === currentCardID) {\r\n                setCommentsState((oldComments) => {\r\n                    return [...oldComments, comments];\r\n                });\r\n            }\r\n        });\r\n        socket.on('card delete comment', ({ boardID, listID, cardID, commentID }) => {\r\n            if (cardID === currentCardID) {\r\n                setCommentsState((oldComments) => {\r\n                    return oldComments.filter((comment) => comment._id !== commentID);\r\n                });\r\n            }\r\n        });\r\n        return () => {\r\n            socket.off('card comment');\r\n            socket.off('card delete comment');\r\n        };\r\n    }, []);\r\n\r\n    const handleSendComment = () => {\r\n        if (!message) return;\r\n        socket.emit('card comment', { boardID, listID, cardID, userID, message });\r\n    };\r\n\r\n    const handleDeleteComment = (commentID) => {\r\n        socket.emit('card delete comment', { boardID, listID, cardID, commentID });\r\n    };\r\n\r\n    const handleEditComment = (commentID) => {\r\n        socket.emit('card edit comment', {\r\n            boardID,\r\n            listID,\r\n            cardID,\r\n            commentID,\r\n            message: commentMessageEdited,\r\n        });\r\n        setCommentEdited({\r\n            commentID: null,\r\n            isEdit: false,\r\n        });\r\n    };\r\n\r\n    const handleSetNewMessage = () => {\r\n        setCommentMessageEdited(newCommentRef.current.textContent);\r\n    };\r\n\r\n    const handleSetEditComment = async (commentID, message) => {\r\n        await setCommentEdited({\r\n            commentID,\r\n            isEdit: true,\r\n        });\r\n        setCommentMessageEdited(message);\r\n        newCommentRef.current.innerText = message;\r\n        // console.log(commentID);\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <div className=\"cardmodal__content__left__comment\">\r\n                <CommentBox\r\n                    content={message}\r\n                    setContent={setMessage}\r\n                    submitFunc={handleSendComment}\r\n                    userPicture={picture}\r\n                />\r\n                <ul className=\"cardmodal__content__left__comment__list\">\r\n                    {commentsState.map(({ user, message, createdAt, _id }, index) => {\r\n                        return (\r\n                            <li\r\n                                key={index}\r\n                                className=\"cardmodal__content__left__comment__list__item\"\r\n                                style={{\r\n                                    marginBottom: index === commentsState.length - 1 ? '' : '16px',\r\n                                }}>\r\n                                <div className=\"cardmodal__content__left__comment__list__item__head\">\r\n                                    <img\r\n                                        src={getPicturePath('user', user.picture)}\r\n                                        alt=\"\"\r\n                                        className=\"cardmodal__content__left__comment__list__item__head__profil-img\"\r\n                                    />\r\n                                    <div className=\"cardmodal__content__left__comment__list__item__head__infos\">\r\n                                        <h4 className=\"cardmodal__content__left__comment__list__item__head__infos__name\">\r\n                                            {user.pseudo}\r\n                                        </h4>\r\n                                        <span className=\"cardmodal__content__left__comment__list__item__head__infos__date\">\r\n                                            {handleFormatDate(createdAt)}\r\n                                        </span>\r\n                                    </div>\r\n                                    {user._id === userID && (\r\n                                        <div className=\"cardmodal__content__left__comment__list__item__head__btn-wrapper\">\r\n                                            <button\r\n                                                className=\"cardmodal__content__left__comment__list__item__head__btn-wrapper__edit\"\r\n                                                onClick={() => handleSetEditComment(_id, message)}>\r\n                                                Edit\r\n                                            </button>\r\n                                            -\r\n                                            <button\r\n                                                className=\"cardmodal__content__left__comment__list__item__head__btn-wrapper__delete\"\r\n                                                onClick={() => handleDeleteComment(_id)}>\r\n                                                Delete\r\n                                            </button>\r\n                                        </div>\r\n                                    )}\r\n                                </div>\r\n                                {commentEdited.isEdit && commentEdited.commentID === _id ? (\r\n                                    // <CommentBox\r\n                                    //     isNewComment={false}\r\n                                    //     content={commentMessageEdited}\r\n                                    //     setContent={setCommentMessageEdited}\r\n                                    // />\r\n                                    <div className=\"cardmodal__content__left__comment__list__item__edit-comment-wrapper\">\r\n                                        <div\r\n                                            ref={newCommentRef}\r\n                                            contentEditable={true}\r\n                                            onInput={() => handleSetNewMessage()}\r\n                                            className=\"cardmodal__content__left__comment__list__item__edit-comment-wrapper__input\"></div>\r\n                                        <div className=\"\" style={{ display: 'flex' }}>\r\n                                            <Button\r\n                                                className=\"cardmodal__content__left__comment__list__item__edit-comment-wrapper__btn-save\"\r\n                                                onClick={() => handleEditComment(_id)}>\r\n                                                Save\r\n                                            </Button>\r\n                                            <Button\r\n                                                className=\"cardmodal__content__left__comment__list__item__edit-comment-wrapper__btn-cancel\"\r\n                                                onClick={() =>\r\n                                                    setCommentEdited({\r\n                                                        commentID: null,\r\n                                                        isEdit: false,\r\n                                                    })\r\n                                                }>\r\n                                                Cancel\r\n                                            </Button>\r\n                                        </div>\r\n                                    </div>\r\n                                ) : (\r\n                                    <p className=\"cardmodal__content__left__comment__list__item__comment\">\r\n                                        {message}\r\n                                    </p>\r\n                                )}\r\n                            </li>\r\n                        );\r\n                    })}\r\n                </ul>\r\n            </div>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Comments;\r\n","import React from 'react';\r\nimport { IoIosCloseCircleOutline } from 'react-icons/io';\r\n\r\nconst labelStyle = {\r\n    fontSize: '0.8rem',\r\n    borderRadius: '9999px',\r\n    padding: '4px 10px',\r\n    marginRight: '12px',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n};\r\n\r\nconst CardLabel = ({ name, color, style, isDeleted = false, onClick }) => {\r\n    const handleCheckName = () => {\r\n        if (name.length > 30) return;\r\n        // AFFICHER ... SI LA CARD EST TROP LONGUE\r\n    };\r\n\r\n    const handleOnClick = () => {\r\n        onClick && onClick();\r\n    };\r\n\r\n    return (\r\n        <span\r\n            className={`cardlabel ${isDeleted ? 'cardlabeldeletable' : ''}`}\r\n            onClick={() => handleOnClick()}\r\n            style={{\r\n                ...labelStyle,\r\n                ...style,\r\n                backgroundColor: `rgba(${color},0.3)`,\r\n                color: `rgb(${color})`,\r\n            }}>\r\n            {name}\r\n            {isDeleted && <IoIosCloseCircleOutline style={{ marginLeft: '6px' }} />}\r\n        </span>\r\n    );\r\n};\r\n\r\nexport default CardLabel;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { MdLabel } from 'react-icons/md';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport Button from '../../utils/Button';\r\nimport CategoryTitle from '../../layouts/CategoryTitle';\r\nimport socket from '../../../utils/socket';\r\nimport { clearToastByTypes, isEmpty, successToast, warningToast } from '../../../utils/utils';\r\nimport CardLabel from '../board/CardLabel';\r\n// const colors = {\r\n//     darkGreen: '#219653',\r\n//     yellow: '#F2C94C',\r\n//     orange: '#F2994A',\r\n//     red: '#EB5757',\r\n//     blue: '#2F80ED',\r\n//     cyan: '#56CCF2',\r\n//     lightGreen: '#6FCF97',\r\n//     veryDarkGray: '#333333',\r\n//     darkGray: '#4F4F4F',\r\n//     midGray: '#828282',\r\n//     lightGray: '#BDBDBD',\r\n//     gray: '#E0E0E0',\r\n// };\r\nconst Label = ({ labels, boardID, listID, cardID, isOpen, setIsOpen }) => {\r\n    const [labelsState, setLabelsState] = useState([]);\r\n    const [labelName, setLabelName] = useState('');\r\n    const [colorSelected, setColorSelected] = useState();\r\n\r\n    useEffect(() => {\r\n        if (isEmpty(labels)) return;\r\n        setLabelsState(labels);\r\n    }, [labels, isOpen]);\r\n\r\n    const colors = {\r\n        darkGreen: '33, 150, 83',\r\n        yellow: '242, 201, 76',\r\n        orange: '242, 153, 74',\r\n        red: '235, 87, 87',\r\n        blue: '47, 128, 237',\r\n        cyan: '86, 204, 242',\r\n        lightGreen: '111, 207, 151',\r\n        veryDarkGray: '51, 51, 51',\r\n        darkGray: '79, 79, 79',\r\n        midGray: '130, 130, 130',\r\n        lightGray: '189, 189, 189',\r\n        gray: '224, 224, 224',\r\n    };\r\n\r\n    useEffect(() => {\r\n        const currentCardID = cardID;\r\n        socket.on('card add label', ({ boardID, listID, cardID, label }) => {\r\n            if (currentCardID === cardID) {\r\n                setLabelsState((oldLabels) => {\r\n                    return [...oldLabels, label];\r\n                });\r\n            }\r\n        });\r\n        socket.on('card delete label', ({ boardID, listID, cardID, labelID }) => {\r\n            if (currentCardID === cardID) {\r\n                setLabelsState((oldLabels) => {\r\n                    return oldLabels.filter((label) => label._id !== labelID);\r\n                });\r\n            }\r\n        });\r\n    }, [cardID]);\r\n\r\n    const handleAddLabel = () => {\r\n        if (!labelName) return warningToast('Missing label name');\r\n        if (!colorSelected) return warningToast('Missing label color');\r\n        clearToastByTypes('warning');\r\n        successToast('Label created');\r\n        socket.emit('card add label', { boardID, listID, cardID, labelName, color: colorSelected });\r\n    };\r\n\r\n    const handleDeleteLabel = (labelID) => {\r\n        socket.emit('card delete label', { boardID, listID, cardID, labelID });\r\n    };\r\n\r\n    const handleReturnColorItem = () => {\r\n        const colorsItems = [];\r\n        for (let color in colors) {\r\n            colorsItems.push(\r\n                <button\r\n                    key={color}\r\n                    onClick={() => {\r\n                        colors[color] === colorSelected\r\n                            ? setColorSelected('')\r\n                            : setColorSelected(colors[color]);\r\n                    }}\r\n                    style={{ backgroundColor: `rgba(${colors[color]}, 1)` }}\r\n                    className={`label__colorpicker__item ${\r\n                        colorSelected === colors[color] ? 'color-selected' : ''\r\n                    }`}\r\n                />\r\n            );\r\n        }\r\n        return colorsItems;\r\n    };\r\n\r\n    return (\r\n        <DropDown\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            top=\"46px\"\r\n            contentClass=\"label\"\r\n            title=\"Label\"\r\n            description=\"Select a name and a color\">\r\n            <input\r\n                value={labelName}\r\n                onChange={(e) => setLabelName(e.target.value)}\r\n                placeholder=\"Label...\"\r\n                className=\"label__input\"\r\n                type=\"text\"\r\n            />\r\n            <div className=\"label__colorpicker\">{handleReturnColorItem()}</div>\r\n            <div className=\"label__available\">\r\n                <CategoryTitle icon={<MdLabel />} title=\"Available \" />\r\n                <div className=\"label__available__container\">\r\n                    {!isEmpty(labelsState) &&\r\n                        labelsState.map((label) => {\r\n                            return (\r\n                                // <span style={{display : 'flex'}}>\r\n                                <CardLabel\r\n                                    onClick={() => handleDeleteLabel(label._id)}\r\n                                    style={{ marginBottom: '8px' }}\r\n                                    key={label._id}\r\n                                    name={label.name}\r\n                                    color={label.color}\r\n                                    isDeleted={true}\r\n                                />\r\n                                // </span>\r\n                            );\r\n                        })}\r\n                </div>\r\n            </div>\r\n            <Button className=\"label__btn-add\" onClick={() => handleAddLabel()}>\r\n                Add\r\n            </Button>\r\n        </DropDown>\r\n    );\r\n};\r\n\r\nexport default Label;\r\n","import React, { useEffect, useState } from 'react';\r\nimport Button from '../../utils/Button';\r\nimport Modal from '../../utils/Modal';\r\nimport { FaUserCircle } from 'react-icons/fa';\r\nimport CategoryTitle from '../../layouts/CategoryTitle';\r\nimport { MdGroup, MdLabel, MdImage, MdAdd } from 'react-icons/md';\r\nimport axios from '../../../utils/axios';\r\nimport { useSelector } from 'react-redux';\r\nimport AssignMember from '../dropdown/AssignMember';\r\nimport { isEmpty } from '../../../utils/utils';\r\nimport UserDisplay from '../../layouts/UserDisplay';\r\nimport socket from '../../../utils/socket';\r\nimport Description from './CardModal/Description';\r\nimport Attachments from './CardModal/Attachments';\r\nimport Comments from './CardModal/Comments';\r\nimport Loader from '../../utils/Loader';\r\nimport Label from '../dropdown/Label';\r\n\r\nconst CardModal = ({ isOpen, setIsOpen, _id, listID, listName }) => {\r\n    const board = useSelector((state) => state.boardReducer.currentBoard);\r\n    const [card, setCard] = useState([]);\r\n    const [isOpenLabel, setIsOpenLabel] = useState(false);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [isOpenAssignMember, setIsOpenAssignMember] = useState(false);\r\n\r\n    useEffect(() => {\r\n        axios\r\n            .post(`/board/card/${_id}`, { boardID: board._id, listID })\r\n            .then((res) => {\r\n                setCard(res.data);\r\n                setIsLoading(false);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, [board._id, listID, _id]);\r\n\r\n    useEffect(() => {\r\n        const currentCardID = _id;\r\n        socket.on('assign member card', ({ assignedMembers, cardID }) => {\r\n            if (currentCardID === cardID) {\r\n                setCard((oldCard) => {\r\n                    return { ...oldCard, members: [...assignedMembers] };\r\n                });\r\n            }\r\n        });\r\n        socket.on('change card description', ({ boardID, listID, cardID, description }) => {\r\n            if (currentCardID === cardID) {\r\n                setCard((oldCard) => {\r\n                    return { ...oldCard, description: description };\r\n                });\r\n            }\r\n        });\r\n        socket.on('change card title', ({ boardID, listID, cardID, cardTitle }) => {\r\n            if (currentCardID === cardID) {\r\n                setCard((oldCard) => {\r\n                    return { ...oldCard, title: cardTitle };\r\n                });\r\n            }\r\n        });\r\n        return () => {\r\n            socket.off('change card description');\r\n        };\r\n    }, [_id]);\r\n\r\n    const handleChangeCardTitle = () => {\r\n        const changeCardTitleObject = {\r\n            boardID: board._id,\r\n            listID,\r\n            cardID: _id,\r\n            cardTitle: card.title,\r\n        };\r\n        socket.emit('change card title', changeCardTitleObject);\r\n    };\r\n\r\n    return (\r\n        <Modal\r\n            hasCloseButton={true}\r\n            isOpen={isOpen}\r\n            setIsOpen={setIsOpen}\r\n            hasOverflowYScroll={true}>\r\n            <div className=\"cardmodal\">\r\n                {isLoading ? (\r\n                    <Loader radius={150} />\r\n                ) : (\r\n                    <>\r\n                        <div className=\"cardmodal__head\">\r\n                            <img className=\"cardmodal__head__img\" src=\"\" alt=\"card\" />\r\n                        </div>\r\n                        <div className=\"cardmodal__content\">\r\n                            <div className=\"cardmodal__content__left\">\r\n                                <div className=\"cardmodal__content__left__head\">\r\n                                    <textarea\r\n                                        value={card.title}\r\n                                        onChange={(e) =>\r\n                                            setCard({ ...card, title: e.target.value })\r\n                                        }\r\n                                        onBlur={() => handleChangeCardTitle()}\r\n                                        className=\"cardmodal__content__left__head__title\"\r\n                                    />\r\n                                    <span className=\"cardmodal__content__left__head__inlist\">\r\n                                        in list{' '}\r\n                                        <span className=\"cardmodal__content__left__head__inlist__name\">\r\n                                            {listName}\r\n                                        </span>\r\n                                    </span>\r\n                                </div>\r\n                                <Description listID={listID} board={board} card={card} />\r\n                                <Attachments\r\n                                    attachments={card.attachments}\r\n                                    boardID={board._id}\r\n                                    listID={listID}\r\n                                    cardID={_id}\r\n                                />\r\n                                <Comments\r\n                                    comments={card.comments}\r\n                                    boardID={board._id}\r\n                                    listID={listID}\r\n                                    cardID={_id}\r\n                                />\r\n                            </div>\r\n                            <div className=\"cardmodal__content__right\">\r\n                                <CategoryTitle icon={<FaUserCircle />} title=\"Actions\" />\r\n\r\n                                <div className=\"\" style={{ position: 'relative' }}>\r\n                                    <Button\r\n                                        className=\"cardmodal__content__right__btn\"\r\n                                        onClick={() => setIsOpenLabel(true)}>\r\n                                        <MdLabel className=\"cardmodal__content__right__btn__icon\" />\r\n                                        <span className=\"cardmodal__content__right__btn__label\">\r\n                                            Labels\r\n                                        </span>\r\n                                    </Button>\r\n                                    <Label\r\n                                        labels={card.labels}\r\n                                        boardID={board._id}\r\n                                        listID={listID}\r\n                                        cardID={_id}\r\n                                        isOpen={isOpenLabel}\r\n                                        setIsOpen={setIsOpenLabel}\r\n                                    />\r\n                                </div>\r\n\r\n                                <Button className=\"cardmodal__content__right__btn\">\r\n                                    <MdImage className=\"cardmodal__content__right__btn__icon\" />\r\n                                    <span className=\"cardmodal__content__right__btn__label\">\r\n                                        Cover\r\n                                    </span>\r\n                                </Button>\r\n                                <div className=\"cardmodal__content__right__members\">\r\n                                    <CategoryTitle icon={<MdGroup />} title=\"Members\" />\r\n                                    <ul className=\"cardmodal__content__right__members__list\">\r\n                                        {!isEmpty(card) &&\r\n                                            card.members.map((member) => {\r\n                                                return (\r\n                                                    <UserDisplay\r\n                                                        key={member._id}\r\n                                                        pseudo={member.pseudo}\r\n                                                        picture={member.picture}\r\n                                                    />\r\n                                                );\r\n                                            })}\r\n                                    </ul>\r\n                                    <Button\r\n                                        className=\"cardmodal__content__right__members__btn-add\"\r\n                                        onClick={() => setIsOpenAssignMember(true)}>\r\n                                        <span>Assign a member</span>{' '}\r\n                                        <MdAdd className=\"cardmodal__content__right__members__btn-add__icon\" />\r\n                                    </Button>\r\n                                    <AssignMember\r\n                                        cardMembers={card.members}\r\n                                        cardID={_id}\r\n                                        listID={listID}\r\n                                        isOpen={isOpenAssignMember}\r\n                                        setIsOpen={setIsOpenAssignMember}\r\n                                    />\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </>\r\n                )}\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default CardModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport CardModal from './CardModal';\r\nimport ModalCreateBoard from './CreateBoard';\r\nimport Notifications from './Notifications';\r\n\r\nexport const CREATE_BOARD_MODAL = 'CREATE_BOARD_MODAL';\r\nexport const NOTIFICATIONS_MODAL = 'NOTIFICATIONS_MODAL';\r\nexport const CARD_MODAL = 'CARD_MODAL';\r\n\r\nconst ModalManager = () => {\r\n    const { modalName, props } = useSelector((state) => state.modalReducer);\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        modalName ? setIsOpen(true) : setIsOpen(false);\r\n    }, [modalName]);\r\n\r\n    const handleModalCall = () => {\r\n        switch (modalName) {\r\n            case CREATE_BOARD_MODAL:\r\n                return <ModalCreateBoard {...props} isOpen={isOpen} setIsOpen={setIsOpen} />;\r\n            case NOTIFICATIONS_MODAL:\r\n                return <Notifications {...props} isOpen={isOpen} setIsOpen={setIsOpen} />;\r\n            case CARD_MODAL:\r\n                return <CardModal {...props} isOpen={isOpen} setIsOpen={setIsOpen} />;\r\n            default:\r\n                return <> </>;\r\n        }\r\n    };\r\n\r\n    return handleModalCall();\r\n};\r\n\r\nexport default ModalManager;\r\n","import React from 'react';\r\nimport { BsPaperclip } from 'react-icons/bs';\r\nimport { MdComment } from 'react-icons/md';\r\nimport { MdAdd } from 'react-icons/md';\r\nimport Button from '../../utils/Button';\r\nimport { CARD_MODAL } from '../modal/ModalManager';\r\nimport { useDispatch } from 'react-redux';\r\nimport { openModal } from '../../../redux/actions/modal.action';\r\nimport { getPicturePath } from '../../../utils/utils';\r\nimport CardLabel from './CardLabel';\r\n\r\nconst CardItem = ({ _id, title, picture, labels, members, attachments, listID, listName }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <>\r\n            <li\r\n                className=\"card\"\r\n                onClick={(e) => {\r\n                    dispatch(openModal(CARD_MODAL, { _id, listID, listName }));\r\n                }}>\r\n                {picture && <div className=\"card__image\"></div>}\r\n                <span className=\"card__title\">{title}</span>\r\n                <div className=\"card__category\">\r\n                    {labels.map((label) => {\r\n                        return (\r\n                            <CardLabel\r\n                                key={label._id}\r\n                                style={{ marginBottom: '8px' }}\r\n                                name={label.name}\r\n                                color={label.color}\r\n                            />\r\n                        );\r\n                    })}\r\n                </div>\r\n                <div className=\"card__bottom\">\r\n                    <ul className=\"card__bottom__members\">\r\n                        {members.map((member, index) => {\r\n                            return (\r\n                                <li key={index} className=\"card__bottom__members__item\">\r\n                                    <img\r\n                                        className=\"card__bottom__members__item__img\"\r\n                                        src={getPicturePath('user', member.picture)}\r\n                                        alt=\"\"\r\n                                    />\r\n                                </li>\r\n                            );\r\n                        })}\r\n                        <li>\r\n                            <Button\r\n                                className=\"card__bottom__members__btn-addmember\"\r\n                                onClick={(e) => e.stopPropagation()}>\r\n                                <MdAdd className=\"card__bottom__members__btn-addmember__icon\" />\r\n                            </Button>\r\n                        </li>\r\n                    </ul>\r\n\r\n                    <div className=\"card__bottom__utils\">\r\n                        <button className=\"card__bottom__utils__btn\">\r\n                            <MdComment />\r\n                            <span className=\"card__bottom__utils__btn__number\">1</span>\r\n                        </button>\r\n                        <button className=\"card__bottom__utils__btn\">\r\n                            <BsPaperclip />\r\n                            <span className=\"card__bottom__utils__btn__number\">1</span>\r\n                        </button>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default CardItem;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { isEmpty } from '../../../utils/utils';\r\n\r\nconst Placeholder = ({ destinationIndex, draggableID, currentListOverID, type }) => {\r\n    const queryAttrDraggable = 'data-rbd-drag-handle-draggable-id';\r\n    const queryAttrDroppable = 'data-rbd-droppable-id';\r\n    const [placeholderProps, setPlaceholderProps] = useState({});\r\n\r\n    useEffect(() => {\r\n        if (draggableID) {\r\n            const domQuery = `[${queryAttrDraggable}='${draggableID}']`;\r\n            const domListQuery = `[${queryAttrDroppable}='${currentListOverID}']`;\r\n            const draggedDOM = document.querySelector(domQuery);\r\n            const listOverDOM = document.querySelector(domListQuery);\r\n\r\n            if (!draggedDOM) {\r\n                return;\r\n            }\r\n            const { clientHeight, clientWidth } = draggedDOM;\r\n            if (type === 'CARD') {\r\n                const clientY =\r\n                    parseFloat(\r\n                        window.getComputedStyle(listOverDOM ? listOverDOM : draggedDOM.parentNode)\r\n                            .paddingTop\r\n                    ) +\r\n                    [...(listOverDOM ? listOverDOM.children : draggedDOM.parentNode.children)]\r\n                        .slice(0, destinationIndex)\r\n                        .reduce((total, curr) => {\r\n                            const style = curr.currentStyle || window.getComputedStyle(curr);\r\n                            const marginBottom = parseFloat(style.marginBottom);\r\n                            return total + curr.clientHeight + marginBottom;\r\n                        }, 0);\r\n                setPlaceholderProps({\r\n                    clientHeight,\r\n                    clientWidth,\r\n                    clientY,\r\n                    clientX: parseFloat(window.getComputedStyle(draggedDOM.parentNode).paddingLeft),\r\n                });\r\n            } else if (type === 'LIST') {\r\n                const clientX =\r\n                    parseFloat(window.getComputedStyle(draggedDOM.parentNode).paddingLeft) +\r\n                    [...draggedDOM.parentNode.children]\r\n                        .slice(0, destinationIndex)\r\n                        .reduce((total, curr) => {\r\n                            const style = curr.currentStyle || window.getComputedStyle(curr);\r\n                            const marginRight = parseFloat(style.marginRight);\r\n                            return total + curr.clientWidth + marginRight;\r\n                        }, 0);\r\n\r\n                setPlaceholderProps({\r\n                    clientHeight,\r\n                    clientWidth,\r\n                    clientY: parseFloat(window.getComputedStyle(draggedDOM.parentNode).paddingTop),\r\n                    clientX,\r\n                });\r\n            }\r\n        }\r\n    }, [draggableID, destinationIndex, type, currentListOverID]);\r\n\r\n    return (\r\n        <>\r\n            {!isEmpty(placeholderProps) && (\r\n                <div\r\n                    className=\"dndplaceholder\"\r\n                    style={{\r\n                        position: 'absolute',\r\n                        top: placeholderProps.clientY,\r\n                        left: placeholderProps.clientX,\r\n                        height: placeholderProps.clientHeight,\r\n                        width: placeholderProps.clientWidth,\r\n                    }}\r\n                />\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Placeholder;\r\n","import React, { useEffect, useRef, useState } from 'react';\r\nimport { HiDotsHorizontal } from 'react-icons/hi';\r\nimport { closeOnClickOutside, isEmpty } from '../../../utils/utils';\r\nimport AddListOrCard from './AddList';\r\nimport CardItem from './CardItem';\r\nimport DropDown from '../../utils/Dropdown';\r\nimport Modal from '../../utils/Modal';\r\nimport { useSelector } from 'react-redux';\r\nimport socket from '../../../utils/socket';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport Placeholder from './Placeholder';\r\n\r\nconst ListItem = React.forwardRef(({ _id, name, cards, placeHolderProps }, ref) => {\r\n    const droppableListDomID = `list-content-${_id}`;\r\n    const inputRenameRef = useRef();\r\n    const renameFormRef = useRef();\r\n    const [isOpenInputAddCard, setIsOpenInputAddCard] = useState(false);\r\n    const boardID = useSelector((state) => state.boardReducer.currentBoard._id);\r\n    const listsReducer = useSelector((state) => state.boardReducer.currentBoard.lists);\r\n    const [rename, setRename] = useState();\r\n    const [isOpenListMenu, setIsOpenListMenu] = useState(false);\r\n    const [isOpenConfirmDeleteList, setIsOpenConfirmDeleteList] = useState(false);\r\n    const [isOpenListRename, setIsOpenListRename] = useState(false);\r\n    const [cardsState, setCardsState] = useState([]);\r\n\r\n    useEffect(() => {\r\n        setCardsState(\r\n            cards.map((card, index) => {\r\n                if (isEmpty(card)) return <span></span>;\r\n                return (\r\n                    <Draggable key={card._id} draggableId={`card-${card._id}`} index={index}>\r\n                        {(provided, snapshot) => {\r\n                            return (\r\n                                <div\r\n                                    className=\"card-wrapper\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}>\r\n                                    <CardItem\r\n                                        key={card._id}\r\n                                        listName={name}\r\n                                        listID={_id}\r\n                                        {...card}\r\n                                    />\r\n                                </div>\r\n                            );\r\n                        }}\r\n                    </Draggable>\r\n                );\r\n            })\r\n        );\r\n    }, [cards, listsReducer, _id, name]);\r\n\r\n    const handleAddCartScrollReset = () => {\r\n        const listEl = document.querySelector(`#${droppableListDomID}`);\r\n        listEl.scrollTop = listEl.scrollHeight;\r\n    };\r\n\r\n    const handleOpenInputAddCard = async () => {\r\n        await setIsOpenInputAddCard(true);\r\n        handleAddCartScrollReset();\r\n    };\r\n\r\n    const handleOpenListRename = async () => {\r\n        setIsOpenListMenu(false);\r\n        await setIsOpenListRename(true);\r\n        inputRenameRef.current.focus();\r\n    };\r\n\r\n    const handleListRename = () => {\r\n        socket.emit('rename list', { rename, listID: _id, boardID });\r\n        setIsOpenListRename(false);\r\n    };\r\n\r\n    const handleDeleteList = () => {\r\n        socket.emit('delete list', { listID: _id, boardID });\r\n        setIsOpenConfirmDeleteList(false);\r\n    };\r\n\r\n    useEffect(() => {\r\n        closeOnClickOutside(renameFormRef, setIsOpenListRename);\r\n    }, []);\r\n\r\n    return (\r\n        <>\r\n            <Modal\r\n                isOpen={isOpenConfirmDeleteList}\r\n                setIsOpen={setIsOpenConfirmDeleteList}\r\n                hasChoiceButton={true}\r\n                confirmMessage=\"Are your sure delete this list ?\"\r\n                confirmFunction={() => handleDeleteList()}\r\n            />\r\n\r\n            <div ref={ref} className=\"list\">\r\n                <div className=\"list__top\">\r\n                    {isOpenListRename ? (\r\n                        <form\r\n                            className=\"list__top__rename\"\r\n                            onSubmit={() => handleListRename()}\r\n                            ref={renameFormRef}>\r\n                            <input\r\n                                ref={inputRenameRef}\r\n                                className=\"list__top__rename__input\"\r\n                                type=\"text\"\r\n                                defaultValue={name}\r\n                                onChange={(e) => setRename(e.target.value)}\r\n                            />\r\n                            <div className=\"list__top__rename__btn-wrapper\">\r\n                                <button\r\n                                    type=\"submit\"\r\n                                    className=\"list__top__rename__btn-wrapper__check list__top__rename__btn-wrapper__btn\">\r\n                                    Save\r\n                                </button>\r\n                                <button\r\n                                    onClick={() => setIsOpenListRename(false)}\r\n                                    type=\"button\"\r\n                                    className=\"list__top__rename__btn-wrapper__cancel list__top__rename__btn-wrapper__btn\">\r\n                                    Cancel\r\n                                </button>\r\n                            </div>\r\n                        </form>\r\n                    ) : (\r\n                        <span className=\"list__top__title\">{name}</span>\r\n                    )}\r\n                    {!isOpenListRename && (\r\n                        <button\r\n                            className=\"list__top__btn-menu\"\r\n                            onClick={() => setIsOpenListMenu(true)}>\r\n                            <HiDotsHorizontal />\r\n                        </button>\r\n                    )}\r\n                    <DropDown\r\n                        top=\"28px\"\r\n                        right=\"-148px\"\r\n                        isOpen={isOpenListMenu}\r\n                        setIsOpen={setIsOpenListMenu}>\r\n                        <ul className=\"listmenu\">\r\n                            <li className=\"listmenu__item\">\r\n                                <button\r\n                                    className=\"listmenu__item__btn\"\r\n                                    onClick={() => handleOpenListRename()}>\r\n                                    Rename\r\n                                </button>\r\n                            </li>\r\n                            <li className=\"listmenu__item listmenu__divider\"></li>\r\n                            <li className=\"listmenu__item\">\r\n                                <button\r\n                                    className=\"listmenu__item__btn\"\r\n                                    onClick={() => setIsOpenConfirmDeleteList(true)}>\r\n                                    Delete this list\r\n                                </button>\r\n                            </li>\r\n                        </ul>\r\n                    </DropDown>\r\n                </div>\r\n                <Droppable droppableId={`card-droppable-${_id}`} type=\"CARD\">\r\n                    {(provided, snapshot) => {\r\n                        return (\r\n                            <ul\r\n                                id={droppableListDomID}\r\n                                className=\"list__content\"\r\n                                ref={provided.innerRef}\r\n                                {...provided.droppableProps}>\r\n                                {cardsState}\r\n                                {provided.placeholder}\r\n                                {placeHolderProps.type === 'CARD' && snapshot.isDraggingOver && (\r\n                                    <Placeholder {...placeHolderProps} />\r\n                                )}\r\n                                {isOpenInputAddCard && (\r\n                                    <AddListOrCard\r\n                                        onClick={() => handleOpenInputAddCard()}\r\n                                        isOpen={isOpenInputAddCard}\r\n                                        setIsOpen={setIsOpenInputAddCard}\r\n                                        listID={_id}\r\n                                        isFirstCard={isEmpty(cards) && true}\r\n                                    />\r\n                                )}\r\n                            </ul>\r\n                        );\r\n                    }}\r\n                </Droppable>\r\n                {!isOpenInputAddCard && (\r\n                    <AddListOrCard\r\n                        onClick={() => handleOpenInputAddCard()}\r\n                        isOpen={isOpenInputAddCard}\r\n                        setIsOpen={setIsOpenInputAddCard}\r\n                        listID={_id}\r\n                        scrollBottomReset={handleAddCartScrollReset}\r\n                        isFirstCard={isEmpty(cards) && true}\r\n                    />\r\n                )}\r\n            </div>\r\n        </>\r\n    );\r\n});\r\n\r\nexport default ListItem;\r\n","import React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getDraggedDom, isEmpty, reorderArray } from '../../../utils/utils';\r\nimport ListItem from './ListItem';\r\nimport AddListOrCard from './AddList';\r\nimport { DragDropContext, Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { reorderList } from '../../../redux/actions/board.action';\r\nimport socket from '../../../utils/socket';\r\nimport Placeholder from './Placeholder';\r\n\r\nconst ListManager = (props) => {\r\n    const lists = useSelector((state) => state.boardReducer.currentBoard.lists);\r\n    const cards = useSelector((state) => state.boardReducer.currentBoard.cards);\r\n    const boardID = useSelector((state) => state.boardReducer.currentBoard._id);\r\n    const userID = useSelector((state) => state.userReducer._id);\r\n    const [listsState, setListsState] = useState([]);\r\n    const [placeHolderProps, setPlaceHolderProps] = useState({\r\n        destinationIndex: null,\r\n        draggableID: '',\r\n        currentListOverID: '',\r\n        type: '',\r\n    });\r\n    const [isDragScroll, setIsDragScroll] = useState(false);\r\n    const dispatch = useDispatch();\r\n    const handleClearDraggedAnimation = () => {\r\n        if (!placeHolderProps.draggableID) return;\r\n\r\n        const draggedEl = getDraggedDom(placeHolderProps.draggableID).children[0];\r\n        draggedEl.classList.remove('list-dragged');\r\n        setPlaceHolderProps({});\r\n    };\r\n\r\n    const handleClearDraggedAnimationCallback = useCallback(\r\n        () => handleClearDraggedAnimation(),\r\n        [handleClearDraggedAnimation]\r\n    );\r\n\r\n    useEffect(() => {\r\n        if (isEmpty(lists)) return console.log('LIST NULL');\r\n        setListsState(\r\n            lists.map((list, index) => {\r\n                return (\r\n                    <Draggable key={list._id} draggableId={`list-${list._id}`} index={index}>\r\n                        {(provided, snapshot) => {\r\n                            return (\r\n                                <div\r\n                                    className=\"list-wrapper\"\r\n                                    ref={provided.innerRef}\r\n                                    {...provided.draggableProps}\r\n                                    {...provided.dragHandleProps}>\r\n                                    <ListItem {...list} placeHolderProps={placeHolderProps} />\r\n                                </div>\r\n                            );\r\n                        }}\r\n                    </Draggable>\r\n                );\r\n            })\r\n        );\r\n    }, [lists, cards, placeHolderProps]);\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mouseup', handleClearDraggedAnimationCallback);\r\n        return () => document.removeEventListener('mouseup', handleClearDraggedAnimationCallback);\r\n    }, [placeHolderProps, handleClearDraggedAnimationCallback]);\r\n\r\n    const handleDragScroll = (e) => {\r\n        if (!isDragScroll) return;\r\n        const el = e.target;\r\n        const addScrollValue = 1;\r\n        if (Math.sign(e.movementX) === -1) {\r\n            el.scrollLeft += addScrollValue * Math.abs(e.movementX);\r\n        } else if (Math.sign(e.movementX) === 1) {\r\n            el.scrollLeft -= addScrollValue * e.movementX;\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        document.addEventListener('mouseup', (e) => {\r\n            setIsDragScroll(false);\r\n        });\r\n    }, []);\r\n\r\n    const getListIDByDraggableID = (draggabID) => {\r\n        return draggabID.substring(15);\r\n    };\r\n\r\n    const handleAddListScrollReset = () => {\r\n        const boardEl = document.querySelector('#board');\r\n        boardEl.scrollLeft = boardEl.scrollWidth;\r\n    };\r\n\r\n    const handleDragStart = (dragprops) => {\r\n        const draggedEl = getDraggedDom(dragprops.draggableId).children[0];\r\n        draggedEl.classList.add('list-dragged');\r\n        setPlaceHolderProps({});\r\n        setPlaceHolderProps({\r\n            destinationIndex: dragprops.source.index,\r\n            draggableID: dragprops.draggableId,\r\n            type: dragprops.type,\r\n        });\r\n    };\r\n\r\n    const handleDragUpdate = (dragprops) => {\r\n        if (!dragprops.destination) return;\r\n        setPlaceHolderProps({});\r\n        setPlaceHolderProps({\r\n            destinationIndex: dragprops.destination.index,\r\n            draggableID: dragprops.draggableId,\r\n            currentListOverID: dragprops.destination.droppableId,\r\n            type: dragprops.type,\r\n        });\r\n    };\r\n\r\n    const reorderCardFunc = (\r\n        currentListID,\r\n        destinationListID,\r\n        currentCardIndex,\r\n        destinationCardIndex,\r\n        lists\r\n    ) => {\r\n        const newLists = [...lists];\r\n        const currentListIndex = newLists.findIndex((list) => list._id === currentListID);\r\n        const destinationListIndex = newLists.findIndex((list) => list._id === destinationListID);\r\n        if (currentListIndex === -1 || destinationListIndex === -1) return newLists;\r\n        const cardDragged = newLists[currentListIndex].cards[currentCardIndex];\r\n        newLists[currentListIndex].cards.splice(currentCardIndex, 1);\r\n        newLists[destinationListIndex].cards.splice(destinationCardIndex, 0, cardDragged);\r\n        return newLists;\r\n    };\r\n\r\n    const handleDragEnd = (dragprops) => {\r\n        handleClearDraggedAnimationCallback();\r\n        if (!dragprops.destination) return;\r\n        const currentIndex = dragprops.source.index;\r\n        const destinationIndex = dragprops.destination.index;\r\n        if (dragprops.type === 'LIST') {\r\n            const listsReorder = reorderArray(currentIndex, destinationIndex, lists);\r\n            dispatch(reorderList(listsReorder, boardID));\r\n            socket.emit('reorder list', { listsReorder, boardID, userID });\r\n        } else if (dragprops.type === 'CARD') {\r\n            const currentListID = getListIDByDraggableID(dragprops.source.droppableId);\r\n            const destinationListID = getListIDByDraggableID(dragprops.destination.droppableId);\r\n            const currentCardIndex = dragprops.source.index;\r\n            const destinationCardIndex = dragprops.destination.index;\r\n            const listsReorder = reorderCardFunc(\r\n                currentListID,\r\n                destinationListID,\r\n                currentCardIndex,\r\n                destinationCardIndex,\r\n                lists\r\n            );\r\n            dispatch(reorderList(listsReorder, boardID));\r\n            socket.emit('reorder list', { listsReorder, boardID, userID });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <DragDropContext\r\n            onDragUpdate={handleDragUpdate}\r\n            onDragStart={handleDragStart}\r\n            onDragEnd={handleDragEnd}>\r\n            <Droppable direction=\"horizontal\" droppableId=\"list-droppable\" type=\"LIST\">\r\n                {(provided, snapshot) => {\r\n                    return (\r\n                        <div\r\n                            id=\"board\"\r\n                            ref={provided.innerRef}\r\n                            onMouseDown={(e) => {\r\n                                if (e.target.id === 'board') {\r\n                                    setIsDragScroll(true);\r\n                                }\r\n                            }}\r\n                            onMouseMove={handleDragScroll}\r\n                            onMouseUp={() => setIsDragScroll(false)}>\r\n                            {listsState}\r\n                            {provided.placeholder}\r\n                            {!isEmpty(placeHolderProps) &&\r\n                                placeHolderProps.type === 'LIST' &&\r\n                                snapshot.isDraggingOver && <Placeholder {...placeHolderProps} />}\r\n                            <AddListOrCard\r\n                                style={{ paddingRight: '25px' }}\r\n                                scrollLeftReset={handleAddListScrollReset}\r\n                                isFirstList={isEmpty(listsState) && true}\r\n                                isAddList={true}\r\n                            />\r\n                        </div>\r\n                    );\r\n                }}\r\n            </Droppable>\r\n        </DragDropContext>\r\n    );\r\n};\r\n\r\nexport default ListManager;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport PageTemplate from '../components/templates/PageTemplate';\r\nimport { connect, useDispatch, useSelector } from 'react-redux';\r\nimport { cleanCurrentBoard, getBoard } from '../redux/actions/board.action';\r\nimport Button from '../components/utils/Button';\r\nimport { HiDotsHorizontal } from 'react-icons/hi';\r\nimport { MdLock, MdAdd } from 'react-icons/md';\r\nimport { getPicturePath, isEmpty } from '../utils/utils';\r\nimport InviteMember from '../components/templates/dropdown/InviteMember';\r\nimport BoardError from './BoardError';\r\nimport PrivateOrPublic from '../components/templates/dropdown/PrivateOrPublic';\r\nimport BoardMenu from '../components/templates/dropdown/BoardMenu';\r\nimport ListManager from '../components/templates/board/ListManager';\r\n\r\nconst Board = (props) => {\r\n    const { id } = useParams();\r\n    const board = useSelector((state) => state.boardReducer.currentBoard);\r\n    const dispatch = useDispatch();\r\n    const [isOpenInviteMember, setIsOpenInviteMember] = useState(false);\r\n    const [isOpenPrivateOrPublic, setIsOpenPrivateOrPublic] = useState(false);\r\n    const [isOpenBoardMenu, setIsOpenBoardMenu] = useState(false);\r\n\r\n    useEffect(() => {\r\n        dispatch(getBoard(id));\r\n        return () => {\r\n            dispatch(cleanCurrentBoard());\r\n            setIsOpenInviteMember(false);\r\n            setIsOpenPrivateOrPublic(false);\r\n            setIsOpenBoardMenu(false);\r\n        };\r\n    }, [dispatch, id]);\r\n\r\n    return (\r\n        // METTRE LE NOM DU BOARD DYNAMIQUEMENT DANS LE TITRE\r\n        <>\r\n            {board === 'BOARD_ERROR' ? (\r\n                <BoardError />\r\n            ) : (\r\n                <PageTemplate\r\n                    boardName={board.name}\r\n                    pageTitle={`Board - ${board.name}`}\r\n                    isHeaderBoard={true}>\r\n                    <div className=\"board\">\r\n                        <BoardMenu isOpen={isOpenBoardMenu} setIsOpen={setIsOpenBoardMenu} />\r\n\r\n                        {board.NOT_MEMBER ? (\r\n                            <p className=\"board__not-member\">\r\n                                This board is public , you can't interact with him if you are not\r\n                                member\r\n                            </p>\r\n                        ) : (\r\n                            <div className=\"board__top\">\r\n                                <div className=\"board__top__left\">\r\n                                    <span>\r\n                                        <Button\r\n                                            className=\"board__top__left__btn-state\"\r\n                                            onClick={() => setIsOpenPrivateOrPublic(true)}>\r\n                                            <MdLock className=\"board__top__left__btn-state__icon\" />\r\n                                            {board.isPrivate ? 'Private' : 'Public'}\r\n                                        </Button>\r\n                                        <PrivateOrPublic\r\n                                            isOpen={isOpenPrivateOrPublic}\r\n                                            setIsOpen={setIsOpenPrivateOrPublic}\r\n                                        />\r\n                                    </span>\r\n                                    <div className=\"board__top__left__members\">\r\n                                        <ul className=\"board__top__left__members__list\">\r\n                                            {!isEmpty(board.members) &&\r\n                                                board.members.map(({ picture, _id, pseudo }) => {\r\n                                                    return (\r\n                                                        <li\r\n                                                            key={_id}\r\n                                                            className=\"board__top__left__members__list__item\">\r\n                                                            <img\r\n                                                                src={getPicturePath(\r\n                                                                    'user',\r\n                                                                    picture\r\n                                                                )}\r\n                                                                alt={`${pseudo} profil`}\r\n                                                                style={{ width: '100%' }}\r\n                                                            />\r\n                                                        </li>\r\n                                                    );\r\n                                                })}\r\n                                        </ul>\r\n                                        <div className=\"board__top__left__members__adduser-wrapper\">\r\n                                            <Button\r\n                                                className=\"board__top__left__members__btn-adduser\"\r\n                                                onClick={() => setIsOpenInviteMember(true)}>\r\n                                                <MdAdd />\r\n                                            </Button>\r\n                                            <InviteMember\r\n                                                isOpen={isOpenInviteMember}\r\n                                                setIsOpen={setIsOpenInviteMember}\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"board__top__right\">\r\n                                    <Button\r\n                                        className=\"board__top__right__btn-menu\"\r\n                                        onClick={() => setIsOpenBoardMenu(true)}>\r\n                                        <HiDotsHorizontal className=\"board__top__right__btn-menu__icon\" />\r\n                                        <span className=\"board__top__right__btn-menu__label\">\r\n                                            Show Menu\r\n                                        </span>\r\n                                    </Button>\r\n                                </div>\r\n                            </div>\r\n                        )}\r\n                        {/* ALL LIST */}\r\n                        <ListManager />\r\n                    </div>\r\n                </PageTemplate>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default connect()(Board);\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect, Route } from 'react-router-dom';\r\nimport { isEmpty } from '../../utils/utils';\r\n\r\nconst PrivateRoute = ({ component: Component, ...rest }) => {\r\n    const user = useSelector((state) => state.userReducer);\r\n\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) =>\r\n                !isEmpty(!user) ? <Component /> : <Redirect to=\"/login\" />\r\n            }></Route>\r\n    );\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport Footer from '../components/templates/Footer';\nimport Home from '../pages/Home';\nimport Login from '../pages/Auth/Login';\nimport Register from '../pages/Auth/Register';\nimport Board from '../pages/Board';\nimport { useSelector } from 'react-redux';\nimport { isEmpty } from '../utils/utils';\nimport PrivateRoute from '../components/routes/PrivateRoute.js';\n// import BoardError from '../pages/BoardError';\n\nconst MainRouter = (props) => {\n    const user = useSelector((state) => state.userReducer);\n    const isLoading = useSelector((state) => state.loaderReducer);\n    // const redirect = useSelector((state) => state.redirectReducer);\n    // FAIRE UNE ROUTE PRIVE POUR REDIGER VERS LOGIN SI PAS AUTH\n    // ET ETRE REDIGE SUR LA PAGE ACTUEL SANS BUG (CAR ACTULLEMENT BUG 1 FOIS SUR 5...)\n\n    return (\n        <>\n            <Router>\n                {/* {redirect && <Redirect to={redirect} />} */}\n                {!isLoading && isEmpty(user) && <Redirect to=\"/login\" />}\n                <Switch>\n                    <PrivateRoute exact path=\"/allboards\" component={Home} />\n                    <PrivateRoute exact path=\"/board/:id\" component={Board} />\n                    <Route exact path=\"/login\" component={Login} />\n                    <Route exact path=\"/register\" component={Register} />\n                    {!isEmpty(user) && document.location.pathname === '/' && (\n                        <Redirect to=\"/login\" />\n                    )}\n                    <>\n                        <h1>Error 404</h1>\n                    </>\n                </Switch>\n                <Footer />\n            </Router>\n        </>\n    );\n};\n\nexport default MainRouter;\n","import React from 'react';\r\nimport Loader from '../utils/Loader';\r\n\r\nconst PageLoader = (props) => {\r\n    return (\r\n        <div className=\"pageloader\">\r\n            <Loader radius=\"280\" />\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default PageLoader;\r\n","import React from 'react';\r\n\r\nconst Toast = ({ icon, info, type, onClick, style }) => {\r\n    return (\r\n        <li style={style} className={`toast toast-${type}`} onClick={onClick}>\r\n            <div className=\"toast__icon\">{icon}</div>\r\n            <span className=\"toast__info\">{info}</span>\r\n        </li>\r\n    );\r\n};\r\n\r\nexport default Toast;\r\n","import React from 'react';\r\nimport Toast from '../utils/Toast';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport { removeToast } from '../../redux/actions/toast.action';\r\n\r\nconst PopupManagerStyle = {\r\n    position: 'absolute',\r\n    top: '0',\r\n    left: '50%',\r\n    transform: 'translateX(-50%)',\r\n    zIndex: '9999999',\r\n    listStyle: 'none',\r\n    wordBreak: 'break-all',\r\n    maxHeight: '100vh',\r\n};\r\n\r\nconst PopupManager = (props) => {\r\n    const toasts = useSelector((state) => state.toastReducer);\r\n    const dispatch = useDispatch();\r\n\r\n    return (\r\n        <ul style={PopupManagerStyle}>\r\n            <TransitionGroup>\r\n                {toasts.map((toast, index) => {\r\n                    return (\r\n                        <CSSTransition\r\n                            // unmountOnExit\r\n                            key={index}\r\n                            appear={true}\r\n                            timeout={300}\r\n                            classNames=\"toast\">\r\n                            <Toast\r\n                                key={index + 1}\r\n                                icon={toast.icon}\r\n                                info={toast.info}\r\n                                type={toast.type}\r\n                                onClick={() => dispatch(removeToast(toast.id))}\r\n                            />\r\n                        </CSSTransition>\r\n                    );\r\n                })}\r\n            </TransitionGroup>\r\n        </ul>\r\n    );\r\n};\r\n\r\nexport default PopupManager;\r\n","import React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport {\r\n    addCard,\r\n    addCardLabel,\r\n    addList,\r\n    assignMemberToCard,\r\n    banMember,\r\n    changeCardDescription,\r\n    changeCardTitle,\r\n    changeDescription,\r\n    changeState,\r\n    deleteBoard,\r\n    deleteCardLabel,\r\n    deleteList,\r\n    joinBoard,\r\n    leaveBoard,\r\n    renameList,\r\n    reorderList,\r\n} from '../redux/actions/board.action';\r\nimport { addNotification } from '../redux/actions/user.action';\r\nimport socket from '../utils/socket';\r\n\r\nconst SocketManager = (props) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const dispatchCallback = useCallback(\r\n        (func) => {\r\n            dispatch(func);\r\n        },\r\n        [dispatch]\r\n    );\r\n\r\n    useEffect(() => {\r\n        socket.on('send invitation', (invitations) => {\r\n            dispatchCallback(addNotification(invitations));\r\n        });\r\n        socket.on('join board', ({ user, board }) => {\r\n            dispatchCallback(joinBoard(user, board));\r\n        });\r\n        socket.on('change state', ({ boardID, state }) => {\r\n            dispatchCallback(changeState(boardID, state));\r\n        });\r\n        socket.on('ban member', ({ boardID, memberBannedID }) => {\r\n            dispatchCallback(banMember(boardID, memberBannedID));\r\n        });\r\n        socket.on('change description', ({ description, boardID }) => {\r\n            console.log('change desc scktio');\r\n            dispatchCallback(changeDescription(description, boardID));\r\n        });\r\n        socket.on('add list', ({ listCreated, boardID, userID }) => {\r\n            console.log('add list scktio');\r\n            dispatchCallback(addList(listCreated, boardID, userID));\r\n        });\r\n        socket.on('add card', ({ cardCreated, listID, boardID, userID }) => {\r\n            console.log('add card scktio');\r\n            dispatchCallback(addCard(cardCreated, listID, boardID));\r\n        });\r\n        socket.on('rename list', ({ rename, listID, boardID }) => {\r\n            console.log('rename list scktio');\r\n            dispatchCallback(renameList(rename, listID, boardID));\r\n        });\r\n        socket.on('delete list', ({ listID, boardID }) => {\r\n            console.log('delete list scktio');\r\n            dispatchCallback(deleteList(listID, boardID));\r\n        });\r\n        socket.on('reorder list', ({ listsReorder, boardID, userID }) => {\r\n            console.log('reorder list scktio');\r\n            dispatchCallback(reorderList(listsReorder, boardID, userID));\r\n        });\r\n        socket.on('assign member card', ({ assignedMembers, boardID, listID, cardID }) => {\r\n            dispatchCallback(assignMemberToCard(assignedMembers, boardID, listID, cardID));\r\n        });\r\n        socket.on('change card title', ({ boardID, listID, cardID, cardTitle }) => {\r\n            dispatchCallback(changeCardTitle(boardID, listID, cardID, cardTitle));\r\n        });\r\n        socket.on('change card description', ({ boardID, listID, cardID, description }) => {\r\n            dispatchCallback(changeCardDescription(boardID, listID, cardID, description));\r\n        });\r\n        socket.on('card add label', ({ boardID, listID, cardID, label }) => {\r\n            dispatchCallback(addCardLabel(boardID, listID, cardID, label));\r\n        });\r\n        socket.on('card delete label', ({ boardID, listID, cardID, labelID }) => {\r\n            dispatchCallback(deleteCardLabel(boardID, listID, cardID, labelID));\r\n        });\r\n        socket.on('leave board', ({ userID, boardID }) => {\r\n            console.log('leave board scktio');\r\n            dispatchCallback(leaveBoard(userID, boardID));\r\n        });\r\n        socket.on('delete board', (boardID) => {\r\n            dispatchCallback(deleteBoard(boardID));\r\n        });\r\n    }, [dispatchCallback]);\r\n\r\n    return <></>;\r\n};\r\n\r\nexport default SocketManager;\r\n","import React, { useEffect } from 'react';\nimport Router from './router/index';\nimport PageLoader from './components/templates/PageLoader';\nimport { useSelector } from 'react-redux';\nimport ToastManager from './components/templates/ToastManager';\nimport SocketManager from './socket/socketManager';\nimport ModalManager from './components/templates/modal/ModalManager';\n\nconst App = (props) => {\n    const isLoading = useSelector((state) => state.loaderReducer);\n\n    useEffect(() => {\n        isLoading\n            ? (document.querySelector('html').style = 'overflow : hidden')\n            : (document.querySelector('html').style = 'overflow : visible');\n    }, [isLoading]);\n\n    return (\n        <div className=\"app\">\n            {isLoading && <PageLoader />}\n            <ModalManager />\n            <SocketManager />\n            <ToastManager />\n            <Router />\n        </div>\n    );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store';\nimport './scss/index.scss';\nimport { CookiesProvider } from 'react-cookie';\nimport { rememberMe } from './redux/actions/user.action';\n\nstore.dispatch(rememberMe());\n\nReactDOM.render(\n    <CookiesProvider>\n        <Provider store={store}>\n            <App />\n        </Provider>\n    </CookiesProvider>,\n    document.querySelector('#root')\n);\n"],"sourceRoot":""}